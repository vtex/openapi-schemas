{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0",
        "title": "Punchout API",
        "description": "The Punchout API enables seamless login integration between external procurement systems and VTEX. It allows procurement system users to authenticate into VTEX without manual credential management, using a secure OAuth2-like flow with real-time credential validation and one-time tokens (OTT).\r\n\r\nThe API supports two authentication flows:\r\n- **VTEX user flow**: For procurement users who exist on the VTEX platform\r\n- **Pre-authenticated user flow**: For procurement users who do not exist in VTEX\r\n\r\nOnce the login process is complete, the API provides a URL containing a one-time token. When this URL is accessed via a web browser, it redirects to the final destination URL in an authenticated session.\r\n\r\n## Security considerations\r\n\r\n- OTTs expire after 5 minutes and are single-use to prevent replay attacks\r\n- Pre-authenticated flow requires caller authentication via API key/token pair\r\n- Return URLs are validated against authorized hosts to prevent open redirect vulnerabilities\r\n- Credentials are validated against VTEX user database in the VTEX user flow"
    },
    "servers": [
        {
            "url": "https://{accountName}.{environment}.com.br",
            "description": "VTEX server URL.",
            "variables": {
                "accountName": {
                    "description": "Name of the VTEX account. Used as part of the URL",
                    "default": "apiexamples"
                },
                "environment": {
                    "description": "Environment to use. Used as part of the URL.",
                    "enum": [
                        "vtexcommercestable"
                    ],
                    "default": "vtexcommercestable"
                }
            }
        }
    ],
    "paths": {
        "/api/authenticator/punchout/start": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Start VTEX user punchout flow",
                "description": "Initiates punchout authentication for an existing VTEX user. This endpoint validates the credentials against the VTEX user database. If validation succeeds, returns a URL containing a one-time token that can be accessed via web browser to start an authenticated session.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "returnURL",
                        "in": "query", 
                        "description": "Optional path that will complement the storeHost for post-authentication redirection",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "/path"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "description": "Username of an existing VTEX user",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "Password of the VTEX user",
                                        "example": "mypassword123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK - Credentials validated successfully and OTT generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "URL containing a one-time token for authentication",
                                            "example": "https://host.com/intermediate-path?token=xyz123"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid request payload or missing required fields"
                    },
                    "401": {
                        "description": "Unauthorized - Invalid credentials"
                    },
                    "403": {
                        "description": "Forbidden - Provided returnURL does not match an authorized host"
                    }
                }
            }
        },
        "/api/authenticator/punchout/authenticated/start": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Start pre-authenticated user punchout flow",
                "description": "Initiates punchout authentication for a pre-authenticated user who doesn't exist in VTEX. This endpoint must be called with valid API key/token credentials and the caller must have the CanPunchout permission. No password validation is performed as the caller is pre-authenticated.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "returnURL",
                        "in": "query",
                        "description": "Optional path that will complement the storeHost for post-authentication redirection",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "/path"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "username"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "description": "Username for the procurement system user. Does not need to be an existing VTEX user",
                                        "example": "procurement.user@example.com"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK - Authentication successful and OTT generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "URL containing a one-time token for authentication",
                                            "example": "https://host.com/intermediate-path?token=xyz123"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid request payload or missing required fields"
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API credentials"
                    },
                    "403": {
                        "description": "Forbidden - Provided returnURL does not match an authorized host or missing CanPunchout permission"
                    }
                }
            }
        }
    },
    "security": [
        {
            "appKey": [],
            "appToken": []
        }
    ],
    "components": {
        "securitySchemes": {
            "appKey": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppKey",
                "description": "Unique identifier of the [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys)."
            },
            "appToken": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppToken",
                "description": "Secret token of the [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys)."
            }
        },
        "parameters": {
            "Content-Type": {
                "name": "Content-Type",
                "in": "header",
                "description": "Type of the content being sent.",
                "required": true,
                "style": "simple",
                "schema": {
                    "type": "string",
                    "example": "application/json"
                }
            },
            "Accept": {
                "name": "Accept",
                "in": "header",
                "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                "required": true,
                "style": "simple",
                "schema": {
                    "type": "string",
                    "example": "application/json"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Authentication"
        }
    ]
}
