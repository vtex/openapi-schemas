{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "VTEX Ads API",
        "description": "VTEX Ads API enables merchants and marketplace operators to manage advertising campaigns, track ad performance, and synchronize product catalogs within the VTEX Ads platform.\n\nThis specification includes both VTEX Ads-hosted endpoints and marketplace-hosted endpoints that must be implemented by external marketplaces for complete integration.\n\nThis API is primarily used by:\n- Store developers\n- Marketplace operators\n- Integration partners\n- Advertising platform providers\n\nWith this API you can:\n- Synchronize product catalog information for advertising\n- Track ad impressions, clicks, and views\n- Monitor conversion events and campaign performance\n- Manage ad inventory and placements\n- Handle credit transfers and balance inquiries\n- Implement SSO authentication flows\n- Export comprehensive reports in JSON or XLSX formats\n\n>ℹ️ Learn more about [VTEX Ads](https://developers.vtex.com/docs/guides) and [Integrating VTEX Ads with external marketplaces](https://developers.vtex.com/docs/guides/integrating-vtex-ads-with-external-marketplaces).\n\n## Before you begin\n\n- For bulk operations (product and inventory updates), there is a limit of 500 objects per request and 3 simultaneous requests.\n- The event URLs for tracking impressions, clicks and views must not be constructed manually — always use the URLs provided from `POST` [Get ads](https://developers.vtex.com/docs/api-reference/vtex-ads-api#post-/v1/rma/-publisher_id-).\n- Authentication is required using `X-App-Id` and `X-Api-Key` headers. Contact [our support](https://help.vtex.com/en/tutorial/how-does-vtex-support-work--2eAT5EyOvaLoHdIWDVaxC3) to obtain these credentials.\n- Some endpoints marked with `{marketplaceEndpoint}` must be implemented by the external marketplace, not VTEX Ads.\n\n## Index\n\n### Catalog synchronization\n- `POST` [Synchronize product information](https://developers.vtex.com/docs/api-reference/vtex-ads-api#post-/product/bulk/products)\n- `POST` [Synchronize inventory information](https://developers.vtex.com/docs/api-reference/vtex-ads-api#post-/product/bulk/inventories)\n\n### Ads events notification\n- `POST` [Track ad impressions](https://developers.vtex.com/docs/api-reference/vtex-ads-api#post-/v1/beacon/impression/-ad_id-)\n- `POST` [Track ad clicks](https://developers.vtex.com/docs/api-reference/vtex-ads-api#post-/v1/beacon/click/-ad_id-)\n- `POST` [Track ad views](https://developers.vtex.com/docs/api-reference/vtex-ads-api#post-/v1/beacon/view/-ad_id-)\n- `POST` [Track conversions](https://developers.vtex.com/docs/api-reference/vtex-ads-api#post-/v1/beacon/conversion)\n\n### Ads\n- `POST` [Get ads](https://developers.vtex.com/docs/api-reference/vtex-ads-api#post-/v1/rma/-publisher_id-)\n\n### Reports\n- `GET` [Export advertisers report](https://developers.vtex.com/docs/api-reference/vtex-ads-api#get-/report/v2/advertisers)\n- `GET` [Export publishers report](https://developers.vtex.com/docs/api-reference/vtex-ads-api#get-/report/v2/publishers)\n- `GET` [Export network publishers report](https://developers.vtex.com/docs/api-reference/vtex-ads-api#get-/report/network/publishers)\n- `GET` [Export campaigns report](https://developers.vtex.com/docs/api-reference/vtex-ads-api#get-/campaign/v2)\n- `GET` [Export ads report](https://developers.vtex.com/docs/api-reference/vtex-ads-api#get-/ad/results/v2)\n\n### Marketplace Integration\n- `POST` [Request SSO redirect URL](https://developers.vtex.com/docs/api-reference/vtex-ads-api#post-/api/v1/sso/marketplace)\n- `GET` [Search catalog products](https://developers.vtex.com/docs/api-reference/vtex-ads-api#get-/search) (Marketplace endpoint)\n- `GET` [Check credits balance](https://developers.vtex.com/docs/api-reference/vtex-ads-api#get-/api/v1/checking_account) (Marketplace endpoint)\n- `POST` [Request credits transfer](https://developers.vtex.com/docs/api-reference/vtex-ads-api#post-/api/v1/checking_account/transfer) (Marketplace endpoint)\n- `GET` [Get user information](https://developers.vtex.com/docs/api-reference/vtex-ads-api#get-/users/-user_id-) (Marketplace endpoint)\n- `GET` [Get seller information](https://developers.vtex.com/docs/api-reference/vtex-ads-api#get-/sellers/-seller_id-) (Marketplace endpoint)\n\n| Parameter name | Description | Type |\n| - | - | - |\n| `X-App-Id` | Publisher App ID for authorization | Authentication header |\n| `X-Api-Key` | API Key for authentication | Authentication header |\n| `Content-Type` | Type of the content being sent | Request header |\n| `Accept` | HTTP Client Negotiation Accept Header | Request header |"
    },
    "servers": [
        {
            "url": "https://api-retail-media.newtail.com.br",
            "description": "VTEX Ads server."
        },
        {
            "url": "https://events.newtail-media.newtail.com.br",
            "description": "VTEX Ads events server."
        },
        {
            "url": "{marketplaceEndpoint}",
            "description": "External marketplace server. This variable represents the base URL of the marketplace's API infrastructure that must implement specific endpoints for VTEX Ads integration.",
            "variables": {
                "marketplaceEndpoint": {
                    "description": "The base URL of the external marketplace's API server.",
                    "default": "https://marketplace-example.com"
                }
            }
        }
    ],
    "paths": {
        "/product/bulk/products": {
            "servers": [
                {
                    "url": "https://api.ads.vtex.com",
                    "description": "VTEX Ads server."
                }
            ],
            "post": {
                "tags": [
                    "Catalog synchronization"
                ],
                "summary": "Synchronize product information",
                "description": "Update the basic product data in the VTEX Ads catalog.\r\n\r\n>⚠️ For each batch insert/update, a maximum of 500 objects per request and 3 simultaneous requests are allowed.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "maxItems": 500,
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "product_sku",
                                        "name",
                                        "url",
                                        "categories"
                                    ],
                                    "properties": {
                                        "product_sku": {
                                            "type": "string",
                                            "description": "Product ID to be inserted/updated.",
                                            "example": "teste-120210"
                                        },
                                        "parent_sku": {
                                            "type": "string",
                                            "description": "SKU of the parent product.",
                                            "example": "teste-120200"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Product name.",
                                            "example": "TechBrand Laptop Model X-15 4GB 256GB SSD 15.6\" Display Windows 11 - Gray"
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "URL of the product page.",
                                            "example": "https://www.example.com/product/4100903080"
                                        },
                                        "image_url": {
                                            "type": "string",
                                            "description": "URL of the main product image.",
                                            "example": "https://images.example.com/products/01/00/img/4100903/1/4100903143_1GG.jpg"
                                        },
                                        "categories": {
                                            "type": "array",
                                            "description": "List of product categories.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "Computers",
                                                "Laptops"
                                            ]
                                        },
                                        "brand": {
                                            "type": "string",
                                            "description": "Product brand.",
                                            "example": "TechBrand"
                                        },
                                        "gtins": {
                                            "type": "array",
                                            "description": "Barcode. For Newtail Network, sending the GTIN is mandatory.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "7898915633481"
                                            ]
                                        },
                                        "metadata": {
                                            "type": "object",
                                            "description": "Additional product information.",
                                            "example": {
                                                "key": "value1"
                                            }
                                        },
                                        "tags": {
                                            "type": "array",
                                            "description": "List of product tags to be used later during ad queries (`POST` [Get ads](https://developers.vtex.com/docs/api-reference/vtex-ads-api#post-/v1/rma/-publisher_id-)) to better contextualize the search. Maximum of 10 tags per SKU, maximum of 64 characters per tag. Only works for Product campaigns.",
                                            "maxItems": 10,
                                            "items": {
                                                "type": "string",
                                                "maxLength": 64
                                            },
                                            "example": [
                                                "Special Sale"
                                            ]
                                        },
                                        "sellers": {
                                            "type": "array",
                                            "description": "List of sellers who sell that product. Maximum of 64 characters per seller.",
                                            "items": {
                                                "type": "string",
                                                "maxLength": 64
                                            },
                                            "example": [
                                                "Seller1",
                                                "Seller2"
                                            ]
                                        }
                                    }
                                }
                            },
                            "example": [
                                {
                                    "product_sku": "sample-120210",
                                    "name": "TechBrand Laptop Model X-15 4GB 256GB SSD 15.6\" Display Windows 11 - Gray",
                                    "url": "https://www.example.com/product/4100903080",
                                    "image_url": "https://images.example.com/products/01/00/img/4100903/1/4100903143_1GG.jpg",
                                    "categories": [
                                        "Computers",
                                        "Laptops"
                                    ],
                                    "brand": "TechBrand",
                                    "gtins": [
                                        "7898915633481"
                                    ],
                                    "metadata": {
                                        "key": "value1"
                                    }
                                },
                                {
                                    "product_sku": "sample-120211",
                                    "name": "TechBrand Laptop Model X-15 4GB 256GB SSD 15.6\" Display Windows 11 - Gray",
                                    "url": "https://www.example.com/product/4100903080",
                                    "categories": [
                                        "Computers",
                                        "Laptops"
                                    ],
                                    "brand": "TechBrand",
                                    "gtins": [
                                        "7898915633481"
                                    ],
                                    "tags": [
                                        "Mega Maio"
                                    ]
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "messages": {
                                            "type": "array",
                                            "description": "List of messages from the server.",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "messages": [
                                        "products will be processed soon"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "instancePath": {
                                                "type": "string",
                                                "description": "Path to the property with the error."
                                            },
                                            "schemaPath": {
                                                "type": "string",
                                                "description": "Path to the schema validation rule."
                                            },
                                            "keyword": {
                                                "type": "string",
                                                "description": "Validation keyword."
                                            },
                                            "params": {
                                                "type": "object",
                                                "description": "Error parameters."
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "Error message."
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "instancePath": "/0",
                                        "schemaPath": "#/items/required",
                                        "keyword": "required",
                                        "params": {
                                            "missingProperty": "product_sku"
                                        },
                                        "message": "must have required property 'product_sku'"
                                    },
                                    {
                                        "instancePath": "/0",
                                        "schemaPath": "#/items/required",
                                        "keyword": "required",
                                        "params": {
                                            "missingProperty": "url"
                                        },
                                        "message": "must have required property 'url'"
                                    },
                                    {
                                        "instancePath": "/0",
                                        "schemaPath": "#/items/required",
                                        "keyword": "required",
                                        "params": {
                                            "missingProperty": "image_url"
                                        },
                                        "message": "must have required property 'image_url'"
                                    },
                                    {
                                        "instancePath": "/1",
                                        "schemaPath": "#/items/required",
                                        "keyword": "required",
                                        "params": {
                                            "missingProperty": "name"
                                        },
                                        "message": "must have required property 'name'"
                                    },
                                    {
                                        "instancePath": "/1",
                                        "schemaPath": "#/items/required",
                                        "keyword": "required",
                                        "params": {
                                            "missingProperty": "url"
                                        },
                                        "message": "must have required property 'url'"
                                    },
                                    {
                                        "instancePath": "/1",
                                        "schemaPath": "#/items/required",
                                        "keyword": "required",
                                        "params": {
                                            "missingProperty": "image_url"
                                        },
                                        "message": "must have required property 'image_url'"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/product/bulk/inventories": {
            "servers": [
                {
                    "url": "https://api.ads.vtex.com",
                    "description": "VTEX Ads server."
                }
            ],
            "post": {
                "tags": [
                    "Catalog synchronization"
                ],
                "summary": "Synchronize inventory information",
                "description": "Update inventory information, which defines the price, promotional price, and product availability.\r\n\r\n>⚠️ For each batch insert/update, a maximum of 500 objects per request and 3 simultaneous requests are allowed.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "maxItems": 500,
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "product_sku",
                                        "price",
                                        "promotional_price",
                                        "is_available"
                                    ],
                                    "properties": {
                                        "product_sku": {
                                            "type": "string",
                                            "description": "Product ID to be inserted/updated.",
                                            "example": "120210"
                                        },
                                        "store_id": {
                                            "type": "string",
                                            "description": "Store identifier. If store_id is not sent, it will be interpreted that this inventory information will be used for all stores.",
                                            "example": "1"
                                        },
                                        "price": {
                                            "type": "number",
                                            "description": "Product price.",
                                            "format": "double",
                                            "example": 18.20
                                        },
                                        "promotional_price": {
                                            "type": "number",
                                            "description": "Promotional price of the product. Use 0 to remove the promotional price.",
                                            "format": "double",
                                            "example": 16.32
                                        },
                                        "is_available": {
                                            "type": "boolean",
                                            "description": "Indicates if the product is available for sale.",
                                            "example": true
                                        }
                                    }
                                }
                            },
                            "example": [
                                {
                                    "product_sku": "120210",
                                    "store_id": "1",
                                    "price": 18.20,
                                    "promotional_price": 16.32,
                                    "is_available": true
                                },
                                {
                                    "product_sku": "120212",
                                    "price": 18.20,
                                    "promotional_price": 0,
                                    "is_available": true
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "messages": {
                                            "type": "array",
                                            "description": "List of messages from the server.",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "messages": [
                                        "inventories will be processed soon"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "instancePath": {
                                                "type": "string",
                                                "description": "Path to the property with the error."
                                            },
                                            "schemaPath": {
                                                "type": "string",
                                                "description": "Path to the schema validation rule."
                                            },
                                            "keyword": {
                                                "type": "string",
                                                "description": "Validation keyword."
                                            },
                                            "params": {
                                                "type": "object",
                                                "description": "Error parameters."
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "Error message."
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "instancePath": "/0",
                                        "schemaPath": "#/items/required",
                                        "keyword": "required",
                                        "params": {
                                            "missingProperty": "product_sku"
                                        },
                                        "message": "must have required property 'product_sku'"
                                    },
                                    {
                                        "instancePath": "/0",
                                        "schemaPath": "#/items/required",
                                        "keyword": "required",
                                        "params": {
                                            "missingProperty": "promotional_price"
                                        },
                                        "message": "must have required property 'promotional_price'"
                                    },
                                    {
                                        "instancePath": "/0",
                                        "schemaPath": "#/items/required",
                                        "keyword": "required",
                                        "params": {
                                            "missingProperty": "is_available"
                                        },
                                        "message": "must have required property 'is_available'"
                                    },
                                    {
                                        "instancePath": "/1",
                                        "schemaPath": "#/items/required",
                                        "keyword": "required",
                                        "params": {
                                            "missingProperty": "price"
                                        },
                                        "message": "must have required property 'price'"
                                    },
                                    {
                                        "instancePath": "/1",
                                        "schemaPath": "#/items/required",
                                        "keyword": "required",
                                        "params": {
                                            "missingProperty": "promotional_price"
                                        },
                                        "message": "must have required property 'promotional_price'"
                                    },
                                    {
                                        "instancePath": "/1",
                                        "schemaPath": "#/items/required",
                                        "keyword": "required",
                                        "params": {
                                            "missingProperty": "is_available"
                                        },
                                        "message": "must have required property 'is_available'"
                                    },
                                    {
                                        "instancePath": "/2",
                                        "schemaPath": "#/items/required",
                                        "keyword": "required",
                                        "params": {
                                            "missingProperty": "price"
                                        },
                                        "message": "must have required property 'price'"
                                    },
                                    {
                                        "instancePath": "/2",
                                        "schemaPath": "#/items/required",
                                        "keyword": "required",
                                        "params": {
                                            "missingProperty": "is_available"
                                        },
                                        "message": "must have required property 'is_available'"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/v1/beacon/impression/{ad_id}": {
            "servers": [
                {
                    "url": "https://events-api.ads.vtex.com",
                    "description": "VTEX Ads events server."
                }
            ],
            "post": {
                "tags": [
                    "Ads events notification"
                ],
                "summary": "Track ad impressions",
                "description": "Track when an ad is rendered or visible to a user. The event URL must not be constructed manually — always use the URL provided from `POST` [Get ads](https://developers.vtex.com/docs/api-reference/vtex-ads-api#post-/v1/rma/-publisher_id-).\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "ad_id",
                        "in": "path",
                        "description": "Unique identifier of the ad.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "4a94bc6e-7db1-425f-8430-cb4d17488b3b"
                        }
                    },
                    {
                        "name": "pos",
                        "in": "query",
                        "description": "Position of the ad.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "session_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "description": "Unique identifier for the user within your platform. It must remain consistent across all user touchpoints and sales channels.",
                                        "example": "6f92d1e9-00b6-4f8b-9645-faeab321e1cc"
                                    },
                                    "session_id": {
                                        "type": "string",
                                        "description": "The user's session identifier. It has a limited lifespan and helps determine when a user transitions from anonymous to identified state.",
                                        "example": "5898b8d1-c250-4bb5-931b-8b9d0ee7b499"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "messages": {
                                            "type": "array",
                                            "description": "List of messages from the server.",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "messages": [
                                        "impression will be processed soon"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "instancePath": {
                                                "type": "string",
                                                "description": "Path to the property with the error."
                                            },
                                            "keyword": {
                                                "type": "string",
                                                "description": "Validation keyword."
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "Error message."
                                            },
                                            "params": {
                                                "type": "object",
                                                "description": "Error parameters."
                                            },
                                            "schemaPath": {
                                                "type": "string",
                                                "description": "Path to the schema validation rule."
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "instancePath": "",
                                        "keyword": "required",
                                        "message": "must have required property 'user_id'",
                                        "params": {
                                            "missingProperty": "user_id"
                                        },
                                        "schemaPath": "#/anyOf/0/required"
                                    },
                                    {
                                        "instancePath": "",
                                        "keyword": "required",
                                        "message": "must have required property 'session_id'",
                                        "params": {
                                            "missingProperty": "session_id"
                                        },
                                        "schemaPath": "#/anyOf/1/required"
                                    },
                                    {
                                        "instancePath": "",
                                        "keyword": "anyOf",
                                        "message": "must match a schema in anyOf",
                                        "params": {},
                                        "schemaPath": "#/anyOf"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/v1/beacon/click/{ad_id}": {
            "servers": [
                {
                    "url": "https://events-api.ads.vtex.com",
                    "description": "VTEX Ads events server."
                }
            ],
            "post": {
                "tags": [
                    "Ads events notification"
                ],
                "summary": "Track ad clicks",
                "description": "Track when a user clicks on an ad. The event URL must not be constructed manually — always use the URL provided from `POST` [Get ads](https://developers.vtex.com/docs/api-reference/vtex-ads-api#post-/v1/rma/-publisher_id-).\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "ad_id",
                        "in": "path",
                        "description": "Unique identifier of the ad.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "4a94bc6e-7db1-425f-8430-cb4d17488b3b"
                        }
                    },
                    {
                        "name": "pos",
                        "in": "query",
                        "description": "Position of the ad.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "session_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "description": "Unique identifier for the user within your platform. It must remain consistent across all user touchpoints and sales channels.",
                                        "example": "6f92d1e9-00b6-4f8b-9645-faeab321e1cc"
                                    },
                                    "session_id": {
                                        "type": "string",
                                        "description": "The user's session identifier. It has a limited lifespan and helps determine when a user transitions from anonymous to identified state.",
                                        "example": "5898b8d1-c250-4bb5-931b-8b9d0ee7b499"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "messages": {
                                            "type": "array",
                                            "description": "List of messages from the server.",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "messages": [
                                        "click will be processed soon"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "instancePath": {
                                                "type": "string",
                                                "description": "Path to the property with the error."
                                            },
                                            "keyword": {
                                                "type": "string",
                                                "description": "Validation keyword."
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "Error message."
                                            },
                                            "params": {
                                                "type": "object",
                                                "description": "Error parameters."
                                            },
                                            "schemaPath": {
                                                "type": "string",
                                                "description": "Path to the schema validation rule."
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "instancePath": "",
                                        "keyword": "required",
                                        "message": "must have required property 'user_id'",
                                        "params": {
                                            "missingProperty": "user_id"
                                        },
                                        "schemaPath": "#/anyOf/0/required"
                                    },
                                    {
                                        "instancePath": "",
                                        "keyword": "required",
                                        "message": "must have required property 'session_id'",
                                        "params": {
                                            "missingProperty": "session_id"
                                        },
                                        "schemaPath": "#/anyOf/1/required"
                                    },
                                    {
                                        "instancePath": "",
                                        "keyword": "anyOf",
                                        "message": "must match a schema in anyOf",
                                        "params": {},
                                        "schemaPath": "#/anyOf"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/v1/beacon/view/{ad_id}": {
            "servers": [
                {
                    "url": "https://events-api.ads.vtex.com",
                    "description": "VTEX Ads events server."
                }
            ],
            "post": {
                "tags": [
                    "Ads events notification"
                ],
                "summary": "Track ad views",
                "description": "Track views for banner ads. The event URL must not be constructed manually — always use the URL provided from `POST` [Get ads](https://developers.vtex.com/docs/api-reference/vtex-ads-api#post-/v1/rma/-publisher_id-).\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "ad_id",
                        "in": "path",
                        "description": "Unique identifier of the ad.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "4a94bc6e-7db1-425f-8430-cb4d17488b3b"
                        }
                    },
                    {
                        "name": "pos",
                        "in": "query",
                        "description": "Position of the ad.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "session_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "description": "Unique identifier for the user within your platform. It must remain consistent across all user touchpoints and sales channels.",
                                        "example": "6f92d1e9-00b6-4f8b-9645-faeab321e1cc"
                                    },
                                    "session_id": {
                                        "type": "string",
                                        "description": "The user's session identifier. It has a limited lifespan and helps determine when a user transitions from anonymous to identified state.",
                                        "example": "5898b8d1-c250-4bb5-931b-8b9d0ee7b499"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "messages": {
                                            "type": "array",
                                            "description": "List of messages from the server.",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "messages": [
                                        "view will be processed soon"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "instancePath": {
                                                "type": "string",
                                                "description": "Path to the property with the error."
                                            },
                                            "keyword": {
                                                "type": "string",
                                                "description": "Validation keyword."
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "Error message."
                                            },
                                            "params": {
                                                "type": "object",
                                                "description": "Error parameters."
                                            },
                                            "schemaPath": {
                                                "type": "string",
                                                "description": "Path to the schema validation rule."
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "instancePath": "",
                                        "keyword": "required",
                                        "message": "must have required property 'user_id'",
                                        "params": {
                                            "missingProperty": "user_id"
                                        },
                                        "schemaPath": "#/anyOf/0/required"
                                    },
                                    {
                                        "instancePath": "",
                                        "keyword": "required",
                                        "message": "must have required property 'session_id'",
                                        "params": {
                                            "missingProperty": "session_id"
                                        },
                                        "schemaPath": "#/anyOf/1/required"
                                    },
                                    {
                                        "instancePath": "",
                                        "keyword": "anyOf",
                                        "message": "must match a schema in anyOf",
                                        "params": {},
                                        "schemaPath": "#/anyOf"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/v1/beacon/conversion": {
            "servers": [
                {
                    "url": "https://events-api.ads.vtex.com",
                    "description": "VTEX Ads events server."
                }
            ],
            "post": {
                "tags": [
                    "Ads events notification"
                ],
                "summary": "Track conversions",
                "description": "Track when an ad leads to a purchase. This endpoint is used to notify one or more orders (sending them in a batch).\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "publisher_id",
                                    "user_id",
                                    "session_id",
                                    "order_id",
                                    "email_hashed",
                                    "items",
                                    "created_at"
                                ],
                                "properties": {
                                    "channel": {
                                        "type": "string",
                                        "description": "Identifies the conversion channel.",
                                        "example": "ecommerce"
                                    },
                                    "publisher_id": {
                                        "type": "string",
                                        "description": "Publisher identification.",
                                        "example": "xxx"
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "description": "User identification.",
                                        "example": "6f92d1e9-00b6-4f8b-9645-faeab321e1cc"
                                    },
                                    "session_id": {
                                        "type": "string",
                                        "description": "Identification of the session in which the purchase was made, to help attribute the sale to ads.",
                                        "example": "5898b8d1-c250-4bb5-931b-8b9d0ee7b499"
                                    },
                                    "order_id": {
                                        "type": "string",
                                        "description": "Order identification.",
                                        "example": "123"
                                    },
                                    "email_hashed": {
                                        "type": "string",
                                        "description": "Hashed user email identification.",
                                        "example": "xyz"
                                    },
                                    "items": {
                                        "type": "array",
                                        "description": "List of items purchased in the order.",
                                        "items": {
                                            "type": "object",
                                            "description": "Order item information",
                                            "required": [
                                                "sku",
                                                "quantity",
                                                "price",
                                                "promotional_price"
                                            ],
                                            "properties": {
                                                "sku": {
                                                    "type": "string",
                                                    "description": "Product SKU identification.",
                                                    "example": "12221"
                                                },
                                                "quantity": {
                                                    "type": "number",
                                                    "description": "Quantity of product purchased.",
                                                    "format": "double",
                                                    "example": 1
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "description": "Product 'from' price. Not multiplied by quantity.",
                                                    "format": "double",
                                                    "example": 2000
                                                },
                                                "promotional_price": {
                                                    "type": "number",
                                                    "description": "Product 'for' price (discounted price). Not multiplied by quantity.",
                                                    "format": "double",
                                                    "example": 1899
                                                },
                                                "seller_id": {
                                                    "type": "string",
                                                    "description": "Seller ID identification.",
                                                    "example": "1234",
                                                    "nullable": true
                                                },
                                                "product_id": {
                                                    "type": "string",
                                                    "description": "Unique product identification that includes the SKU.",
                                                    "example": "4567"
                                                }
                                            }
                                        }
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "description": "Order creation date in ISO 8601 format (UTC - no timezone).",
                                        "example": "2023-01-01T09:20:00Z"
                                    },
                                    "is_company": {
                                        "type": "boolean",
                                        "description": "Indicates if the sale was made to an individual or a company. Default=false.",
                                        "example": false
                                    },
                                    "gender": {
                                        "type": "string",
                                        "description": "Indicates customer's gender. F: female, M: male, O: other. Default=null.",
                                        "enum": [
                                            "F",
                                            "M",
                                            "O",
                                            null
                                        ],
                                        "example": "M"
                                    },
                                    "uf": {
                                        "type": "string",
                                        "description": "Indicates the state where the order was made.",
                                        "example": "SP"
                                    },
                                    "city": {
                                        "type": "string",
                                        "description": "Indicates the name of the city where the customer bought.",
                                        "example": "São Paulo"
                                    },
                                    "phone_hashed": {
                                        "type": "string",
                                        "description": "Hashed user phone number identification.",
                                        "example": "abc123"
                                    },
                                    "social_id_hashed": {
                                        "type": "string",
                                        "description": "Hashed user CPF or CNPJ identification.",
                                        "example": "def456"
                                    },
                                    "first_name_hashed": {
                                        "type": "string",
                                        "description": "Hashed user first name identification.",
                                        "example": "ghi789"
                                    },
                                    "last_name_hashed": {
                                        "type": "string",
                                        "description": "Hashed user last name identification.",
                                        "example": "jkl012"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "messages": {
                                            "type": "array",
                                            "description": "List of messages from the server.",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "messages": [
                                        "conversion will be processed soon"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "instancePath": {
                                                "type": "string",
                                                "description": "Path to the property with the error."
                                            },
                                            "keyword": {
                                                "type": "string",
                                                "description": "Validation keyword."
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "Error message."
                                            },
                                            "params": {
                                                "type": "object",
                                                "description": "Error parameters."
                                            },
                                            "schemaPath": {
                                                "type": "string",
                                                "description": "Path to the schema validation rule."
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "instancePath": "",
                                        "keyword": "required",
                                        "message": "must have required property 'user_id'",
                                        "params": {
                                            "missingProperty": "user_id"
                                        },
                                        "schemaPath": "#/required"
                                    },
                                    {
                                        "instancePath": "",
                                        "keyword": "required",
                                        "message": "must have required property 'order_id'",
                                        "params": {
                                            "missingProperty": "order_id"
                                        },
                                        "schemaPath": "#/required"
                                    },
                                    {
                                        "instancePath": "",
                                        "keyword": "required",
                                        "message": "must have required property 'publisher_id'",
                                        "params": {
                                            "missingProperty": "publisher_id"
                                        },
                                        "schemaPath": "#/required"
                                    },
                                    {
                                        "instancePath": "",
                                        "keyword": "required",
                                        "message": "must have required property 'items'",
                                        "params": {
                                            "missingProperty": "items"
                                        },
                                        "schemaPath": "#/required"
                                    },
                                    {
                                        "instancePath": "",
                                        "keyword": "required",
                                        "message": "must have required property 'created_at'",
                                        "params": {
                                            "missingProperty": "created_at"
                                        },
                                        "schemaPath": "#/required"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/v1/rma/{publisher_id}": {
            "servers": [
                {
                    "url": "https://api.ads.vtex.com",
                    "description": "VTEX Ads server."
                }
            ],
            "post": {
                "tags": [
                    "Ads"
                ],
                "summary": "Get ads",
                "description": "Retrieve Product and Banner ad formats based on context and placements.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "description": "Publisher identifier provided by your account manager",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "0d675bf6-03f6-4b81-9617-e79dffddc3ab"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "session_id",
                                    "context",
                                    "placements"
                                ],
                                "properties": {
                                    "session_id": {
                                        "type": "string",
                                        "description": "Unique identifier for a user session. Must contain only alphanumeric characters.",
                                        "example": "f361661f5986477990092a34562f18347"
                                    },
                                    "user_id": {
                                        "type": "string",
                                        "description": "Unique identifier for the user. Must contain only alphanumeric characters.",
                                        "example": "6a746448cf5942bcaa3da426844ad115"
                                    },
                                    "store_id": {
                                        "type": "string",
                                        "description": "Filters ads based on the store's inventory. If not provided, ads with any available inventory will be returned.",
                                        "example": "1"
                                    },
                                    "context": {
                                        "type": "string",
                                        "description": "Context where the ad will be displayed.",
                                        "example": "search",
                                        "enum": [
                                            "home",
                                            "category",
                                            "search",
                                            "product_page",
                                            "brand_page",
                                            "digital_signage"
                                        ]
                                    },
                                    "term": {
                                        "type": "string",
                                        "description": "Search terms used for product searches. Required only in search context.",
                                        "example": "desodorante"
                                    },
                                    "category_name": {
                                        "type": "string",
                                        "description": "Name of the category used for targeting. Always provide the full breadcrumb path of the current category. Required only in category context.",
                                        "example": "Daily Care > Deodorant > Spray"
                                    },
                                    "product_sku": {
                                        "type": "string",
                                        "description": "SKU ID used for targeting. Required only in product context.",
                                        "example": "12345"
                                    },
                                    "brand_name": {
                                        "type": "string",
                                        "description": "Name of the brand to filter products by. Required only in brand context.",
                                        "example": "Nivea"
                                    },
                                    "placements": {
                                        "type": "object",
                                        "description": "Placements are used to query multiple ads for different site regions with their own configurations.",
                                        "additionalProperties": {
                                            "type": "object",
                                            "required": [
                                                "quantity",
                                                "size",
                                                "types"
                                            ],
                                            "properties": {
                                                "quantity": {
                                                    "type": "integer",
                                                    "description": "Number of ads to be returned.",
                                                    "example": 3
                                                },
                                                "size": {
                                                    "type": "string",
                                                    "description": "Expected ad size. Important when a region has a predefined size and requires a media asset fitting that size.",
                                                    "example": "desktop"
                                                },
                                                "types": {
                                                    "type": "array",
                                                    "description": "Types of ads that can be returned in this request.",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "product",
                                                            "banner",
                                                            "sponsored_brand",
                                                            "digital_signage"
                                                        ]
                                                    },
                                                    "example": [
                                                        "banner",
                                                        "product"
                                                    ]
                                                },
                                                "asset_types": {
                                                    "type": "array",
                                                    "description": "Accepted media types (valid for banner and sponsored_brands).",
                                                    "items": {
                                                        "type": "string",
                                                        "enum": [
                                                            "image",
                                                            "video"
                                                        ]
                                                    },
                                                    "example": [
                                                        "image"
                                                    ]
                                                },
                                                "allow_sku_duplications": {
                                                    "type": "boolean",
                                                    "description": "Allows the same SKU ads to appear multiple times in the same placement. Default=false.",
                                                    "example": false
                                                }
                                            }
                                        },
                                        "example": {
                                            "placementName1": {
                                                "quantity": 1,
                                                "size": "desktop",
                                                "types": [
                                                    "banner"
                                                ]
                                            },
                                            "placementName2": {
                                                "quantity": 2,
                                                "size": "mobile",
                                                "types": [
                                                    "product"
                                                ]
                                            }
                                        }
                                    },
                                    "product_attributes": {
                                        "type": "object",
                                        "description": "Additional product information. Used when catalog data is incomplete and these details need to be sent during ad queries.",
                                        "properties": {
                                            "category_name": {
                                                "type": "string",
                                                "description": "Product category.",
                                                "example": "Daily Care > Deodorant > Spray"
                                            },
                                            "brand_name": {
                                                "type": "string",
                                                "description": "Product brand.",
                                                "example": "Dove"
                                            }
                                        }
                                    },
                                    "channel": {
                                        "type": "string",
                                        "description": "Indicates the device type accessing the ad.",
                                        "example": "site",
                                        "enum": [
                                            "site",
                                            "msite",
                                            "app"
                                        ]
                                    },
                                    "device_id": {
                                        "type": "string",
                                        "description": "Unique device identifier. Required for digital signage.",
                                        "example": "screen identifier"
                                    },
                                    "userAgent": {
                                        "type": "string",
                                        "description": "Provides meta-information about the client environment accessing the ad.",
                                        "example": "App/1.0 (Pixel 6; Android 12.0)"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "description": "Filters ads that contain at least one of the requested tags. Only works with product campaigns.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Mega Maio"
                                        ]
                                    },
                                    "skus": {
                                        "type": "array",
                                        "description": "SKU filter for querying sponsored products. Note: Only sponsored product campaigns respect this filter.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "12345",
                                            "67890"
                                        ]
                                    },
                                    "dedup_campaign_ads": {
                                        "type": "boolean",
                                        "description": "Specifies whether results should be deduplicated by campaign, so at most one ad per campaign is returned. Default=false.",
                                        "example": false
                                    },
                                    "dedup_ads": {
                                        "type": "boolean",
                                        "description": "Specifies whether results should deduplicate ads across multiple placements (use only when querying multiple placements simultaneously). Default=false.",
                                        "example": false
                                    },
                                    "segmentation": {
                                        "type": "array",
                                        "description": "Allows campaign segmentation based on user information.",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "key",
                                                "values"
                                            ],
                                            "properties": {
                                                "key": {
                                                    "type": "string",
                                                    "description": "Type of segmentation.",
                                                    "enum": [
                                                        "AGE",
                                                        "GENDER",
                                                        "STATE",
                                                        "CITY",
                                                        "AUDIENCES"
                                                    ],
                                                    "example": "STATE"
                                                },
                                                "values": {
                                                    "type": "array",
                                                    "description": "One or more accepted values.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 1,
                                                    "example": [
                                                        "RJ"
                                                    ]
                                                }
                                            }
                                        },
                                        "example": [
                                            {
                                                "key": "STATE",
                                                "values": [
                                                    "RJ"
                                                ]
                                            },
                                            {
                                                "key": "CITY",
                                                "values": [
                                                    "Rio de Janeiro"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "description": "List of ads for a specific placement.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "ad_id": {
                                                    "type": "string",
                                                    "description": "Unique identifier of the ad."
                                                },
                                                "media_url": {
                                                    "type": "string",
                                                    "description": "URL of the image to be displayed."
                                                },
                                                "destination_url": {
                                                    "type": "string",
                                                    "description": "Destination URL of the ad (not all ads have a destination).",
                                                    "nullable": true
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "Type of ad.",
                                                    "enum": [
                                                        "banner",
                                                        "product",
                                                        "sponsored_brand"
                                                    ]
                                                },
                                                "seller_id": {
                                                    "type": "string",
                                                    "description": "Identifier of the seller.",
                                                    "nullable": true
                                                },
                                                "click_url": {
                                                    "type": "string",
                                                    "description": "URL of the click event beacon for the ad."
                                                },
                                                "impression_url": {
                                                    "type": "string",
                                                    "description": "URL of the impression event beacon for the ad."
                                                },
                                                "view_url": {
                                                    "type": "string",
                                                    "description": "URL of the view event beacon for the ad."
                                                },
                                                "product_sku": {
                                                    "type": "string",
                                                    "description": "Product identifier. Present when ad type is 'product'."
                                                },
                                                "product_name": {
                                                    "type": "string",
                                                    "description": "Product name. Present when ad type is 'product'."
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "placementName1": [
                                        {
                                            "ad_id": "6d2d8837-bf5a-4ba4-90d2-5546cb18d5ce",
                                            "media_url": "https://cdn.newtail.com.br/retail_media/ads/2023/05/03/f97a938660e56fe38a9c9ade21c27df8-1280x256-red.png",
                                            "destination_url": null,
                                            "type": "banner",
                                            "click_url": "https://events-api.ads.vtex.com/v1/beacon/click/6d2d8837-bf5a-4ba4-90d2-5546cb18d5ce?publisher_id=0d675bf6-03f6-4b81-9617-e79dffddc3ab&ad_type=banner",
                                            "impression_url": "https://events-api.ads.vtex.com/v1/beacon/impression/6d2d8837-bf5a-4ba4-90d2-5546cb18d5ce?publisher_id=0d675bf6-03f6-4b81-9617-e79dffddc3ab&ad_type=banner",
                                            "view_url": "https://events-api.ads.vtex.com/v1/beacon/view/6d2d8837-bf5a-4ba4-90d2-5546cb18d5ce?publisher_id=0d675bf6-03f6-4b81-9617-e79dffddc3ab&ad_type=banner"
                                        }
                                    ],
                                    "placementName2": [
                                        {
                                            "ad_id": "846fbf5e-6980-4a5e-a4a1-9b2a2dcbafb7",
                                            "product_sku": "10001236",
                                            "type": "product",
                                            "click_url": "https://events-api.ads.vtex.com/v1/beacon/click/846fbf5e-6980-4a5e-a4a1-9b2a2dcbafb7?publisher_id=0d675bf6-03f6-4b81-9617-e79dffddc3ab&ad_type=product",
                                            "impression_url": "https://events-api.ads.vtex.com/v1/beacon/impression/846fbf5e-6980-4a5e-a4a1-9b2a2dcbafb7?publisher_id=0d675bf6-03f6-4b81-9617-e79dffddc3ab&ad_type=product",
                                            "view_url": "https://events-api.ads.vtex.com/v1/beacon/view/846fbf5e-6980-4a5e-a4a1-9b2a2dcbafb7?publisher_id=0d675bf6-03f6-4b81-9617-e79dffddc3ab&ad_type=product"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search": {
            "servers": [
                {
                    "url": "{marketplaceEndpoint}",
                    "description": "External marketplace server catalog endpoint. VTEX Ads will call this endpoint on the marketplace's infrastructure with the /search suffix and required parameters."
                }
            ],
            "get": {
                "tags": [
                    "Marketplace integration - Catalog"
                ],
                "summary": "Search catalog products",
                "description": "Query the retailer's catalog to search for products with various filters. This API enables product synchronization between marketplaces and VTEX Ads.\r\n\r\n>ℹ️ This endpoint must be implemented by the marketplace. For more information, see [Integrating VTEX Ads with external marketplaces](https://developers.vtex.com/docs/guides/integrating-vtex-ads-with-external-marketplaces).\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "seller_id",
                        "in": "query",
                        "description": "Filter by seller identifier.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "seller123"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Partial search by product name.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Red Sneakers"
                        }
                    },
                    {
                        "name": "skus",
                        "in": "query",
                        "description": "Filter by a list of SKUs (comma-separated).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "sku1,sku2,sku3"
                        }
                    },
                    {
                        "name": "eans",
                        "in": "query",
                        "description": "Filter by a list of EANs (comma-separated).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1234567890123,9876543210987"
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Number of items that should be returned.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number. Starts at 0 (zero).",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "product_sku",
                                            "name",
                                            "categories",
                                            "brand",
                                            "urls",
                                            "stocks"
                                        ],
                                        "properties": {
                                            "product_sku": {
                                                "type": "string",
                                                "description": "Unique identifier of the parent product.",
                                                "example": "sku123"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Product title.",
                                                "example": "Red Sneakers"
                                            },
                                            "image_url": {
                                                "type": "string",
                                                "description": "Public product image URL, can be just a thumbnail.",
                                                "example": "https://example.com/image.jpg"
                                            },
                                            "categories": {
                                                "type": "string",
                                                "description": "Product categories.",
                                                "example": "Sports/Shoes"
                                            },
                                            "brand": {
                                                "type": "string",
                                                "description": "Product brand name.",
                                                "example": "Nike"
                                            },
                                            "gtins": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of EANs.",
                                                "example": ["1234567890123"]
                                            },
                                            "urls": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "url"
                                                    ],
                                                    "properties": {
                                                        "site": {
                                                            "type": "string",
                                                            "description": "Site brand name.",
                                                            "example": "example-store"
                                                        },
                                                        "url": {
                                                            "type": "string",
                                                            "description": "Product URL.",
                                                            "example": "https://example.com/product/red-sneakers"
                                                        }
                                                    }
                                                },
                                                "description": "Product URL information."
                                            },
                                            "stocks": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "required": [
                                                        "quantity"
                                                    ],
                                                    "properties": {
                                                        "site": {
                                                            "type": "string",
                                                            "description": "Site brand name.",
                                                            "example": "example-store"
                                                        },
                                                        "seller_id": {
                                                            "type": "string",
                                                            "description": "Seller ID identifier.",
                                                            "example": "seller123"
                                                        },
                                                        "quantity": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "description": "Stock quantity.",
                                                            "example": 10
                                                        }
                                                    }
                                                },
                                                "description": "Product stock information."
                                            },
                                            "metadata": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "string"
                                                },
                                                "description": "Information returned during ad queries without modification.",
                                                "example": {
                                                    "color": "red",
                                                    "size": "42"
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "product_sku": "sku123",
                                        "name": "Red Sneakers",
                                        "image_url": "https://example.com/image.jpg",
                                        "categories": "Sports/Shoes",
                                        "brand": "Nike",
                                        "gtins": ["1234567890123"],
                                        "urls": [
                                            {
                                                "site": "example-store",
                                                "url": "https://example.com/product/red-sneakers"
                                            }
                                        ],
                                        "stocks": [
                                            {
                                                "site": "example-store",
                                                "seller_id": "seller123",
                                                "quantity": 10
                                            }
                                        ],
                                        "metadata": {
                                            "color": "red",
                                            "size": "42"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BasicAuth": []
                    }
                ]
            }
        },
        "/api/v1/advertisers": {
            "servers": [
                {
                    "url": "https://api.ads.vtex.com",
                    "description": "VTEX Ads server."
                }
            ],
            "get": {
                "tags": [
                    "Marketplace Integration - Advertiser management"
                ],
                "summary": "Search advertisers",
                "description": "Search for advertisers with optional filters.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Number of items to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (starts at 0).",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by advertiser name (partial match).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Nike Store"
                        }
                    },
                    {
                        "name": "seller_id",
                        "in": "query",
                        "description": "Filter by seller identifier.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "seller123"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "seller_id": {
                                                "type": "string",
                                                "description": "Unique seller identifier.",
                                                "example": "seller123"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Advertiser name.",
                                                "example": "Nike Store"
                                            },
                                            "cnpj": {
                                                "type": "string",
                                                "description": "Tax ID number.",
                                                "example": "12345678000190"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Marketplace Integration - Advertiser management"
                ],
                "summary": "Create advertiser",
                "description": "Create a new advertiser entity.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "seller_id",
                                    "name"
                                ],
                                "properties": {
                                    "seller_id": {
                                        "type": "string",
                                        "description": "Unique seller identifier.",
                                        "example": "seller123"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Advertiser name.",
                                        "example": "Nike Store"
                                    },
                                    "cnpj": {
                                        "type": "string",
                                        "description": "Tax ID number.",
                                        "example": "12345678000190"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "seller_id": {
                                            "type": "string",
                                            "description": "Unique seller identifier.",
                                            "example": "seller123"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Advertiser name.",
                                            "example": "Nike Store"
                                        },
                                        "cnpj": {
                                            "type": "string",
                                            "description": "Tax ID number.",
                                            "example": "12345678000190"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/advertisers/{seller_id}": {
            "servers": [
                {
                    "url": "https://api.ads.vtex.com",
                    "description": "VTEX Ads server."
                }
            ],
            "get": {
                "tags": [
                    "Marketplace Integration - Advertiser management"
                ],
                "summary": "Get advertiser by seller ID",
                "description": "Retrieve an advertiser by their seller ID.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "seller_id",
                        "in": "path",
                        "description": "Unique identifier of the seller.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "seller123"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "seller_id": {
                                            "type": "string",
                                            "description": "Unique seller identifier.",
                                            "example": "seller123"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Advertiser name.",
                                            "example": "Nike Store"
                                        },
                                        "cnpj": {
                                            "type": "string",
                                            "description": "Tax ID number.",
                                            "example": "12345678000190"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Marketplace Integration - Advertiser management"
                ],
                "summary": "Update advertiser by seller ID",
                "description": "Update an advertiser's information by their seller ID.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "seller_id",
                        "in": "path",
                        "description": "Unique identifier of the seller.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "seller123"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Advertiser name.",
                                        "example": "Nike Store Updated"
                                    },
                                    "cnpj": {
                                        "type": "string",
                                        "description": "Tax ID number.",
                                        "example": "12345678000190"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "seller_id": {
                                            "type": "string",
                                            "description": "Unique seller identifier.",
                                            "example": "seller123"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Advertiser name.",
                                            "example": "Nike Store Updated"
                                        },
                                        "cnpj": {
                                            "type": "string",
                                            "description": "Tax ID number.",
                                            "example": "12345678000190"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/campaigns": {
            "servers": [
                {
                    "url": "https://api.ads.vtex.com",
                    "description": "VTEX Ads server."
                }
            ],
            "get": {
                "tags": [
                    "Marketplace Integration - Campaign management"
                ],
                "summary": "List campaigns",
                "description": "List all campaigns with optional filters.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Number of items to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (starts at 0).",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by campaign status.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "paused",
                                "ended"
                            ],
                            "example": "active"
                        }
                    },
                    {
                        "name": "seller_id",
                        "in": "query",
                        "description": "Filter by seller identifier.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "seller123"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "campaign_id": {
                                                "type": "string",
                                                "description": "Unique campaign identifier.",
                                                "example": "camp-123456"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Campaign name.",
                                                "example": "Summer Sale 2024"
                                            },
                                            "seller_id": {
                                                "type": "string",
                                                "description": "Seller identifier.",
                                                "example": "seller123"
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "active",
                                                    "paused",
                                                    "ended"
                                                ],
                                                "description": "Campaign status.",
                                                "example": "active"
                                            },
                                            "budget": {
                                                "type": "number",
                                                "description": "Campaign budget.",
                                                "example": 10000.0
                                            },
                                            "start_date": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "Campaign start date.",
                                                "example": "2024-01-01T00:00:00Z"
                                            },
                                            "end_date": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "Campaign end date.",
                                                "example": "2024-12-31T23:59:59Z"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Marketplace Integration - Campaign management"
                ],
                "summary": "Create campaign",
                "description": "Create a new advertising campaign.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "seller_id",
                                    "budget"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Campaign name.",
                                        "example": "Summer Sale 2024"
                                    },
                                    "seller_id": {
                                        "type": "string",
                                        "description": "Seller identifier.",
                                        "example": "seller123"
                                    },
                                    "budget": {
                                        "type": "number",
                                        "description": "Campaign budget.",
                                        "example": 10000.0
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Campaign start date.",
                                        "example": "2024-01-01T00:00:00Z"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Campaign end date.",
                                        "example": "2024-12-31T23:59:59Z"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "campaign_id": {
                                            "type": "string",
                                            "description": "Unique campaign identifier.",
                                            "example": "camp-123456"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Campaign name.",
                                            "example": "Summer Sale 2024"
                                        },
                                        "seller_id": {
                                            "type": "string",
                                            "description": "Seller identifier.",
                                            "example": "seller123"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "active",
                                                "paused",
                                                "ended"
                                            ],
                                            "description": "Campaign status.",
                                            "example": "active"
                                        },
                                        "budget": {
                                            "type": "number",
                                            "description": "Campaign budget.",
                                            "example": 10000.0
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Campaign start date.",
                                            "example": "2024-01-01T00:00:00Z"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Campaign end date.",
                                            "example": "2024-12-31T23:59:59Z"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/campaigns/{campaign_id}": {
            "servers": [
                {
                    "url": "https://api.ads.vtex.com",
                    "description": "VTEX Ads server."
                }
            ],
            "get": {
                "tags": [
                    "Marketplace Integration - Campaign management"
                ],
                "summary": "Get campaign by ID",
                "description": "Retrieve a campaign by its ID.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "Unique identifier of the campaign.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "camp-123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "campaign_id": {
                                            "type": "string",
                                            "description": "Unique campaign identifier.",
                                            "example": "camp-123456"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Campaign name.",
                                            "example": "Summer Sale 2024"
                                        },
                                        "seller_id": {
                                            "type": "string",
                                            "description": "Seller identifier.",
                                            "example": "seller123"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "active",
                                                "paused",
                                                "ended"
                                            ],
                                            "description": "Campaign status.",
                                            "example": "active"
                                        },
                                        "budget": {
                                            "type": "number",
                                            "description": "Campaign budget.",
                                            "example": 10000.0
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Campaign start date.",
                                            "example": "2024-01-01T00:00:00Z"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Campaign end date.",
                                            "example": "2024-12-31T23:59:59Z"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Marketplace Integration - Campaign management"
                ],
                "summary": "Update campaign by ID",
                "description": "Update a campaign's information by its ID.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "Unique identifier of the campaign.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "camp-123456"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Campaign name.",
                                        "example": "Summer Sale 2024 Updated"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "paused",
                                            "ended"
                                        ],
                                        "description": "Campaign status.",
                                        "example": "paused"
                                    },
                                    "budget": {
                                        "type": "number",
                                        "description": "Campaign budget.",
                                        "example": 15000.0
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Campaign end date.",
                                        "example": "2024-12-31T23:59:59Z"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "campaign_id": {
                                            "type": "string",
                                            "description": "Unique campaign identifier.",
                                            "example": "camp-123456"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Campaign name.",
                                            "example": "Summer Sale 2024 Updated"
                                        },
                                        "seller_id": {
                                            "type": "string",
                                            "description": "Seller identifier.",
                                            "example": "seller123"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "active",
                                                "paused",
                                                "ended"
                                            ],
                                            "description": "Campaign status.",
                                            "example": "paused"
                                        },
                                        "budget": {
                                            "type": "number",
                                            "description": "Campaign budget.",
                                            "example": 15000.0
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Campaign start date.",
                                            "example": "2024-01-01T00:00:00Z"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Campaign end date.",
                                            "example": "2024-12-31T23:59:59Z"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/metrics/macro": {
            "servers": [
                {
                    "url": "https://api.ads.vtex.com",
                    "description": "VTEX Ads server."
                }
            ],
            "get": {
                "tags": [
                    "Marketplace Integration - Metrics"
                ],
                "summary": "Get macro metrics",
                "description": "Retrieve macro-level performance metrics across campaigns.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for metrics query.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for metrics query.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-12-31"
                        }
                    },
                    {
                        "name": "seller_id",
                        "in": "query",
                        "description": "Filter by seller identifier.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "seller123"
                        }
                    },
                    {
                        "name": "campaign_id",
                        "in": "query",
                        "description": "Filter by campaign identifier.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "camp-123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total_impressions": {
                                            "type": "integer",
                                            "description": "Total number of ad impressions.",
                                            "example": 1000000
                                        },
                                        "total_clicks": {
                                            "type": "integer",
                                            "description": "Total number of ad clicks.",
                                            "example": 50000
                                        },
                                        "total_spend": {
                                            "type": "number",
                                            "description": "Total advertising spend.",
                                            "example": 25000.50
                                        },
                                        "total_conversions": {
                                            "type": "integer",
                                            "description": "Total number of conversions.",
                                            "example": 2500
                                        },
                                        "ctr": {
                                            "type": "number",
                                            "description": "Click-through rate.",
                                            "example": 0.05
                                        },
                                        "cpc": {
                                            "type": "number",
                                            "description": "Cost per click.",
                                            "example": 0.50
                                        },
                                        "conversion_rate": {
                                            "type": "number",
                                            "description": "Conversion rate.",
                                            "example": 0.05
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/metrics/historical": {
            "servers": [
                {
                    "url": "https://api.ads.vtex.com",
                    "description": "VTEX Ads server."
                }
            ],
            "get": {
                "tags": [
                    "Marketplace Integration - Metrics"
                ],
                "summary": "Get historical metrics",
                "description": "Retrieve historical performance metrics with daily granularity.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for metrics query.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for metrics query.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-12-31"
                        }
                    },
                    {
                        "name": "seller_id",
                        "in": "query",
                        "description": "Filter by seller identifier.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "seller123"
                        }
                    },
                    {
                        "name": "campaign_id",
                        "in": "query",
                        "description": "Filter by campaign identifier.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "camp-123456"
                        }
                    },
                    {
                        "name": "granularity",
                        "in": "query",
                        "description": "Time granularity for the data.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "daily",
                                "weekly",
                                "monthly"
                            ],
                            "default": "daily",
                            "example": "daily"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "date": {
                                                "type": "string",
                                                "format": "date",
                                                "description": "Date of the metrics.",
                                                "example": "2024-01-01"
                                            },
                                            "impressions": {
                                                "type": "integer",
                                                "description": "Number of ad impressions.",
                                                "example": 10000
                                            },
                                            "clicks": {
                                                "type": "integer",
                                                "description": "Number of ad clicks.",
                                                "example": 500
                                            },
                                            "spend": {
                                                "type": "number",
                                                "description": "Advertising spend.",
                                                "example": 250.50
                                            },
                                            "conversions": {
                                                "type": "integer",
                                                "description": "Number of conversions.",
                                                "example": 25
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/checking_accounts": {
            "servers": [
                {
                    "url": "https://api.ads.vtex.com",
                    "description": "VTEX Ads server."
                }
            ],
            "get": {
                "tags": [
                    "Marketplace Integration - Credits management"
                ],
                "summary": "List advertiser advertising credit accounts",
                "description": "List advertising credit accounts for advertisers with optional filters. These accounts hold credits used for advertising campaigns and ad spending.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "seller_id",
                        "in": "query",
                        "description": "Filter by seller identifier.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "seller123"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (starts at 0).",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Number of items to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "seller_id": {
                                                "type": "string",
                                                "description": "Seller identifier.",
                                                "example": "seller123"
                                            },
                                            "seller_name": {
                                                "type": "string",
                                                "description": "Seller name.",
                                                "example": "Nike Store"
                                            },
                                            "balance": {
                                                "type": "string",
                                                "description": "Available balance amount.",
                                                "example": "1111.00"
                                            },
                                            "currency": {
                                                "type": "string",
                                                "description": "Currency code.",
                                                "example": "USD"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "Account creation date.",
                                                "example": "2024-01-01T00:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "Last update date.",
                                                "example": "2024-01-15T10:30:00Z"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/checking_accounts/{seller_id}/transactions": {
            "servers": [
                {
                    "url": "https://api.ads.vtex.com",
                    "description": "VTEX Ads server."
                }
            ],
            "get": {
                "tags": [
                    "Marketplace Integration - Credits management"
                ],
                "summary": "List advertising credits from an account",
                "description": "List advertising credits from a specific seller account. These credits are used for advertising campaigns and ad spending.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "seller_id",
                        "in": "path",
                        "description": "Seller identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "seller123"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (starts at 0).",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Number of items to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "transaction_id": {
                                                "type": "string",
                                                "description": "Transaction identifier.",
                                                "example": "txn-123456"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "credit",
                                                    "debit",
                                                    "charge",
                                                    "refund"
                                                ],
                                                "description": "Transaction type.",
                                                "example": "credit"
                                            },
                                            "amount": {
                                                "type": "number",
                                                "description": "Transaction amount.",
                                                "example": 150.00
                                            },
                                            "date": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "Transaction date.",
                                                "example": "2024-01-15T10:30:00Z"
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Transaction description.",
                                                "example": "Credit addition to account"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Marketplace Integration - Credits management"
                ],
                "summary": "Add advertising credits to account",
                "description": "Add advertising credits to an advertiser account. These credits will be available for advertising campaigns and ad spending.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "seller_id",
                        "in": "path",
                        "description": "Seller identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "seller123"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "seller_id",
                                    "amount"
                                ],
                                "properties": {
                                    "seller_id": {
                                        "type": "string",
                                        "description": "Seller identifier.",
                                        "example": "seller123"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "description": "Amount to credit.",
                                        "example": 1000.00
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Credit description.",
                                        "example": "Monthly credit allocation"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transaction_id": {
                                            "type": "string",
                                            "description": "Transaction identifier.",
                                            "example": "txn-123456"
                                        },
                                        "seller_id": {
                                            "type": "string",
                                            "description": "Seller identifier.",
                                            "example": "seller123"
                                        },
                                        "amount": {
                                            "type": "number",
                                            "description": "Credited amount.",
                                            "example": 1000.00
                                        },
                                        "new_balance": {
                                            "type": "number",
                                            "description": "New account balance after credit.",
                                            "example": 6000.00
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/checking_account": {
            "servers": [
                {
                    "url": "{marketplaceEndpoint}",
                    "description": "External marketplace server endpoint. VTEX Ads will call this endpoint on the marketplace's infrastructure to check the seller's available balance."
                }
            ],
            "get": {
                "tags": [
                    "Marketplace Integration - Credits management"
                ],
                "summary": "Check advertising credits balance",
                "description": "Check the available advertising credits balance for a seller account. These credits are used for advertising campaigns and ad spending.\r\n\r\n>ℹ️ This endpoint must be implemented by the marketplace. For more information, see [Integrating VTEX Ads with external marketplaces](https://developers.vtex.com/docs/guides/integrating-vtex-ads-with-external-marketplaces).\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "seller_id",
                        "in": "query",
                        "description": "Seller identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "seller123"
                        }
                    },
                    {
                        "name": "publisher_id",
                        "in": "query",
                        "description": "Publisher identifier (optional, used only when an entity manages multiple publishers).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "pub-456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "string",
                                            "description": "Available balance amount.",
                                            "example": "1111.00"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BasicAuth": []
                    }
                ]
            }
        },
        "/api/v1/payments": {
            "servers": [
                {
                    "url": "https://api.ads.vtex.com",
                    "description": "VTEX Ads server."
                }
            ],
            "get": {
                "tags": [
                    "Marketplace Integration - Credits payments"
                ],
                "summary": "List advertising credits payments",
                "description": "List payments for advertising credits with optional filters. These payments add credits to advertiser accounts for advertising campaigns and ad spending.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "seller_id",
                        "in": "query",
                        "description": "Filter by seller identifier.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "seller123"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (starts at 0).",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Number of items to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "payment_id": {
                                                "type": "string",
                                                "description": "Payment identifier.",
                                                "example": "pay-123456"
                                            },
                                            "seller_id": {
                                                "type": "string",
                                                "description": "Seller identifier.",
                                                "example": "seller123"
                                            },
                                            "payment_type": {
                                                "type": "string",
                                                "description": "Payment type.",
                                                "example": "credit_card"
                                            },
                                            "amount": {
                                                "type": "number",
                                                "description": "Payment amount.",
                                                "example": 1000.00
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "pending",
                                                    "processing",
                                                    "completed",
                                                    "failed",
                                                    "cancelled"
                                                ],
                                                "description": "Payment status.",
                                                "example": "completed"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "Payment creation date.",
                                                "example": "2024-01-15T10:30:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "Payment last update date.",
                                                "example": "2024-01-15T10:35:00Z"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/payments/{payment_type}": {
            "servers": [
                {
                    "url": "https://api.ads.vtex.com",
                    "description": "VTEX Ads server."
                }
            ],
            "post": {
                "tags": [
                    "Marketplace Integration - Credits payments"
                ],
                "summary": "Create a new advertising credits payment",
                "description": "Create a new payment that will add advertising credits to an account. These credits will be available for advertising campaigns and ad spending.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "payment_type",
                        "in": "path",
                        "description": "Type of payment to create.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "credit_card",
                                "bank_transfer",
                                "pix",
                                "boleto"
                            ],
                            "example": "credit_card"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "seller_id",
                                    "amount"
                                ],
                                "properties": {
                                    "seller_id": {
                                        "type": "string",
                                        "description": "Seller identifier.",
                                        "example": "seller123"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "description": "Payment amount.",
                                        "example": 1000.00
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Payment description.",
                                        "example": "Credit top-up for advertising campaigns"
                                    },
                                    "payment_details": {
                                        "type": "object",
                                        "description": "Additional payment details specific to the payment type.",
                                        "example": {
                                            "card_number": "**** **** **** 1234",
                                            "cardholder_name": "John Doe"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "payment_id": {
                                            "type": "string",
                                            "description": "Payment identifier.",
                                            "example": "pay-123456"
                                        },
                                        "seller_id": {
                                            "type": "string",
                                            "description": "Seller identifier.",
                                            "example": "seller123"
                                        },
                                        "payment_type": {
                                            "type": "string",
                                            "description": "Payment type.",
                                            "example": "credit_card"
                                        },
                                        "amount": {
                                            "type": "number",
                                            "description": "Payment amount.",
                                            "example": 1000.00
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "Payment status.",
                                            "example": "pending"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Payment creation date.",
                                            "example": "2024-01-15T10:30:00Z"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/payments/{payment_id}": {
            "servers": [
                {
                    "url": "https://api.ads.vtex.com",
                    "description": "VTEX Ads server."
                }
            ],
            "get": {
                "tags": [
                    "Marketplace Integration - Credits payments"
                ],
                "summary": "Get advertising credits payment by ID",
                "description": "Retrieve an advertising credits payment by its ID. This payment adds credits used for advertising campaigns and ad spending.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "payment_id",
                        "in": "path",
                        "description": "Payment identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "pay-123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "payment_id": {
                                            "type": "string",
                                            "description": "Payment identifier.",
                                            "example": "pay-123456"
                                        },
                                        "seller_id": {
                                            "type": "string",
                                            "description": "Seller identifier.",
                                            "example": "seller123"
                                        },
                                        "payment_type": {
                                            "type": "string",
                                            "description": "Payment type.",
                                            "example": "credit_card"
                                        },
                                        "amount": {
                                            "type": "number",
                                            "description": "Payment amount.",
                                            "example": 1000.00
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "processing",
                                                "completed",
                                                "failed",
                                                "cancelled"
                                            ],
                                            "description": "Payment status.",
                                            "example": "completed"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "Payment description.",
                                            "example": "Credit top-up for advertising campaigns"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Payment creation date.",
                                            "example": "2024-01-15T10:30:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Payment last update date.",
                                            "example": "2024-01-15T10:35:00Z"
                                        },
                                        "payment_details": {
                                            "type": "object",
                                            "description": "Additional payment details specific to the payment type.",
                                            "example": {
                                                "card_number": "**** **** **** 1234",
                                                "cardholder_name": "John Doe"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/checking_account/transfer": {
            "servers": [
                {
                    "url": "{marketplaceEndpoint}",
                    "description": "External marketplace server endpoint. VTEX Ads will call this endpoint on the marketplace's infrastructure to request credit transfers."
                }
            ],
            "post": {
                "tags": [
                    "Marketplace Integration - Credits management"
                ],
                "summary": "Request advertising credits transfer",
                "description": "Request a transfer of a specified amount of advertising credits. These credits are used for advertising campaigns and ad spending.\r\n\r\n>ℹ️ This endpoint must be implemented by the marketplace. For more information, see [Integrating VTEX Ads with external marketplaces](https://developers.vtex.com/docs/guides/integrating-vtex-ads-with-external-marketplaces).\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "amount",
                                    "seller_id",
                                    "publisher_id",
                                    "transfer_identity_id"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "string",
                                        "description": "Transfer amount.",
                                        "example": "10.00"
                                    },
                                    "seller_id": {
                                        "type": "string",
                                        "description": "Seller identifier.",
                                        "example": "SELLER_ID"
                                    },
                                    "publisher_id": {
                                        "type": "string",
                                        "description": "Publisher identifier.",
                                        "example": "PUBLISHER_ID"
                                    },
                                    "transfer_identity_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "Unique transfer identity identifier.",
                                        "example": "550e8400-e29b-41d4-a716-446655440000"
                                    }
                                }
                            },
                            "example": {
                                "amount": "10.00",
                                "seller_id": "SELLER_ID", 
                                "publisher_id": "PUBLISHER_ID",
                                "transfer_identity_id": "uuid"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created - Synchronous success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transaction_id": {
                                            "type": "string",
                                            "description": "Transaction identifier.",
                                            "example": "TRANSACTION_ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ],
                                            "description": "Transfer status.",
                                            "example": "success"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Accepted - Asynchronous processing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transaction_id": {
                                            "type": "string",
                                            "description": "Transaction identifier.",
                                            "example": "TRANSACTION_ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "processing"
                                            ],
                                            "description": "Transfer status.",
                                            "example": "processing"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Synchronous failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transaction_id": {
                                            "type": "string",
                                            "description": "Transaction identifier.",
                                            "example": "TRANSACTION_ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "failure"
                                            ],
                                            "description": "Transfer status.",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Reason for rejection.",
                                            "example": "Insufficient balance"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BasicAuth": []
                    }
                ]
            }
        },
        "/webhook/marketplace/transfers/{publisher_id}": {
            "servers": [
                {
                    "url": "https://api-retail-media.newtail.com.br",
                    "description": "VTEX Ads server."
                }
            ],
            "post": {
                "tags": [
                    "Marketplace Integration - Credits management"
                ],
                "summary": "Transfer status webhook",
                "description": "Webhook to notify VTEX Ads about the final status of a transfer. The marketplace must consume this webhook to update transfer status.\r\n\r\n## Authentication\r\n\r\nThis endpoint requires `x-api-key` and `x-secret-key` headers for authentication.\r\n\r\n## Retry Logic\r\n\r\nIn case of webhook call failure, the marketplace should retry the request.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "description": "API key for authentication.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "your-api-key"
                        }
                    },
                    {
                        "name": "x-secret-key",
                        "in": "header",
                        "description": "Secret key for authentication.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "your-secret-key"
                        }
                    },
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "description": "Publisher identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "PUBLISHER_ID"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "type": "object",
                                        "required": [
                                            "transaction_id",
                                            "status"
                                        ],
                                        "properties": {
                                            "transaction_id": {
                                                "type": "string",
                                                "description": "Transaction identifier.",
                                                "example": "TRANSACTION_ID"
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "success"
                                                ],
                                                "description": "Transfer status.",
                                                "example": "success"
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "required": [
                                            "transaction_id",
                                            "status",
                                            "message"
                                        ],
                                        "properties": {
                                            "transaction_id": {
                                                "type": "string",
                                                "description": "Transaction identifier.",
                                                "example": "TRANSACTION_ID"
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "failure"
                                                ],
                                                "description": "Transfer status.",
                                                "example": "failure"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "Problem description.",
                                                "example": "Transfer failed due to insufficient funds"
                                            }
                                        }
                                    }
                                ]
                            },
                            "examples": {
                                "success": {
                                    "summary": "Success notification",
                                    "value": {
                                        "transaction_id": "TRANSACTION_ID",
                                        "status": "success"
                                    }
                                },
                                "failure": {
                                    "summary": "Failure notification",
                                    "value": {
                                        "transaction_id": "TRANSACTION_ID",
                                        "status": "failure",
                                        "message": "Transfer failed due to insufficient funds"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content - Webhook successfully processed"
                    }
                }
            }
        },
        "/api/v1/sso/marketplace": {
            "servers": [
                {
                    "url": "https://api-retail-media.newtail.com.br",
                    "description": "VTEX Ads server."
                }
            ],
            "post": {
                "tags": [
                    "Marketplace Integration - SSO Authentication"
                ],
                "summary": "Request SSO redirect URL",
                "description": "Generate a single sign-on redirect URL that allows users to switch between environments without having to log in again. The purpose of Single Sign On is to enable seamless user authentication across marketplace and VTEX Ads environments.\r\n\r\n## Usage Flow\r\n\r\n1. **Request redirect URL**: Call this endpoint with seller and user information\r\n2. **User redirection**: Redirect the user to the returned `url_redirect`\r\n3. **Automatic login**: The user will be automatically logged into VTEX Ads platform\r\n\r\n>ℹ️ For more information about SSO implementation, see [VTEX Ads Single Sign On (SSO)](https://developers.vtex.com/docs/guides/vtex-ads-single-sign-on-sso).\r\n\r\n## Authentication\r\n\r\nThis endpoint uses `x-api-key` and `x-app-id` headers for authentication.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    }
                ],

                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "seller_id",
                                    "seller_name",
                                    "user_email",
                                    "user_name"
                                ],
                                "properties": {
                                    "seller_id": {
                                        "type": "string",
                                        "description": "Unique identifier of the advertiser/seller.",
                                        "example": "1"
                                    },
                                    "seller_name": {
                                        "type": "string",
                                        "description": "Name of the advertiser/seller.",
                                        "example": "Store Example"
                                    },
                                    "user_email": {
                                        "type": "string",
                                        "format": "email",
                                        "description": "User email address.",
                                        "example": "example@example.com.br"
                                    },
                                    "user_name": {
                                        "type": "string",
                                        "description": "User name.",
                                        "example": "User Example"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - SSO redirect URL generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "url_redirect": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "The redirect URL where the user should be sent to complete SSO authentication. Once redirected, the user will be logged into the VTEX Ads platform without requiring additional login steps.",
                                            "example": "https://app.newtail.com.br/login/marketplace?token=xxxxx"
                                        }
                                    },
                                    "required": ["url_redirect"]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Validation error in request parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Error message describing the validation issue.",
                                            "example": "ValidationError"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "description": "List of specific validation errors.",
                                            "items": {
                                                "type": "string",
                                                "description": "Specific validation error message."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Unexpected error occurred while processing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Error message describing the internal server error.",
                                            "example": "InternalServerError"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "servers": [
                {
                    "url": "{marketplaceEndpoint}",
                    "description": "External marketplace server endpoint. VTEX Ads will call this endpoint on the marketplace's infrastructure to query user information."
                }
            ],
            "get": {
                "tags": [
                    "Marketplace Integration - SSO Authentication"
                ],
                "summary": "Get user information",
                "description": "Query user information by user ID for SSO authentication purposes.\r\n\r\n>ℹ️ This endpoint must be implemented by the marketplace. For more information, see [Integrating VTEX Ads with external marketplaces](https://developers.vtex.com/docs/guides/integrating-vtex-ads-with-external-marketplaces).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID in the marketplace.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "user123"
                        }
                    },
                    {
                        "name": "seller_id",
                        "in": "query",
                        "description": "Seller identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "seller123"
                        }
                    },
                    {
                        "name": "publisher_id",
                        "in": "query",
                        "description": "Publisher identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "pub-456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "User name.",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "User email address.",
                                            "example": "john.doe@example.com"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BasicAuth": []
                    }
                ]
            }
        },
        "/sellers/{seller_id}": {
            "servers": [
                {
                    "url": "{marketplaceEndpoint}",
                    "description": "External marketplace server endpoint. VTEX Ads will call this endpoint on the marketplace's infrastructure to query seller information."
                }
            ],
            "get": {
                "tags": [
                    "Marketplace Integration - SSO Authentication"
                ],
                "summary": "Get seller information",
                "description": "Query seller information by seller ID for SSO authentication purposes.\r\n\r\n>ℹ️ This endpoint must be implemented by the marketplace. For more information, see [Integrating VTEX Ads with external marketplaces](https://developers.vtex.com/docs/guides/integrating-vtex-ads-with-external-marketplaces).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "seller_id",
                        "in": "path",
                        "description": "Seller ID in the marketplace.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "seller123"
                        }
                    },
                    {
                        "name": "publisher_id",
                        "in": "query",
                        "description": "Publisher identifier.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "pub-456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Seller name.",
                                            "example": "ACME Corp"
                        },
                                        "cnpj": {
                                            "type": "string",
                                            "description": "Brazilian tax ID (CNPJ).",
                                            "example": "12345678000190"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BasicAuth": []
                    }
                ]
            }
        },
        "/report/v2/advertisers": {
            "servers": [
                {
                    "url": "https://api-retail-media.newtail.com.br",
                    "description": "VTEX Ads server."
                }
            ],
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Export advertisers report",
                "description": "Export information from all advertisers associated with a publisher account. Data is returned in JSON format by default, but can be exported as XLSX by adding the `download=true` parameter.\r\n\r\n>ℹ️ Only available in publisher view. For more information about report export functionality, see [Exporting ads reports](https://developers.vtex.com/docs/guides/exporting-ads-reports).\r\n\r\n>⚠️ Export availability may be restricted based on the account type associated with the authentication. Not all users will have access to all available reports.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Metrics start date in YYYY-MM-DD format.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Metrics end date in YYYY-MM-DD format.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-01-01"
                        }
                    },
                    {
                        "name": "account_info",
                        "in": "query",
                        "description": "If true, includes detailed account information in the result.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number of results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Number of items per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 100
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "If true, returns the total number of available records.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "download",
                        "in": "query",
                        "description": "If true, returns an XLSX file buffer ready for download instead of JSON.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Advertisers report data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "List of advertiser data with metrics (when download=false).",
                                    "items": {
                                        "type": "object",
                                        "description": "Advertiser metrics data."
                                    }
                                }
                            },
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary",
                                    "description": "XLSX file buffer for download (when download=true)."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/report/v2/publishers": {
            "servers": [
                {
                    "url": "https://api-retail-media.newtail.com.br",
                    "description": "VTEX Ads server."
                }
            ],
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Export publishers report",
                "description": "Export publisher information with performance metrics. Data is returned in JSON format by default, but can be exported as XLSX by adding the `download=true` parameter.\r\n\r\n>ℹ️ Only available in advertiser view. For more information about report export functionality, see [Exporting ads reports](https://developers.vtex.com/docs/guides/exporting-ads-reports).\r\n\r\n>⚠️ Export availability may be restricted based on the account type associated with the authentication.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Metrics start date in YYYY-MM-DD format.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Metrics end date in YYYY-MM-DD format.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-01-01"
                        }
                    },
                    {
                        "name": "publisher_name",
                        "in": "query",
                        "description": "Filters results by publisher name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account_info",
                        "in": "query",
                        "description": "If true, includes detailed account information in the result.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number of results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Number of items per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 100
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "If true, returns the total number of available records.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Defines the field for sorting results.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["name", "balance", "total_daily_budget", "total_campaigns", "impressions", "clicks", "ctr", "total_spent", "conversions", "conversion_rate", "income", "roas"]
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Defines the sorting direction.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["asc", "desc"]
                        }
                    },
                    {
                        "name": "download",
                        "in": "query",
                        "description": "If true, returns an XLSX file buffer ready for download instead of JSON.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Publishers report data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "List of publisher data with metrics (when download=false).",
                                    "items": {
                                        "type": "object",
                                        "description": "Publisher metrics data."
                                    }
                                }
                            },
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary",
                                    "description": "XLSX file buffer for download (when download=true)."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/report/network/publishers": {
            "servers": [
                {
                    "url": "https://api-retail-media.newtail.com.br",
                    "description": "VTEX Ads server."
                }
            ],
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Export network publishers report",
                "description": "Export information about publishers associated with a Network type Publisher account. Data is returned in JSON format by default, but can be exported as XLSX by adding the `download=true` parameter.\r\n\r\n>ℹ️ Only publishers operating in Network format have permission to access this report. For more information about report export functionality, see [Exporting ads reports](https://developers.vtex.com/docs/guides/exporting-ads-reports).\r\n\r\n>⚠️ Export availability may be restricted based on the account type associated with the authentication.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Metrics start date in YYYY-MM-DD format.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Metrics end date in YYYY-MM-DD format.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-01-01"
                        }
                    },
                    {
                        "name": "publisher_name",
                        "in": "query",
                        "description": "Filters results by publisher name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account_info",
                        "in": "query",
                        "description": "If true, includes detailed account information in the result.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number of results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Number of items per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 100
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "If true, returns the total number of available records.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Defines the field for sorting results.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["name", "impressions", "clicks", "ctr", "conversions", "conversion_rate", "income", "roas", "requests"]
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Defines the sorting direction.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["asc", "desc"]
                        }
                    },
                    {
                        "name": "download",
                        "in": "query",
                        "description": "If true, returns an XLSX file buffer ready for download instead of JSON.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Network publishers report data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "List of network publisher data with metrics (when download=false).",
                                    "items": {
                                        "type": "object",
                                        "description": "Network publisher metrics data."
                                    }
                                }
                            },
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary",
                                    "description": "XLSX file buffer for download (when download=true)."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/campaign/v2": {
            "servers": [
                {
                    "url": "https://api-retail-media.newtail.com.br",
                    "description": "VTEX Ads server."
                }
            ],
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Export campaigns report",
                "description": "Export all available campaigns with performance metrics, applying filters as needed. Data is returned in JSON format by default, but can be exported as XLSX by adding the `download=true` parameter.\r\n\r\n>ℹ️ For more information about report export functionality, see [Exporting ads reports](https://developers.vtex.com/docs/guides/exporting-ads-reports).\r\n\r\n>⚠️ Export availability may be restricted based on the account type associated with the authentication.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Metrics start date in YYYY-MM-DD format.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Metrics end date in YYYY-MM-DD format.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-01-01"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filters by campaign status.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "advertiser_id",
                        "in": "query",
                        "description": "Filters campaigns by advertiser ID.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ad_type",
                        "in": "query",
                        "description": "Filters by ad type.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Searches campaigns by name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account_info",
                        "in": "query",
                        "description": "If true, includes detailed account information in the result.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number of results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Number of items per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 100
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "If true, returns the total number of available records.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Defines the field for sorting results.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["name", "impressions", "clicks", "ctr", "conversions", "conversion_rate", "income", "roas", "created_at", "start_at", "daily_budget", "ad_type", "advertiser_name", "status"]
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Defines the sorting direction.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["asc", "desc"]
                        }
                    },
                    {
                        "name": "download",
                        "in": "query",
                        "description": "If true, returns an XLSX file buffer ready for download instead of JSON.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Campaigns report data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "List of campaign data with metrics (when download=false).",
                                    "items": {
                                        "type": "object",
                                        "description": "Campaign metrics data."
                                    }
                                }
                            },
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary",
                                    "description": "XLSX file buffer for download (when download=true)."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ad/results/v2": {
            "servers": [
                {
                    "url": "https://api-retail-media.newtail.com.br",
                    "description": "VTEX Ads server."
                }
            ],
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Export ads report",
                "description": "Export all available ads with performance metrics, applying filters as needed. Data is returned in JSON format by default, but can be exported as XLSX by adding the `download=true` parameter.\r\n\r\n>ℹ️ For more information about report export functionality, see [Exporting ads reports](https://developers.vtex.com/docs/guides/exporting-ads-reports).\r\n\r\n>⚠️ Export availability may be restricted based on the account type associated with the authentication.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Metrics start date in YYYY-MM-DD format.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Metrics end date in YYYY-MM-DD format.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-01-01"
                        }
                    },
                    {
                        "name": "campaign_name",
                        "in": "query",
                        "description": "Filters ads by campaign name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "campaign_id",
                        "in": "query",
                        "description": "Filters ads by campaign ID.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "advertiser_id",
                        "in": "query",
                        "description": "Filters ads by advertiser ID.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "product_sku",
                        "in": "query",
                        "description": "Filters ads by product SKU.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ad_status",
                        "in": "query",
                        "description": "Filters ads by status.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ad_type",
                        "in": "query",
                        "description": "Filters by ad type.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "targeting_type",
                        "in": "query",
                        "description": "Filters by targeting type.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "show_inactive",
                        "in": "query",
                        "description": "If true, includes paused ads.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "account_info",
                        "in": "query",
                        "description": "If true, includes detailed account information in the result.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number of results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Number of items per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 100
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "If true, returns the total number of available records.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Defines the field for sorting results.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["ad_type", "ad_status", "impressions", "conversion_rate", "ctr", "income", "total_spent", "roas", "conversions", "total_conversions_item_quantity"]
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Defines the sorting direction.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["asc", "desc"]
                        }
                    },
                    {
                        "name": "download",
                        "in": "query",
                        "description": "If true, returns an XLSX file buffer ready for download instead of JSON.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Ads report data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "List of ad data with metrics (when download=false).",
                                    "items": {
                                        "type": "object",
                                        "description": "Ad metrics data."
                                    }
                                }
                            },
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary",
                                    "description": "XLSX file buffer for download (when download=true)."
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "X-App-Id": {
                "name": "X-App-Id",
                "type": "apiKey",
                "in": "header",
                "description": "Publisher App ID for authorization."
            },
            "X-Api-Key": {
                "name": "X-Api-Key",
                "type": "apiKey",
                "in": "header",
                "description": "API Key for authentication."
            },
            "BasicAuth": {
                "type": "http",
                "scheme": "basic",
                "description": "Basic Authentication for marketplace endpoints. VTEX Ads will use this method when calling marketplace-hosted endpoints."
            }
        },
        "parameters": {
            "Content-Type": {
                "name": "Content-Type",
                "in": "header",
                "description": "Type of the content being sent.",
                "required": true,
                "style": "simple",
                "schema": {
                    "type": "string",
                    "example": "application/json"
                }
            },
            "Accept": {
                "name": "Accept",
                "in": "header",
                "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                "required": true,
                "style": "simple",
                "schema": {
                    "type": "string",
                    "example": "application/json"
                }
            }
        }
    },
    "security": [
        {
            "X-App-Id": [],
            "X-Api-Key": []
        }
    ],
    "tags": [
        {
            "name": "Catalog synchronization"
        },
        {
            "name": "Ads events notification"
        },
        {
            "name": "Ads"
        },
        {
            "name": "Reports"
        },
        {
            "name": "Marketplace integration - Catalog"
        },
        {
            "name": "Marketplace Integration - Advertiser management"
        },
        {
            "name": "Marketplace Integration - Campaign management"
        },
        {
            "name": "Marketplace Integration - Metrics"
        },
        {
            "name": "Marketplace Integration - Credits management"
        },
        {
            "name": "Marketplace Integration - Credits payments"
        },
        {
            "name": "Marketplace Integration - SSO Authentication"
        }
    ]
}