{
  "_": {
    "postman_id": "95e5f5da-b15c-4352-a8e3-9e20961c4e3b"
  },
  "item": [
    {
      "id": "6bf255e1-128d-428d-a8eb-3119fe114e46",
      "name": "Payment Flow",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "0a4267dd-cd26-4cae-8a36-1e467cb38d43",
          "name": "List Payment Provider Manifest",
          "request": {
            "name": "List Payment Provider Manifest",
            "description": {
              "content": "Exposes the provider manifest, including metadata settings such as payment methods, split configuration, and custom fields.\r\n\r\n> ℹ️ This request is made from VTEX to the payment provider.\r\n\r\n## Available payment methods\r\n\r\n<table>\r\n    <tr>\r\n        <th>Payment Method</th>\r\n        <th>Type</th>\r\n        <th>Country</th>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Visa</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Mastercard</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>American Express</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Discover</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>JCB</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Diners</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Elo</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Brazil</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Hipercard</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Brazil</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Aura</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Brazil</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Banricompras</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Brazil</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Credz</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Brazil</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Cabal</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Argentina, Brazil, Uruguay, Paraguay</td>\r\n    </tr>\r\n        <td><code>Cartes Bancaires (CB)</code></td>\r\n        <td>Credit Card</td>\r\n        <td>France</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>VirtualDebitElo</code></td>\r\n        <td>Debit Card</td>\r\n        <td>Brazil</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Visa Electron</code></td>\r\n        <td>Debit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Maestro</code></td>\r\n        <td>Debit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Mastercard Debit</code></td>\r\n        <td>Debit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Débito Online</code></td>\r\n        <td>Debit Card</td>\r\n        <td>Brazil</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Cobranded</code></td>\r\n        <td>Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Privatelabels</code></td>\r\n        <td>Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Promissories</code></td>\r\n        <td>Generic</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Cash</code></td>\r\n        <td>Generic</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Pix</code></td>\r\n        <td>Online Transfer</td>\r\n        <td>Brazil</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Safetypay</code></td>\r\n        <td>Online Transfer</td>\r\n        <td>Americas and Europe</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>BankInvoice</code></td>\r\n        <td>Offline/Voucher</td>\r\n        <td>Brazil (Boleto Bancário)</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>FichaDeposito</code></td>\r\n        <td>Offline/Voucher</td>\r\n        <td>Mexico</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Rapipago</code></td>\r\n        <td>Offline/Voucher</td>\r\n        <td>Argentina</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>OXXO</code></td>\r\n        <td>Offline/Voucher</td>\r\n        <td>Mexico</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Voucher</code></td>\r\n        <td>Offline/Voucher</td>\r\n        <td>Mexico</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Bitcoin</code></td>\r\n        <td>Cryptocurrency</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Venda Direta Credito</code></td>\r\n        <td>Credit Card (Physical)</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Venda Direta Debito</code></td>\r\n        <td>Debit Card (Physical)</td>\r\n        <td>Global</td>\r\n    </tr>\r\n</table> \r\n\r\n## Permissions\r\n\r\nCheck with your service provider to know what permissions are needed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "manifest"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b8a7a368-fec1-439e-a91e-196c87192e57",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "manifest"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentMethods\": [\n    {\n      \"name\": \"Visa\",\n      \"allowsSplit\": \"onCapture\"\n    },\n    {\n      \"name\": \"Pix\",\n      \"allowsSplit\": \"disabled\"\n    },\n    {\n      \"name\": \"Mastercard\",\n      \"allowsSplit\": \"onCapture\"\n    },\n    {\n      \"name\": \"American Express\",\n      \"allowsSplit\": \"onCapture\"\n    },\n    {\n      \"name\": \"BankInvoice\",\n      \"allowsSplit\": \"onAuthorize\"\n    },\n    {\n      \"name\": \"Privatelabels\",\n      \"allowsSplit\": \"disabled\"\n    },\n    {\n      \"name\": \"Promissories\",\n      \"allowsSplit\": \"disabled\"\n    }\n  ],\n  \"customFields\": [\n    {\n      \"name\": \"Merchant's custom field\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"Merchant's custom select field\",\n      \"type\": \"select\",\n      \"options\": [\n        {\n          \"text\": \"Field option 1\",\n          \"value\": \"1\"\n        },\n        {\n          \"text\": \"Field option 2\",\n          \"value\": \"2\"\n        },\n        {\n          \"text\": \"Field option 3\",\n          \"value\": \"3\"\n        }\n      ]\n    }\n  ],\n  \"autoSettleDelay\": {\n    \"minimum\": \"0\",\n    \"maximum\": \"720\"\n  },\n  \"metadataFields\": [\n    \"MetadataName1\",\n    \"MetadataName2\"\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "093dacc4-e8e0-4900-b4a7-41ebc7017a73",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/manifest - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/manifest - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/manifest - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"paymentMethods\"],\"type\":\"object\",\"description\":\"Payment provider manifest response body information.\",\"properties\":{\"paymentMethods\":{\"type\":\"array\",\"description\":\"Describes each payment method supported by payment provider and exposed its respective metadata.\",\"items\":{\"type\":\"object\",\"description\":\"Payment methods information.\",\"required\":[\"name\",\"allowsSplit\"],\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"Payment method name.\"},\"allowsSplit\":{\"type\":\"string\",\"description\":\"Describes which transaction flow stage the connector should receive payment split data. Check more details on the [Split Payouts on the Payment Provider Protocol](https://developers.vtex.com/vtex-rest-api/docs/split-payouts-on-payment-provider-protocol) article.\",\"enum\":[\"onAuthorize\",\"onCapture\",\"disabled\"]}}}},\"customFields\":{\"type\":\"array\",\"description\":\"Describes the customized fields supported by the connector. Except for `appKey` or `appToken` values, which must be defined in homonymous fields, any other security data should be sent or stored as `password` type fields.\",\"items\":{\"type\":\"object\",\"description\":\"Custom fields information.\",\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"Custom field name.\"},\"type\":{\"type\":\"string\",\"description\":\"Custom field type.\",\"enum\":[\"text\",\"password\",\"select\"]},\"options\":{\"type\":\"array\",\"description\":\"In case of `select` type, the possible params are `text` and `value`.\",\"items\":{\"type\":\"object\",\"description\":\"Custom field information.\",\"properties\":{\"text\":{\"type\":\"string\",\"description\":\"Custom field description.\"},\"value\":{\"type\":\"string\",\"description\":\"Custom field value.\"}}}}}}},\"autoSettleDelay\":{\"type\":\"object\",\"description\":\"Describes the allowed delay value for the auto settle capture. Accepted values: `minimum` and `maximum` in whole hours (decimals are not allowed). Check more details on the [Custom Auto Capture Feature](https://developers.vtex.com/vtex-rest-api/docs/custom-auto-capture-feature) article.\",\"required\":[\"minimum\",\"maximum\"],\"properties\":{\"minimum\":{\"type\":\"string\",\"description\":\"Minimum amount of time to auto settle in hours.\"},\"maximum\":{\"type\":\"string\",\"description\":\"Maximum amount of time to auto settle in hours.\"}}},\"metadataFields\":{\"type\":\"array\",\"description\":\"Array containing the names of the metadata fields sent from the provider to the payment gateway. Limitations: the array must contain a maximum of 3 strings, and each of them, a maximum of 20 characters.\",\"items\":{\"type\":\"string\",\"description\":\"Metadata fields information.\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/manifest - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "79b4ef76-4c77-4a27-a483-995b39e54c7f",
          "name": "Create payment",
          "request": {
            "name": "Create payment",
            "description": {
              "content": "Creates a new payment and initiates the payment flow.\r\n\r\n> ℹ️ This request is made from VTEX to the payment provider.\r\n\r\nPayment providers must:\r\n\r\n- Execute authorization on payments made through credit/debit card or any synchronized payments;\r\n\r\n- Return the required information to the customer on payments made through bank-issued invoice, redirect, or any async payments.\r\n\r\n >ℹ️ This endpoint has to meet the principle of [idempotence](https://en.wikipedia.org/wiki/Idempotence). When calling this endpoint for the first time of a payment, without a `paymentId`, it should create a new payment. When calling this endpoint for an existing `paymentId`, it should not create another payment, but return the updated status of the existing payment instead.\r\n\r\n## Callbacks (asynchronous flow)\r\n\r\nCallbacks are used for asynchronous payments, which do not receive the final status immediately. At first, an `undefined` status is returned, and the final status will be received from a callback request in the future as `authorized` or `denied`. There are two types of callbacks:\r\n\r\n- **Notification:** If a payment returns with `undefined` status, you are expected to send us a callback/notification to update it later, sending a POST with an updated version of your response (same structure as above) to the `callbackUrl` we have provided.\r\n\r\n- **Retry:** If a payment returns with `undefined` status, you are expected to call the retry endpoint provided by the `callbackUrl` when the processing of the payment is completed, so we make another Create Payment request to update the status with the new value (`authorized` or `denied`).\r\n\r\nCallback requests should be authenticated using a Key and Token which you can [generate from your VTEX partner account License Manager](https://help.vtex.com/en/tutorial/application-keys--2iffYzlvvz4BDMr6WGUtet#generating-app-keys-in-your-account). To do so, `POST` your request passing the `X-VTEX-API-AppKey` and `X-VTEX-API-AppToken` headers with your credentials. **Note:** do not mix up these credentials with the ones we send on behalf of the merchant when sending our requests.\r\n\r\n>⚠ For integrations not using VTEX IO, use the **Notification** callback. For integrations developed using VTEX IO infrastructure, use the **Retry** callback.\r\n\r\n### Callback URL\r\n\r\nThe `callbackUrl` field contains an URL that the payment provider uses to make a callback and inform our gateway of the final payment status: `approved` or `denied`. \r\n\r\nThis URL has some query parameters, including the `X-VTEX-signature`. This parameter is mandatory and contains a signature token to identify that the request has been generated from VTEX as a security measure. The signature token has at most 32 characters. You can check an example of callback URL with the signature token below:\r\n\r\n```\r\nhttps://gatewayqa.vtexpayments.com.br/api/pvt/payment-provider/transactions/8FB0F111111122222333344449984ACB/payments/A2A9A25B11111111222222333327883C/callback?accountName=teampaymentsintegrations&X-VTEX-signature=R******tk\r\n```\r\n\r\nIn the [Transactions page of the Admin](https://help.vtex.com/en/tutorial/how-to-view-the-orders-details--tutorials_452), the signature token appears masked for security reasons, as in this example: `X-VTEX-signature=Rj******tk`.\r\n\r\nWhen making the callback request, we recommend that payment providers use the callback URL exactly as received, which guarantees that all the parameters are included.\r\n\r\nSee below an example of a payload forwarded along with the callback URL:\r\n\r\n```json\r\n{\r\n    \"paymentId\": \"8B3BA2F4352545A8B1C5A215F356A01C\",\r\n    \"status\": \"approved\",\r\n    \"authorizationId\": \"184520\",\r\n    \"nsu\": \"21705348\",\r\n    \"tid\": \"21705348\",\r\n    \"acquirer\": \"pagmm\",\r\n    \"code\": \"0000\",\r\n    \"message\": \"Successfully approved transaction\",\r\n    \"delayToAutoSettle\": 1200,\r\n    \"delayToAutoSettleAfterAntifraud\": 1200,\r\n    \"delayToCancel\": 86400,\r\n    \"cardBrand\": \"Mastercard\",\r\n    \"firstDigits\": \"534696\",\r\n    \"lastDigits\": \"6921\",\r\n    \"maxValue\": 16.6\r\n}\r\n```\r\n\r\n>ℹ️ The parameter values sent in the callback payload replace the original values informed in the **Create Payment** request.\r\n\r\n>⚠️ If the waiting parameters (`delayToAutoSettle` and `delayToAutoSettleAfterAntifraud`) are not sent with the callback URL, the values for these parameters will be automatically set to 24 hours.\r\n\r\n## Beta features\r\n\r\nThe beta features available for payment providers are:\r\n\r\n- `inboundRequestsUrl`: Allows to forward external requests back to your payment provider implementation, including the configured credentials (`X-VTEX-API-*` headers), and settings.\r\n\r\n>ℹ You can reach out to our team by [opening a ticket](https://help.vtex.com/en/tutorial/opening-tickets-to-vtex-support--16yOEqpO32UQYygSmMSSAM) to know more about any beta features.\r\n\r\n## Permissions\r\n\r\nCheck with your service provider to know what permissions are needed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "payments"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppKey",
                "value": "{{X-PROVIDER-API-AppKey}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppToken",
                "value": "{{X-PROVIDER-API-AppToken}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reference\": \"618272\",\n  \"orderId\": \"1072430428324\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"2F023FD5A72A49D48A8633252B7CCBD6\",\n  \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\n  \"paymentMethod\": \"Diners\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"364901****2661\",\n    \"csc\": \"***\",\n    \"expiration\": {\n      \"month\": \"12\",\n      \"year\": \"2020\"\n    },\n    \"document\": \"39295416023\",\n    \"token\": null\n  },\n  \"value\": 31.9,\n  \"referenceValue\": 31.9,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"installmentsInterestRate\": 0,\n  \"installmentsValue\": 31.9,\n  \"deviceFingerprint\": \"75076388\",\n  \"ipAddress\": \"187.105.111.65\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"cpf\",\n      \"corporateName\": null,\n      \"tradeName\": null,\n      \"corporateDocument\": null,\n      \"isCorporate\": false,\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521999999999\",\n      \"createdDate\": \"2020-02-18T18:17:45\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"8\",\n        \"name\": \"Tenis Preto I\",\n        \"price\": 30.9,\n        \"quantity\": 1,\n        \"discount\": 0,\n        \"deliveryType\": \"Normal\",\n        \"categoryId\": \"5\",\n        \"sellerId\": \"1\"\n      }\n    ],\n    \"shippingValue\": 1,\n    \"taxValue\": 0\n  },\n  \"url\": \"https://admin.mystore.example.com/orders?q=1072430428324\",\n  \"callbackUrl\": \"https://api.mystore.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/1072430428324\",\n  \"inboundRequestsUrl\": \"https://api.mystore.example.com/checkout/order/1072430428324/inbound-request/:action\",\n  \"recipients\": [\n    {\n      \"id\": \"mymarketplace\",\n      \"name\": \"My Marketplace QA\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"99999999999999\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 31.9\n    }\n  ],\n  \"merchantSettings\": [\n    {\n      \"name\": \"field1\",\n      \"value\": \"value1\"\n    },\n    {\n      \"name\": \"field2\",\n      \"value\": \"value2\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "type": "any",
                  "value": "X-VTEX-API-AppKey",
                  "key": "key"
                },
                {
                  "type": "any",
                  "value": "{{apiKey}}",
                  "key": "value"
                },
                {
                  "type": "any",
                  "value": "header",
                  "key": "in"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d060dd21-3092-4c91-96be-1fbce5b462da",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"618272\",\n  \"orderId\": \"1072430428324\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"2F023FD5A72A49D48A8633252B7CCBD6\",\n  \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\n  \"paymentMethod\": \"Diners\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"364901****2661\",\n    \"csc\": \"***\",\n    \"expiration\": {\n      \"month\": \"12\",\n      \"year\": \"2020\"\n    },\n    \"document\": \"39295416023\",\n    \"token\": null\n  },\n  \"value\": 31.9,\n  \"referenceValue\": 31.9,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"installmentsInterestRate\": 0,\n  \"installmentsValue\": 31.9,\n  \"deviceFingerprint\": \"75076388\",\n  \"ipAddress\": \"187.105.111.65\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"cpf\",\n      \"corporateName\": null,\n      \"tradeName\": null,\n      \"corporateDocument\": null,\n      \"isCorporate\": false,\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521999999999\",\n      \"createdDate\": \"2020-02-18T18:17:45\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"8\",\n        \"name\": \"Tenis Preto I\",\n        \"price\": 30.9,\n        \"quantity\": 1,\n        \"discount\": 0,\n        \"deliveryType\": \"Normal\",\n        \"categoryId\": \"5\",\n        \"sellerId\": \"1\"\n      }\n    ],\n    \"shippingValue\": 1,\n    \"taxValue\": 0\n  },\n  \"url\": \"https://admin.mystore.example.com/orders?q=1072430428324\",\n  \"callbackUrl\": \"https://api.mystore.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/1072430428324\",\n  \"inboundRequestsUrl\": \"https://api.mystore.example.com/checkout/order/1072430428324/inbound-request/:action\",\n  \"recipients\": [\n    {\n      \"id\": \"mymarketplace\",\n      \"name\": \"My Marketplace QA\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"99999999999999\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 31.9\n    }\n  ],\n  \"merchantSettings\": [\n    {\n      \"name\": \"field1\",\n      \"value\": \"value1\"\n    },\n    {\n      \"name\": \"field2\",\n      \"value\": \"value2\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"status\": \"approved\",\n  \"authorizationId\": \"AUT123567\",\n  \"nsu\": \"NSU987432\",\n  \"tid\": \"TID1578324421\",\n  \"acquirer\": \"FooBarPayments\",\n  \"delayToAutoSettle\": 432000,\n  \"delayToAutoSettleAfterAntifraud\": 120,\n  \"delayToCancel\": 600,\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "eb472002-9d15-460e-ab6e-bd33dd4bf323",
              "name": "Success - PIX",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"Pix\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4307.23,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"deviceFingerprint\": \"15ace369587ha\",\n  \"card\": {\n    \"holder\": null,\n    \"number\": null,\n    \"csc\": null,\n    \"expiration\": {\n      \"month\": null,\n      \"year\": null\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"cpf\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521999999999\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"status\": \"undefined\",\n  \"tid\": \"TID1578324421\",\n  \"authorizationId\": null,\n  \"nsu\": null,\n  \"code\": \"APP123\",\n  \"paymentAppData\": {\n    \"payload\": \"{\\\"code\\\":\\\"https://bacen.pix/pix/code\\\",\\\"qrCodeBase64Image\\\":\\\"iVBORw0KGgoAAAANSUhEUgAAAAIAAAACCAYAAABytg0kAAABQGlDQ1BJQ0MgUHJvZmlsZQAAKJFjYGDiSSwoyGFhYGDIzSspCnJ3UoiIjFJgf8LAxSDMwMkgwiCZmFxc4BgQ4ANUwgCjUcG3awyMIPqyLsgspwWXFu+Xeyundb6w0WL33C5M9SiAKyW1OBlI/wHihOSCohIGBsYYIFu5vKQAxG4AskWKgI4CsqeA2OkQ9goQOwnC3gNWExLkDGRfALIFkjMSU4DsB0C2ThKSeDoSG2ovCLAZGZkbhBNwKKmgJLWiBEQ75xdUFmWmZ5QoOAJDJ1XBMy9ZT0fByMDIgIEBFNYQ1Z9vgMOQUYwDIZapzMBgmQEUfIQQSxNmYNiZzsDAU4UQU5/PwMBrxMBw5GJBYlEi3AGM31iK04yNIGzu7QwMrNP+//8M9Ca7JgPD3+v////e/v//32UMDMy3GBgOfAMA4+RdqZ9YRkcAAABWZVhJZk1NACoAAAAIAAGHaQAEAAAAAQAAABoAAAAAAAOShgAHAAAAEgAAAESgAgAEAAAAAQAAAAKgAwAEAAAAAQAAAAIAAAAAQVNDSUkAAABTY3JlZW5zaG900Fpo3gAAAdJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDUuNC4wIj4KICAgPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICAgICAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAgICAgICAgeG1sbnM6ZXhpZj0iaHR0cDovL25zLmFkb2JlLmNvbS9leGlmLzEuMC8iPgogICAgICAgICA8ZXhpZjpQaXhlbFhEaW1lbnNpb24+MjwvZXhpZjpQaXhlbFhEaW1lbnNpb24+CiAgICAgICAgIDxleGlmOlVzZXJDb21tZW50PlNjcmVlbnNob3Q8L2V4aWY6VXNlckNvbW1lbnQ+CiAgICAgICAgIDxleGlmOlBpeGVsWURpbWVuc2lvbj4yPC9leGlmOlBpeGVsWURpbWVuc2lvbj4KICAgICAgPC9yZGY6RGVzY3JpcHRpb24+CiAgIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+Cl89Cn4AAAASSURBVAgdY/wPBAxAwAQiQAAAPfgEAIAu9DkAAAAASUVORK5CYII=\\\"}\"\n  },\n  \"message\": \"The customer needs to finish the payment flow\",\n  \"delayToAutoSettle\": 604800,\n  \"delayToAutoSettleAfterAntifraud\": 120,\n  \"delayToCancel\": 300\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "dd9ba987-086e-4ff0-824b-0aeda4c55040",
              "name": "Success - Credit Card",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"Visa\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4000,\n  \"currency\": \"BRL\",\n  \"installments\": 3,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"4682185088924788\",\n    \"csc\": \"021\",\n    \"expiration\": {\n      \"month\": \"06\",\n      \"year\": \"2029\"\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\n  \"status\": \"approved\",\n  \"authorizationId\": \"AUT-09DC5E8F03\",\n  \"nsu\": \"NSU-107521E866\",\n  \"tid\": \"TID-7B58BE1A08\",\n  \"acquirer\": \"TestPay\",\n  \"code\": \"2000\",\n  \"message\": null,\n  \"delayToAutoSettle\": 21600,\n  \"delayToAutoSettleAfterAntifraud\": 1800,\n  \"delayToCancel\": 21600,\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "097f550e-893b-4e3a-a16e-0f12a218d55d",
              "name": "Success - Bank invoice",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"BankInvoice\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4307.23,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": null,\n    \"number\": null,\n    \"csc\": null,\n    \"expiration\": {\n      \"month\": null,\n      \"year\": null\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\n  \"status\": \"undefined\",\n  \"authorizationId\": \"AUT-2E7CBF7290-ASYNC\",\n  \"paymentUrl\": \"https://example.org/boleto/gatewayqa/2F023FD5A72A49D48A8633252B7CCBD6/01693EB95BE443AC85874E395CD91565\",\n  \"identificationNumber\": \"23790504004199031316957008109209378300000019900\",\n  \"identificationNumberFormatted\": \"23790.50400 41990.313169 57008.109209 3 78300000019900\",\n  \"barCodeImageType\": \"i25\",\n  \"barCodeImageNumber\": \"23793783000000199000504041990313165700810920\",\n  \"nsu\": \"NSU-60F328ACD8-ASYNC\",\n  \"tid\": \"TID-F3FB9B3FDB-ASYNC\",\n  \"acquirer\": \"TestPay\",\n  \"code\": \"2000-ASYNC\",\n  \"message\": null,\n  \"delayToAutoSettle\": 21600,\n  \"delayToAutoSettleAfterAntifraud\": 1800,\n  \"delayToCancel\": 21600\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9d995d2a-2a4e-4855-87dc-3ef7a8f371f3",
              "name": "Success - Payment App",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"Visa\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4000,\n  \"currency\": \"BRL\",\n  \"installments\": 3,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"4682185088924788\",\n    \"csc\": \"021\",\n    \"expiration\": {\n      \"month\": \"06\",\n      \"year\": \"2029\"\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\n  \"status\": \"undefined\",\n  \"authorizationId\": \"AUT-6929AD8429\",\n  \"paymentAppData\": {\n    \"appName\": \"vtex.payment\",\n    \"payload\": \"{\\\"approvePaymentUrl\\\":\\\"https://api.mystore.example.com/payments/F5C1A4E20D3B4E07B7E871F5B5BC9F91/callback-trigger/approved?url=https://api.mystore.example.com/transactions/D3AA1FC8372E430E8236649DB5EBD08E/payments/F5C1A4E20D3B4E07B7E871F5B5BC9F91/notification\\\",\\\"denyPaymentUrl\\\":\\\"https://api.mystore.example.com/payments/F5C1A4E20D3B4E07B7E871F5B5BC9F91/callback-trigger/denied?url=https://api.mystore.example.com/transactions/D3AA1FC8372E430E8236649DB5EBD08E/payments/F5C1A4E20D3B4E07B7E871F5B5BC9F91/notification\\\",\\\"orderId\\\":\\\"1072650953886\\\",\\\"transactionId\\\":\\\"D3AA1FC8372E430E8236649DB5EBD08E\\\",\\\"paymentId\\\":\\\"F5C1A4E20D3B4E07B7E871F5B5BC9F91\\\",\\\"timestamp\\\":\\\"2020-10-29 17:15:59Z\\\"}\"\n  },\n  \"nsu\": \"NSU-227AFD0BD2\",\n  \"tid\": \"TID-DBE4BFFB19\",\n  \"acquirer\": \"TestPay\",\n  \"code\": \"2001\",\n  \"message\": null,\n  \"delayToAutoSettle\": 21600,\n  \"delayToAutoSettleAfterAntifraud\": 1800,\n  \"delayToCancel\": 21600\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f6de442a-0c44-4537-801a-c6a0313fdc01",
              "name": "Success - Redirect",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"618272\",\n  \"orderId\": \"1072430428324\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"2F023FD5A72A49D48A8633252B7CCBD6\",\n  \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\n  \"paymentMethod\": \"BankInvoice\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"card\": {\n    \"holder\": \"null\",\n    \"number\": \"null\",\n    \"csc\": \"null\",\n    \"expiration\": {\n      \"month\": \"null\",\n      \"year\": \"null\"\n    }\n  },\n  \"document\": null,\n  \"token\": null,\n  \"value\": 31.9,\n  \"referenceValue\": 31.9,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"installmentsInterestRate\": 0,\n  \"installmentsValue\": 31.9,\n  \"deviceFingerprint\": \"98073964\",\n  \"ipAddress\": \"187.105.111.65\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"cpf\",\n      \"corporateName\": null,\n      \"tradeName\": null,\n      \"corporateDocument\": null,\n      \"isCorporate\": false,\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521999999999\",\n      \"createdDate\": \"2020-02-18T18:17:45\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"8\",\n        \"name\": \"Tenis Preto I\",\n        \"price\": 30.9,\n        \"quantity\": 1,\n        \"discount\": 0,\n        \"deliveryType\": \"Normal\",\n        \"categoryId\": \"5\",\n        \"sellerId\": \"1\"\n      }\n    ],\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01\n  },\n  \"url\": \"https://admin.mystore.example.com/orders?q=1072430428324\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/1072430428324\",\n  \"inboundRequestsUrl\": \"https://api.mystore.example.com/checkout/order/1072430428324/inbound-request/:action\",\n  \"recipients\": [\n    {\n      \"id\": \"mymarketplace\",\n      \"name\": \"My Marketplace QA\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"99999999999999\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 31.9\n    }\n  ],\n  \"merchantSettings\": [\n    {\n      \"name\": \"field1\",\n      \"value\": \"value1\"\n    },\n    {\n      \"name\": \"field2\",\n      \"value\": \"value2\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"7ee64e51-a0d3-4405-874c-d7497ab84572\",\n  \"status\": \"undefined\",\n  \"tid\": \"214c699cb408ce6a7110\",\n  \"paymentUrl\": \"http://php-connector.herokuapp.com/installments.php?paymentId=7ee64e51-a0d3-4405-874c-d7497ab84572\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b9ce5b5b-9fed-472e-aaba-2a24093b8325",
              "name": "Success - Callback",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"CustomPay\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4307.23,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": null,\n    \"number\": null,\n    \"csc\": null,\n    \"expiration\": {\n      \"month\": null,\n      \"year\": null\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\",\n  \"inboundRequestsUrl\": \"https://mystore.api.example.com/some-path/inbound-request/:action\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"7ee64e51-a0d3-4405-874c-d7497ab84572\",\n  \"status\": \"approved\",\n  \"authorizationId\": \"3baafb4097d6c8ad3883\",\n  \"paymentUrl\": null,\n  \"nsu\": \"214c699cb408ce6a7110\",\n  \"tid\": \"214c699cb408ce6a7110\",\n  \"acquirer\": null,\n  \"code\": null,\n  \"message\": \"Payment with custom installments approved\",\n  \"delayToAutoSettle\": 21600,\n  \"delayToAutoSettleAfterAntifraud\": 1800,\n  \"delayToCancel\": 21600\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "09d6d6db-a0fe-4c4e-92e8-87c4484f4532",
              "name": "Redirect Success Undefined",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"FakePay\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4307.23,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": null,\n    \"number\": null,\n    \"csc\": null,\n    \"expiration\": {\n      \"month\": null,\n      \"year\": null\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"status\": \"approved\",\n  \"authorizationId\": \"AUT123567\",\n  \"nsu\": \"NSU987432\",\n  \"tid\": \"TID1578324421\",\n  \"acquirer\": \"FooBarPayments\",\n  \"delayToAutoSettle\": 432000,\n  \"delayToAutoSettleAfterAntifraud\": 120,\n  \"delayToCancel\": 600,\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d19a1002-25b0-4d69-85ba-0dc5410cedb1",
              "name": "Redirect Success Approved",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"618272\",\n  \"orderId\": \"1072430428324\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"2F023FD5A72A49D48A8633252B7CCBD6\",\n  \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\n  \"paymentMethod\": \"RedirectPay\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 31.9,\n  \"referenceValue\": 31.9,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"installmentsInterestRate\": 0,\n  \"installmentsValue\": 31.9,\n  \"deviceFingerprint\": \"75076388\",\n  \"ipAddress\": \"187.105.111.65\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"cpf\",\n      \"corporateName\": null,\n      \"tradeName\": null,\n      \"corporateDocument\": null,\n      \"isCorporate\": false,\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521999999999\",\n      \"createdDate\": \"2020-02-18T18:17:45\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"8\",\n        \"name\": \"Tenis Preto I\",\n        \"price\": 30.9,\n        \"quantity\": 1,\n        \"discount\": 0,\n        \"deliveryType\": \"Normal\",\n        \"categoryId\": \"5\",\n        \"sellerId\": \"1\"\n      }\n    ],\n    \"shippingValue\": 1,\n    \"taxValue\": 0\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\",\n  \"inboundRequestsUrl\": \"https://api.mystore.example.com/checkout/order/1072430428324/inbound-request/:action\",\n  \"recipients\": [\n    {\n      \"id\": \"mymarketplace\",\n      \"name\": \"My Marketplace QA\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"99999999999999\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 31.9\n    }\n  ],\n  \"merchantSettings\": [\n    {\n      \"name\": \"field1\",\n      \"value\": \"value1\"\n    },\n    {\n      \"name\": \"field2\",\n      \"value\": \"value2\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"status\": \"approved\",\n  \"authorizationId\": \"AUT123567\",\n  \"nsu\": \"NSU987432\",\n  \"tid\": \"TID1578324421\",\n  \"acquirer\": \"FooBarPayments\",\n  \"delayToAutoSettle\": 432000,\n  \"delayToAutoSettleAfterAntifraud\": 120,\n  \"delayToCancel\": 600,\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "26648b62-770e-47ef-94e7-475187c52243",
              "name": "Fail Generic Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"Visa\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4000,\n  \"currency\": \"BRL\",\n  \"installments\": 3,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"4682185088924788\",\n    \"csc\": \"021\",\n    \"expiration\": {\n      \"month\": \"06\",\n      \"year\": \"2029\"\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"status\": \"approved\",\n  \"authorizationId\": \"AUT123567\",\n  \"nsu\": \"NSU987432\",\n  \"tid\": \"TID1578324421\",\n  \"acquirer\": \"FooBarPayments\",\n  \"delayToAutoSettle\": 432000,\n  \"delayToAutoSettleAfterAntifraud\": 120,\n  \"delayToCancel\": 600,\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "eec828e3-f028-4237-a9ac-a8226181fd7b",
              "name": "Fail Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"Visa\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4000,\n  \"currency\": \"BRL\",\n  \"installments\": 3,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"4682185088924788\",\n    \"csc\": \"021\",\n    \"expiration\": {\n      \"month\": \"06\",\n      \"year\": \"2029\"\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"status\": \"approved\",\n  \"authorizationId\": \"AUT123567\",\n  \"nsu\": \"NSU987432\",\n  \"tid\": \"TID1578324421\",\n  \"acquirer\": \"FooBarPayments\",\n  \"delayToAutoSettle\": 432000,\n  \"delayToAutoSettleAfterAntifraud\": 120,\n  \"delayToCancel\": 600,\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3a6bfa44-27a5-41c3-976a-21bdbd749af5",
              "name": "Credit Card Success Approved",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"618272\",\n  \"orderId\": \"1072430428324\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"2F023FD5A72A49D48A8633252B7CCBD6\",\n  \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\n  \"paymentMethod\": \"Diners\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"364901****2661\",\n    \"csc\": \"***\",\n    \"expiration\": {\n      \"month\": \"12\",\n      \"year\": \"2020\"\n    },\n    \"document\": \"39295416023\",\n    \"token\": null\n  },\n  \"value\": 31.9,\n  \"referenceValue\": 31.9,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"installmentsInterestRate\": 0,\n  \"installmentsValue\": 31.9,\n  \"deviceFingerprint\": \"75076388\",\n  \"ipAddress\": \"187.105.111.65\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"cpf\",\n      \"corporateName\": null,\n      \"tradeName\": null,\n      \"corporateDocument\": null,\n      \"isCorporate\": false,\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521999999999\",\n      \"createdDate\": \"2020-02-18T18:17:45\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"8\",\n        \"name\": \"Tenis Preto I\",\n        \"price\": 30.9,\n        \"quantity\": 1,\n        \"discount\": 0,\n        \"deliveryType\": \"Normal\",\n        \"categoryId\": \"5\",\n        \"sellerId\": \"1\"\n      }\n    ],\n    \"shippingValue\": 1,\n    \"taxValue\": 0\n  },\n  \"url\": \"https://admin.mystore.example.com/orders?q=1072430428324\",\n  \"callbackUrl\": \"https://api.mystore.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/1072430428324\",\n  \"inboundRequestsUrl\": \"https://api.mystore.example.com/checkout/order/1072430428324/inbound-request/:action\",\n  \"recipients\": [\n    {\n      \"id\": \"mymarketplace\",\n      \"name\": \"My Marketplace QA\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"99999999999999\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 31.9\n    }\n  ],\n  \"merchantSettings\": [\n    {\n      \"name\": \"field1\",\n      \"value\": \"value1\"\n    },\n    {\n      \"name\": \"field2\",\n      \"value\": \"value2\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"The currency ABC is not supported\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9cdc896e-eb3f-40f4-8d27-774e93287078",
              "name": "Pix Success Approved",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"Pix\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4307.23,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"deviceFingerprint\": \"15ace369587ha\",\n  \"card\": {\n    \"holder\": null,\n    \"number\": null,\n    \"csc\": null,\n    \"expiration\": {\n      \"month\": null,\n      \"year\": null\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"cpf\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521999999999\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"The currency ABC is not supported\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7a362857-87de-42f1-855f-0182138dfd2c",
              "name": "Success Undefined",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"Visa\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4000,\n  \"currency\": \"BRL\",\n  \"installments\": 3,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"4682185088924788\",\n    \"csc\": \"021\",\n    \"expiration\": {\n      \"month\": \"06\",\n      \"year\": \"2029\"\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"The currency ABC is not supported\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "617efd1e-57d3-468b-a137-fa4cc62e7b30",
              "name": "BankInvoice Success Undefined",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"BankInvoice\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4307.23,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": null,\n    \"number\": null,\n    \"csc\": null,\n    \"expiration\": {\n      \"month\": null,\n      \"year\": null\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"The currency ABC is not supported\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "113f3ced-b069-4c74-a75c-0fdb3aff10f1",
              "name": "Success Denied",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"Visa\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4000,\n  \"currency\": \"BRL\",\n  \"installments\": 3,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"4682185088924788\",\n    \"csc\": \"021\",\n    \"expiration\": {\n      \"month\": \"06\",\n      \"year\": \"2029\"\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"The currency ABC is not supported\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "91a3d11f-2bf3-4ed6-acfd-d70bb21f6afc",
              "name": "BankInvoice Success Approved",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"618272\",\n  \"orderId\": \"1072430428324\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"2F023FD5A72A49D48A8633252B7CCBD6\",\n  \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\n  \"paymentMethod\": \"BankInvoice\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"card\": {\n    \"holder\": \"null\",\n    \"number\": \"null\",\n    \"csc\": \"null\",\n    \"expiration\": {\n      \"month\": \"null\",\n      \"year\": \"null\"\n    }\n  },\n  \"document\": null,\n  \"token\": null,\n  \"value\": 31.9,\n  \"referenceValue\": 31.9,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"installmentsInterestRate\": 0,\n  \"installmentsValue\": 31.9,\n  \"deviceFingerprint\": \"98073964\",\n  \"ipAddress\": \"187.105.111.65\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"cpf\",\n      \"corporateName\": null,\n      \"tradeName\": null,\n      \"corporateDocument\": null,\n      \"isCorporate\": false,\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521999999999\",\n      \"createdDate\": \"2020-02-18T18:17:45\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"8\",\n        \"name\": \"Tenis Preto I\",\n        \"price\": 30.9,\n        \"quantity\": 1,\n        \"discount\": 0,\n        \"deliveryType\": \"Normal\",\n        \"categoryId\": \"5\",\n        \"sellerId\": \"1\"\n      }\n    ],\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01\n  },\n  \"url\": \"https://admin.mystore.example.com/orders?q=1072430428324\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/1072430428324\",\n  \"inboundRequestsUrl\": \"https://api.mystore.example.com/checkout/order/1072430428324/inbound-request/:action\",\n  \"recipients\": [\n    {\n      \"id\": \"mymarketplace\",\n      \"name\": \"My Marketplace QA\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"99999999999999\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 31.9\n    }\n  ],\n  \"merchantSettings\": [\n    {\n      \"name\": \"field1\",\n      \"value\": \"value1\"\n    },\n    {\n      \"name\": \"field2\",\n      \"value\": \"value2\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"The currency ABC is not supported\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a83f9aa9-2ec5-449c-9c4e-a58ce8240024",
              "name": "Payment App + Inbound Request Success Undefined",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"CustomPay\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4307.23,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": null,\n    \"number\": null,\n    \"csc\": null,\n    \"expiration\": {\n      \"month\": null,\n      \"year\": null\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\",\n  \"inboundRequestsUrl\": \"https://mystore.api.example.com/some-path/inbound-request/:action\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"The currency ABC is not supported\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5e216aa8-18dd-407f-96dd-2915ecd9e0fa",
              "name": "Redirect Success Undefined",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"FakePay\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4307.23,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": null,\n    \"number\": null,\n    \"csc\": null,\n    \"expiration\": {\n      \"month\": null,\n      \"year\": null\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"The currency ABC is not supported\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d20c1c45-ee48-4768-9749-9bbfbdab9cb2",
              "name": "Redirect Success Approved",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"618272\",\n  \"orderId\": \"1072430428324\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"2F023FD5A72A49D48A8633252B7CCBD6\",\n  \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\n  \"paymentMethod\": \"RedirectPay\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 31.9,\n  \"referenceValue\": 31.9,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"installmentsInterestRate\": 0,\n  \"installmentsValue\": 31.9,\n  \"deviceFingerprint\": \"75076388\",\n  \"ipAddress\": \"187.105.111.65\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"cpf\",\n      \"corporateName\": null,\n      \"tradeName\": null,\n      \"corporateDocument\": null,\n      \"isCorporate\": false,\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521999999999\",\n      \"createdDate\": \"2020-02-18T18:17:45\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"8\",\n        \"name\": \"Tenis Preto I\",\n        \"price\": 30.9,\n        \"quantity\": 1,\n        \"discount\": 0,\n        \"deliveryType\": \"Normal\",\n        \"categoryId\": \"5\",\n        \"sellerId\": \"1\"\n      }\n    ],\n    \"shippingValue\": 1,\n    \"taxValue\": 0\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\",\n  \"inboundRequestsUrl\": \"https://api.mystore.example.com/checkout/order/1072430428324/inbound-request/:action\",\n  \"recipients\": [\n    {\n      \"id\": \"mymarketplace\",\n      \"name\": \"My Marketplace QA\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"99999999999999\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 31.9\n    }\n  ],\n  \"merchantSettings\": [\n    {\n      \"name\": \"field1\",\n      \"value\": \"value1\"\n    },\n    {\n      \"name\": \"field2\",\n      \"value\": \"value2\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"The currency ABC is not supported\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0cd7ffa3-29eb-4214-b8fa-0436c3891406",
              "name": "Fail Generic Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"Visa\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4000,\n  \"currency\": \"BRL\",\n  \"installments\": 3,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"4682185088924788\",\n    \"csc\": \"021\",\n    \"expiration\": {\n      \"month\": \"06\",\n      \"year\": \"2029\"\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"The currency ABC is not supported\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f16f77e7-f7b8-4171-ad31-8dfcfdca50d1",
              "name": "Fail Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"Visa\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4000,\n  \"currency\": \"BRL\",\n  \"installments\": 3,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"4682185088924788\",\n    \"csc\": \"021\",\n    \"expiration\": {\n      \"month\": \"06\",\n      \"year\": \"2029\"\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"The currency ABC is not supported\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0dccaa19-d602-4f2a-b514-f8e65115cc7f",
              "name": "Credit Card Success Approved",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"618272\",\n  \"orderId\": \"1072430428324\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"2F023FD5A72A49D48A8633252B7CCBD6\",\n  \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\n  \"paymentMethod\": \"Diners\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"364901****2661\",\n    \"csc\": \"***\",\n    \"expiration\": {\n      \"month\": \"12\",\n      \"year\": \"2020\"\n    },\n    \"document\": \"39295416023\",\n    \"token\": null\n  },\n  \"value\": 31.9,\n  \"referenceValue\": 31.9,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"installmentsInterestRate\": 0,\n  \"installmentsValue\": 31.9,\n  \"deviceFingerprint\": \"75076388\",\n  \"ipAddress\": \"187.105.111.65\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"cpf\",\n      \"corporateName\": null,\n      \"tradeName\": null,\n      \"corporateDocument\": null,\n      \"isCorporate\": false,\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521999999999\",\n      \"createdDate\": \"2020-02-18T18:17:45\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"8\",\n        \"name\": \"Tenis Preto I\",\n        \"price\": 30.9,\n        \"quantity\": 1,\n        \"discount\": 0,\n        \"deliveryType\": \"Normal\",\n        \"categoryId\": \"5\",\n        \"sellerId\": \"1\"\n      }\n    ],\n    \"shippingValue\": 1,\n    \"taxValue\": 0\n  },\n  \"url\": \"https://admin.mystore.example.com/orders?q=1072430428324\",\n  \"callbackUrl\": \"https://api.mystore.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/1072430428324\",\n  \"inboundRequestsUrl\": \"https://api.mystore.example.com/checkout/order/1072430428324/inbound-request/:action\",\n  \"recipients\": [\n    {\n      \"id\": \"mymarketplace\",\n      \"name\": \"My Marketplace QA\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"99999999999999\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 31.9\n    }\n  ],\n  \"merchantSettings\": [\n    {\n      \"name\": \"field1\",\n      \"value\": \"value1\"\n    },\n    {\n      \"name\": \"field2\",\n      \"value\": \"value2\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"Authorization has failed due to an internal error\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0fe3be09-11c9-4bbd-a31d-3840656986c9",
              "name": "Pix Success Approved",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"Pix\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4307.23,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"deviceFingerprint\": \"15ace369587ha\",\n  \"card\": {\n    \"holder\": null,\n    \"number\": null,\n    \"csc\": null,\n    \"expiration\": {\n      \"month\": null,\n      \"year\": null\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"cpf\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521999999999\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"Authorization has failed due to an internal error\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7f5d435d-18b5-4bd8-af46-4b9537e20063",
              "name": "Success Undefined",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"Visa\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4000,\n  \"currency\": \"BRL\",\n  \"installments\": 3,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"4682185088924788\",\n    \"csc\": \"021\",\n    \"expiration\": {\n      \"month\": \"06\",\n      \"year\": \"2029\"\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"Authorization has failed due to an internal error\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a93e37ca-8557-4d83-9fdb-db8e46d22858",
              "name": "BankInvoice Success Undefined",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"BankInvoice\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4307.23,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": null,\n    \"number\": null,\n    \"csc\": null,\n    \"expiration\": {\n      \"month\": null,\n      \"year\": null\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"Authorization has failed due to an internal error\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "38d5cb19-2c6f-4dc7-8da5-fdb7bf6e0f9e",
              "name": "Success Denied",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"Visa\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4000,\n  \"currency\": \"BRL\",\n  \"installments\": 3,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"4682185088924788\",\n    \"csc\": \"021\",\n    \"expiration\": {\n      \"month\": \"06\",\n      \"year\": \"2029\"\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"Authorization has failed due to an internal error\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a63a58c3-6f17-4b26-8893-7ae60de77713",
              "name": "BankInvoice Success Approved",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"618272\",\n  \"orderId\": \"1072430428324\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"2F023FD5A72A49D48A8633252B7CCBD6\",\n  \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\n  \"paymentMethod\": \"BankInvoice\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"card\": {\n    \"holder\": \"null\",\n    \"number\": \"null\",\n    \"csc\": \"null\",\n    \"expiration\": {\n      \"month\": \"null\",\n      \"year\": \"null\"\n    }\n  },\n  \"document\": null,\n  \"token\": null,\n  \"value\": 31.9,\n  \"referenceValue\": 31.9,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"installmentsInterestRate\": 0,\n  \"installmentsValue\": 31.9,\n  \"deviceFingerprint\": \"98073964\",\n  \"ipAddress\": \"187.105.111.65\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"cpf\",\n      \"corporateName\": null,\n      \"tradeName\": null,\n      \"corporateDocument\": null,\n      \"isCorporate\": false,\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521999999999\",\n      \"createdDate\": \"2020-02-18T18:17:45\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"8\",\n        \"name\": \"Tenis Preto I\",\n        \"price\": 30.9,\n        \"quantity\": 1,\n        \"discount\": 0,\n        \"deliveryType\": \"Normal\",\n        \"categoryId\": \"5\",\n        \"sellerId\": \"1\"\n      }\n    ],\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01\n  },\n  \"url\": \"https://admin.mystore.example.com/orders?q=1072430428324\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/1072430428324\",\n  \"inboundRequestsUrl\": \"https://api.mystore.example.com/checkout/order/1072430428324/inbound-request/:action\",\n  \"recipients\": [\n    {\n      \"id\": \"mymarketplace\",\n      \"name\": \"My Marketplace QA\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"99999999999999\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 31.9\n    }\n  ],\n  \"merchantSettings\": [\n    {\n      \"name\": \"field1\",\n      \"value\": \"value1\"\n    },\n    {\n      \"name\": \"field2\",\n      \"value\": \"value2\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"Authorization has failed due to an internal error\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c3552670-87f6-47d2-ba9a-08dd1db63e24",
              "name": "Payment App + Inbound Request Success Undefined",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"CustomPay\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4307.23,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": null,\n    \"number\": null,\n    \"csc\": null,\n    \"expiration\": {\n      \"month\": null,\n      \"year\": null\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\",\n  \"inboundRequestsUrl\": \"https://mystore.api.example.com/some-path/inbound-request/:action\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"Authorization has failed due to an internal error\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9f69e59d-52d1-42b4-b615-c26ea1f8dced",
              "name": "Redirect Success Undefined",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"FakePay\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4307.23,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": null,\n    \"number\": null,\n    \"csc\": null,\n    \"expiration\": {\n      \"month\": null,\n      \"year\": null\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"Authorization has failed due to an internal error\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "71e0e2b0-2464-4625-961c-6f7e53fec1fd",
              "name": "Redirect Success Approved",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"618272\",\n  \"orderId\": \"1072430428324\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"2F023FD5A72A49D48A8633252B7CCBD6\",\n  \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\n  \"paymentMethod\": \"RedirectPay\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 31.9,\n  \"referenceValue\": 31.9,\n  \"currency\": \"BRL\",\n  \"installments\": 1,\n  \"installmentsInterestRate\": 0,\n  \"installmentsValue\": 31.9,\n  \"deviceFingerprint\": \"75076388\",\n  \"ipAddress\": \"187.105.111.65\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"cpf\",\n      \"corporateName\": null,\n      \"tradeName\": null,\n      \"corporateDocument\": null,\n      \"isCorporate\": false,\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521999999999\",\n      \"createdDate\": \"2020-02-18T18:17:45\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"8\",\n        \"name\": \"Tenis Preto I\",\n        \"price\": 30.9,\n        \"quantity\": 1,\n        \"discount\": 0,\n        \"deliveryType\": \"Normal\",\n        \"categoryId\": \"5\",\n        \"sellerId\": \"1\"\n      }\n    ],\n    \"shippingValue\": 1,\n    \"taxValue\": 0\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\",\n  \"inboundRequestsUrl\": \"https://api.mystore.example.com/checkout/order/1072430428324/inbound-request/:action\",\n  \"recipients\": [\n    {\n      \"id\": \"mymarketplace\",\n      \"name\": \"My Marketplace QA\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"99999999999999\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 31.9\n    }\n  ],\n  \"merchantSettings\": [\n    {\n      \"name\": \"field1\",\n      \"value\": \"value1\"\n    },\n    {\n      \"name\": \"field2\",\n      \"value\": \"value2\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"Authorization has failed due to an internal error\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ec9a005f-107f-4b3e-9670-de45208c99e9",
              "name": "Fail Generic Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"Visa\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4000,\n  \"currency\": \"BRL\",\n  \"installments\": 3,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"4682185088924788\",\n    \"csc\": \"021\",\n    \"expiration\": {\n      \"month\": \"06\",\n      \"year\": \"2029\"\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"Authorization has failed due to an internal error\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "dc7e9303-7283-4ab6-8284-2bade43616c7",
              "name": "Fail Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"reference\": \"32478982\",\n  \"orderId\": \"v967373115140abc\",\n  \"shopperInteraction\": \"ecommerce\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentMethod\": \"Visa\",\n  \"paymentMethodCustomCode\": null,\n  \"merchantName\": \"mystore\",\n  \"value\": 4307.23,\n  \"referenceValue\": 4000,\n  \"currency\": \"BRL\",\n  \"installments\": 3,\n  \"deviceFingerprint\": \"12ade389087fe\",\n  \"card\": {\n    \"holder\": \"John Doe\",\n    \"number\": \"4682185088924788\",\n    \"csc\": \"021\",\n    \"expiration\": {\n      \"month\": \"06\",\n      \"year\": \"2029\"\n    }\n  },\n  \"miniCart\": {\n    \"shippingValue\": 11.44,\n    \"taxValue\": 10.01,\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"01234567890\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+5521987654321\"\n    },\n    \"shippingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Praia de Botafogo St.\",\n      \"number\": \"300\",\n      \"complement\": \"3rd Floor\",\n      \"neighborhood\": \"Botafogo\",\n      \"postalCode\": \"22250040\",\n      \"city\": \"Rio de Janeiro\",\n      \"state\": \"RJ\"\n    },\n    \"billingAddress\": {\n      \"country\": \"BRA\",\n      \"street\": \"Brigadeiro Faria Lima Avenue\",\n      \"number\": \"4440\",\n      \"complement\": \"10th Floor\",\n      \"neighborhood\": \"Itaim Bibi\",\n      \"postalCode\": \"04538132\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"My First Product\",\n        \"price\": 2134.9,\n        \"quantity\": 2,\n        \"discount\": 5\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"My Second Product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"discount\": 1\n      }\n    ]\n  },\n  \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n  \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\n  \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"error\",\n  \"code\": \"ERR123\",\n  \"message\": \"Authorization has failed due to an internal error\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e699577-b337-4476-9279-2772bf3e1466",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/payments - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/payments - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/payments - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"paymentId\",\"status\",\"authorizationId\",\"tid\",\"nsu\",\"acquirer\",\"delayToAutoSettle\",\"delayToAutoSettleAfterAntifraud\",\"delayToCancel\"],\"type\":\"object\",\"description\":\"Create payment response body information.\",\"properties\":{\"paymentId\":{\"type\":\"string\",\"description\":\"VTEX identifier for this payment. The same sent in the request.\"},\"status\":{\"type\":\"string\",\"description\":\"The Provider's status for this payment. Must be one of three values:\\r\\n\\r\\n- `approved`\\r\\n- `denied`\\r\\n- `undefined`.\"},\"authorizationId\":{\"type\":\"string\",\"description\":\"Provider's unique identifier for the authorization. Should be sent when the payment is authorized. In other statuses, it should be absent or `null`.\"},\"bankIssueInvoiceId\":{\"type\":\"string\",\"description\":\"This field is deprecated, please use `paymentUrl` instead. The bank invoice URL to be presented to the end user.\"},\"paymentUrl\":{\"type\":[\"string\",\"null\"],\"description\":\"When the payment is via bank invoice, this should be the invoice URL to be presented to the user. If the payment requires the redirection of the user, this should be the URL to redirect the user. If neither is the case, then this should be absent.\"},\"paymentAppData\":{\"type\":\"object\",\"description\":\"Object which indicates that a [Payment App](https://developers.vtex.com/docs/guides/payments-integration-payment-app) is needed to finish the payment. This object contains the data to be used by the Payment App.\",\"required\":[\"appName\",\"payload\"],\"properties\":{\"appName\":{\"type\":\"string\",\"description\":\"Indicates which VTEX IO app that will handle the payment flow at Checkout.\"},\"payload\":{\"type\":\"string\",\"description\":\"The payload that will be sent to your app, like a serialized JSON, for example.\"}}},\"identificationNumber\":{\"type\":\"string\",\"description\":\"The bank invoice unformatted identification number. Should only be present when the payment is made via bank invoice.\"},\"identificationNumberFormatted\":{\"type\":\"string\",\"description\":\"The bank invoice formatted identification number that will be presented to the end user.\"},\"barCodeImageType\":{\"type\":\"string\",\"description\":\"The bank invoice barcode image type. For instance, \\\"i25\\\" for Brazilian *Boleto Bancário*. Should only be present when the payment is made via bank invoice.\"},\"barCodeImageNumber\":{\"type\":\"string\",\"description\":\"The bank invoice number to generate a barcode (must follow any regulations/specifications for targeted countries). Should only be present when the payment is made via bank invoice.\"},\"tid\":{\"type\":\"string\",\"description\":\"Provider's unique identifier for the transaction.\"},\"nsu\":{\"type\":[\"string\",\"null\"],\"description\":\"Provider's unique sequential number for the transaction.\"},\"acquirer\":{\"type\":[\"string\",\"null\"],\"description\":\"Acquirer name (mostly used for card payments).\"},\"redirectUrl\":{\"type\":\"string\",\"description\":\"This field is deprecated, please use `paymentUrl` instead. The URL the end user needs to be redirected to (external authentication, 3DS, etc).\"},\"code\":{\"type\":[\"string\",\"null\"],\"description\":\"Provider's operation/error code to be logged.\"},\"message\":{\"type\":[\"string\",\"null\"],\"description\":\"Provider's operation/error message to be logged.\"},\"delayToAutoSettle\":{\"type\":\"integer\",\"description\":\"Total time (in seconds) before we make an automatic call to `/settlements`, regardless of whether the payment was approved by the merchant's anti-fraud provider or not. The maximum time allowed to wait for an auto capture is 604800 seconds (7 days).\"},\"delayToAutoSettleAfterAntifraud\":{\"type\":\"integer\",\"description\":\"Total time (in seconds) before we make an automatic call to `/settlements` after merchant's antifraud approval.\"},\"delayToCancel\":{\"type\":\"integer\",\"description\":\"Total time (in seconds) to wait for an authorization and make an automatic call to `/cancellations` to cancel the payment. The minimum value is 10 minutes (600 seconds). **NOTE 1**: If you set this field to a time period less than 24 hours (86399 seconds or less), the gateway will retry processing the payment every 1 hour. If you use a value of 24 hours (86400 seconds) or more in this field, the gateway will retry processing the payment every 4 hours. **NOTE 2**:  For `delayToCancel` values between 5 minutes and 1 hour (300 and 3600 seconds), or when payment is made by [PIX](https://developers.vtex.com/docs/guides/payments-integration-pix-instant-payments-in-brazil) (Brazilian instant payment method), retry calls will occur every 5 minutes. **NOTE 3**:  The maximum value allowed for the `delayToCancel` field is 30 days (2592000 seconds).\"},\"maxValue\":{\"type\":\"integer\",\"description\":\"The maximum value for this payment. This field allows changes to be made to transactions to settle larger amounts as a result of order changes.\"},\"connectorMetadata\":{\"type\":\"array\",\"description\":\"Array containing metadata fields sent from the provider to the payment gateway.\",\"items\":{\"type\":\"object\",\"description\":\"Metadata fields information.\",\"required\":[\"name\",\"value\"],\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"The name of the metadata to be stored in the gateway (limited to 20 characters).\"},\"value\":{\"type\":\"string\",\"description\":\"The value of the metadata stored (limited to 200 characters).\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/payments - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f2a8456a-1b2f-433d-aa5e-0d2b5fdd5d3b",
          "name": "Cancel payment",
          "request": {
            "name": "Cancel payment",
            "description": {
              "content": "Cancels a payment that was not yet approved or settled.\r\n\r\n> ℹ️ This request is made from VTEX to the payment provider.\r\n\r\n## Permissions\r\n\r\nCheck with your service provider to know what permissions are needed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "payments",
                ":paymentId",
                "cancellations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) VTEX payment identifier.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                  "key": "paymentId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppKey",
                "value": "{{X-PROVIDER-API-AppKey}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppToken",
                "value": "{{X-PROVIDER-API-AppToken}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"requestId\": \"D12D9B80972C462980F5067A3A126837\",\n  \"authorizationId\": \"5784589\",\n  \"tid\": \"10022005181543584603\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"nsu\": \"NSU987432\",\n  \"sandboxMode\": false,\n  \"merchantSettings\": [\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    },\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    },\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "type": "any",
                  "value": "X-VTEX-API-AppKey",
                  "key": "key"
                },
                {
                  "type": "any",
                  "value": "{{apiKey}}",
                  "key": "value"
                },
                {
                  "type": "any",
                  "value": "header",
                  "key": "in"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "78038d37-7379-49a3-bd96-5b340e600feb",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments",
                    ":paymentId",
                    "cancellations"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"requestId\": \"D12D9B80972C462980F5067A3A126837\",\n  \"authorizationId\": \"5784589\",\n  \"tid\": \"10022005181543584603\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"nsu\": \"NSU987432\",\n  \"sandboxMode\": false,\n  \"merchantSettings\": [\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    },\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    },\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"cancellationId\": \"1231323234234\",\n  \"code\": null,\n  \"message\": \"Successfully cancelled\",\n  \"requestId\": \"D12D9B80972C462980F5067A3A126837\",\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b2757afd-da00-4f0f-bf0b-f126496e15c2",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments",
                    ":paymentId",
                    "cancellations"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"requestId\": \"D12D9B80972C462980F5067A3A126837\",\n  \"authorizationId\": \"5784589\",\n  \"tid\": \"10022005181543584603\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"nsu\": \"NSU987432\",\n  \"sandboxMode\": false,\n  \"merchantSettings\": [\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    },\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    },\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"cancellationId\": null,\n  \"code\": \"ERR123\",\n  \"message\": \"Cancellation has failed due to an internal error\",\n  \"requestId\": \"D12D9B80972C462980F5067A3A126837\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0f82e4b1-b36d-4f75-b9c9-00994b34dc3c",
              "name": "Not Implemented",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments",
                    ":paymentId",
                    "cancellations"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"requestId\": \"D12D9B80972C462980F5067A3A126837\",\n  \"authorizationId\": \"5784589\",\n  \"tid\": \"10022005181543584603\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"nsu\": \"NSU987432\",\n  \"sandboxMode\": false,\n  \"merchantSettings\": [\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    },\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    },\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Not Implemented",
              "code": 501,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"cancellationId\": null,\n  \"code\": \"cancel-manually\",\n  \"message\": \"This payment needs to be manually cancelled\",\n  \"requestId\": \"D12D9B80972C462980F5067A3A126837\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e25ac771-820c-4d1c-8dbb-8f4952e1e45a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/payments/:paymentId/cancellations - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/payments/:paymentId/cancellations - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/payments/:paymentId/cancellations - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"paymentId\",\"cancellationId\",\"code\",\"message\",\"requestId\"],\"type\":\"object\",\"description\":\"Cancel payment response body information.\",\"properties\":{\"paymentId\":{\"type\":\"string\",\"description\":\"The same `paymentId` sent in the request.\"},\"cancellationId\":{\"type\":\"string\",\"description\":\"Provider's cancellation identifier. If the operation has failed you **MUST** return `null`.\"},\"code\":{\"type\":[\"string\",\"null\"],\"description\":\"Provider's operation/error code to be logged. Return `cancel-manually` if you do not support this operation, so we can send a notification to the merchant.\"},\"message\":{\"type\":\"string\",\"description\":\"Provider's operation/error message to be logged.\"},\"requestId\":{\"type\":\"string\",\"description\":\"The same `requestId` sent in the request.\"},\"connectorMetadata\":{\"type\":\"array\",\"description\":\"Array containing metadata fields sent from the provider to the payment gateway.\",\"items\":{\"type\":\"object\",\"description\":\"Metadata fields information.\",\"required\":[\"name\",\"value\"],\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"The name of the metadata to be stored in the gateway (limited to 20 characters).\"},\"value\":{\"type\":\"string\",\"description\":\"The value of the metadata stored (limited to 200 characters).\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/payments/:paymentId/cancellations - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "07b932e5-577c-40d3-8d61-ff6894a9a628",
          "name": "Settle payment",
          "request": {
            "name": "Settle payment",
            "description": {
              "content": "Settles a payment that was previously approved.\r\n\r\n> ℹ️ This request is made from VTEX to the payment provider.\r\n\r\n## Permissions\r\n\r\nCheck with your service provider to know what permissions are needed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "payments",
                ":paymentId",
                "settlements"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) VTEX payment identifier.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                  "key": "paymentId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppKey",
                "value": "{{X-PROVIDER-API-AppKey}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppToken",
                "value": "{{X-PROVIDER-API-AppToken}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"requestId\": \"2019-02-04T22:53:42-40000\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"value\": 45,\n  \"authorizationId\": \"5784589\",\n  \"tid\": \"5784589\",\n  \"nsu\": \"NSU987432\",\n  \"recipients\": [\n    {\n      \"id\": \"mystore\",\n      \"name\": \"Company XPTO\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"05314972000174\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 7.2\n    },\n    {\n      \"id\": \"sellerA\",\n      \"name\": \"Company ABC\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"24830098000172\",\n      \"role\": \"seller\",\n      \"chargeProcessingFee\": false,\n      \"chargebackLiable\": false,\n      \"amount\": 37.8,\n      \"commissionAmount\": 7.2\n    }\n  ],\n  \"sandboxMode\": false,\n  \"merchantSettings\": [\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "type": "any",
                  "value": "X-VTEX-API-AppKey",
                  "key": "key"
                },
                {
                  "type": "any",
                  "value": "{{apiKey}}",
                  "key": "value"
                },
                {
                  "type": "any",
                  "value": "header",
                  "key": "in"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "43609ced-8c1c-484b-a4c4-64b4a906d331",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments",
                    ":paymentId",
                    "settlements"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"requestId\": \"2019-02-04T22:53:42-40000\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"value\": 45,\n  \"authorizationId\": \"5784589\",\n  \"tid\": \"5784589\",\n  \"nsu\": \"NSU987432\",\n  \"recipients\": [\n    {\n      \"id\": \"mystore\",\n      \"name\": \"Company XPTO\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"05314972000174\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 7.2\n    },\n    {\n      \"id\": \"sellerA\",\n      \"name\": \"Company ABC\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"24830098000172\",\n      \"role\": \"seller\",\n      \"chargeProcessingFee\": false,\n      \"chargebackLiable\": false,\n      \"amount\": 37.8,\n      \"commissionAmount\": 7.2\n    }\n  ],\n  \"sandboxMode\": false,\n  \"merchantSettings\": [\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"settleId\": \"2EA354989E7E4BBC9F9D7B66674C2574\",\n  \"value\": 57,\n  \"code\": null,\n  \"message\": \"Successfully settled\",\n  \"requestId\": \"DCEAA1FC8372E430E8236649DB5EBD08E\",\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "91608a5b-f4eb-42bf-91a8-a67cd9acc7a9",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments",
                    ":paymentId",
                    "settlements"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"requestId\": \"2019-02-04T22:53:42-40000\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"value\": 45,\n  \"authorizationId\": \"5784589\",\n  \"tid\": \"5784589\",\n  \"nsu\": \"NSU987432\",\n  \"recipients\": [\n    {\n      \"id\": \"mystore\",\n      \"name\": \"Company XPTO\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"05314972000174\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 7.2\n    },\n    {\n      \"id\": \"sellerA\",\n      \"name\": \"Company ABC\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"24830098000172\",\n      \"role\": \"seller\",\n      \"chargeProcessingFee\": false,\n      \"chargebackLiable\": false,\n      \"amount\": 37.8,\n      \"commissionAmount\": 7.2\n    }\n  ],\n  \"sandboxMode\": false,\n  \"merchantSettings\": [\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"settleId\": null,\n  \"value\": 0,\n  \"code\": \"ERR123\",\n  \"message\": \"Settlement has failed due to an internal error\",\n  \"requestId\": \"DCEAA1FC8372E430E8236649DB5EBD08E\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "155c65cd-55c7-4c2d-9364-437436789b87",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/payments/:paymentId/settlements - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/payments/:paymentId/settlements - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/payments/:paymentId/settlements - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"paymentId\",\"settleId\",\"value\",\"code\",\"message\",\"requestId\"],\"type\":\"object\",\"description\":\"Settle payment response body information.\",\"properties\":{\"paymentId\":{\"type\":\"string\",\"description\":\"The same `paymentId` sent in the request.\"},\"settleId\":{\"type\":\"string\",\"description\":\"VTEX identifier for this settlement.\"},\"value\":{\"type\":\"number\",\"description\":\"The amount to be settled.\"},\"code\":{\"type\":[\"string\",\"null\"],\"description\":\"Provider's operation/error code to be logged.\"},\"message\":{\"type\":\"string\",\"description\":\"Provider's operation/error message to be logged.\"},\"requestId\":{\"type\":\"string\",\"description\":\"The same `requestId` sent in the request.\"},\"connectorMetadata\":{\"type\":\"array\",\"description\":\"Array containing metadata fields sent from the provider to the payment gateway.\",\"items\":{\"type\":\"object\",\"description\":\"Metadata fields information.\",\"required\":[\"name\",\"value\"],\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"The name of the metadata to be stored in the gateway (limited to 20 characters).\"},\"value\":{\"type\":\"string\",\"description\":\"The value of the metadata stored (limited to 200 characters).\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/payments/:paymentId/settlements - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "836826f4-b6a5-48db-a044-2253d2f94fcf",
          "name": "Refund payment",
          "request": {
            "name": "Refund payment",
            "description": {
              "content": "Refunds a payment (in full or in part) that was previously settled.\r\n\r\n> ℹ️ This request is made from VTEX to the payment provider.\r\n\r\n## Permissions\r\n\r\nCheck with your service provider to know what permissions are needed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "payments",
                ":paymentId",
                "refunds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) VTEX payment identifier.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                  "key": "paymentId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppKey",
                "value": "{{X-PROVIDER-API-AppKey}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppToken",
                "value": "{{X-PROVIDER-API-AppToken}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"requestId\": \"LA4E20D3B4E07B7E871F5B5BC9F91\",\n  \"settleId\": \"Q5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"tid\": \"10022005181543584603\",\n  \"authorizationId\": \"AUT123567\",\n  \"nsu\": \"NSU987432\",\n  \"value\": 20,\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"recipients\": [\n    {\n      \"id\": \"mystore\",\n      \"name\": \"Company XPTO\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"05314972000174\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 3.2\n    },\n    {\n      \"id\": \"sellerA\",\n      \"name\": \"Company ABC\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"24830098000172\",\n      \"role\": \"seller\",\n      \"amount\": 16.8,\n      \"comissionAmount\": 3\n    }\n  ],\n  \"sandboxMode\": false,\n  \"merchantSettings\": [\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "type": "any",
                  "value": "X-VTEX-API-AppKey",
                  "key": "key"
                },
                {
                  "type": "any",
                  "value": "{{apiKey}}",
                  "key": "value"
                },
                {
                  "type": "any",
                  "value": "header",
                  "key": "in"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0e4df7b1-c19b-497b-a313-028aba65f125",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments",
                    ":paymentId",
                    "refunds"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestId\": \"LA4E20D3B4E07B7E871F5B5BC9F91\",\n  \"settleId\": \"Q5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"tid\": \"10022005181543584603\",\n  \"authorizationId\": \"AUT123567\",\n  \"nsu\": \"NSU987432\",\n  \"value\": 20,\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"recipients\": [\n    {\n      \"id\": \"mystore\",\n      \"name\": \"Company XPTO\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"05314972000174\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 3.2\n    },\n    {\n      \"id\": \"sellerA\",\n      \"name\": \"Company ABC\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"24830098000172\",\n      \"role\": \"seller\",\n      \"amount\": 16.8,\n      \"comissionAmount\": 3\n    }\n  ],\n  \"sandboxMode\": false,\n  \"merchantSettings\": [\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"refundId\": \"2EA354989E7E4BBC9F9D7B66674C2574\",\n  \"value\": 57,\n  \"code\": null,\n  \"message\": \"Successfully refunded\",\n  \"requestId\": \"LA4E20D3B4E07B7E871F5B5BC9F91\",\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3b69897d-0ca3-4565-97e4-2ae2891df20a",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments",
                    ":paymentId",
                    "refunds"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestId\": \"LA4E20D3B4E07B7E871F5B5BC9F91\",\n  \"settleId\": \"Q5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"tid\": \"10022005181543584603\",\n  \"authorizationId\": \"AUT123567\",\n  \"nsu\": \"NSU987432\",\n  \"value\": 20,\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"recipients\": [\n    {\n      \"id\": \"mystore\",\n      \"name\": \"Company XPTO\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"05314972000174\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 3.2\n    },\n    {\n      \"id\": \"sellerA\",\n      \"name\": \"Company ABC\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"24830098000172\",\n      \"role\": \"seller\",\n      \"amount\": 16.8,\n      \"comissionAmount\": 3\n    }\n  ],\n  \"sandboxMode\": false,\n  \"merchantSettings\": [\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"refundId\": null,\n  \"value\": 0,\n  \"code\": \"ERR123\",\n  \"message\": \"Refund has failed due to an internal error\",\n  \"requestId\": \"LA4E20D3B4E07B7E871F5B5BC9F91\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b4ca60aa-9a95-42f3-afa8-29cc385f270d",
              "name": "Not Implemented",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments",
                    ":paymentId",
                    "refunds"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestId\": \"LA4E20D3B4E07B7E871F5B5BC9F91\",\n  \"settleId\": \"Q5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"tid\": \"10022005181543584603\",\n  \"authorizationId\": \"AUT123567\",\n  \"nsu\": \"NSU987432\",\n  \"value\": 20,\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"recipients\": [\n    {\n      \"id\": \"mystore\",\n      \"name\": \"Company XPTO\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"05314972000174\",\n      \"role\": \"marketplace\",\n      \"chargeProcessingFee\": true,\n      \"chargebackLiable\": true,\n      \"amount\": 3.2\n    },\n    {\n      \"id\": \"sellerA\",\n      \"name\": \"Company ABC\",\n      \"documentType\": \"CNPJ\",\n      \"document\": \"24830098000172\",\n      \"role\": \"seller\",\n      \"amount\": 16.8,\n      \"comissionAmount\": 3\n    }\n  ],\n  \"sandboxMode\": false,\n  \"merchantSettings\": [\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Not Implemented",
              "code": 501,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"refundId\": null,\n  \"value\": 0,\n  \"code\": \"refund-manually\",\n  \"message\": \"This payment needs to be manually refunded\",\n  \"requestId\": \"LA4E20D3B4E07B7E871F5B5BC9F91\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aa22fcff-0492-4490-8c87-8f369659630e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/payments/:paymentId/refunds - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/payments/:paymentId/refunds - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/payments/:paymentId/refunds - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"paymentId\",\"refundId\",\"value\",\"code\",\"message\",\"requestId\"],\"type\":\"object\",\"description\":\"Refund payment response body information.\",\"properties\":{\"paymentId\":{\"type\":\"string\",\"description\":\"The same `paymentId` sent in the request.\"},\"refundId\":{\"type\":\"string\",\"description\":\"Provider's refund identifier. If the operation has failed you **MUST** return `null`.\"},\"value\":{\"type\":\"number\",\"description\":\"The amount that was refunded. If the operation has failed you **MUST** return `0`.\"},\"code\":{\"type\":[\"string\",\"null\"],\"description\":\"Provider's operation/error code to be logged. Return `refund-manually` if you do not support this operation, so we can send a notification to the merchant.\"},\"message\":{\"type\":\"string\",\"description\":\"Provider's operation/error message to be logged.\"},\"requestId\":{\"type\":\"string\",\"description\":\"The same `requestId` sent in the request.\"},\"connectorMetadata\":{\"type\":\"array\",\"description\":\"Array containing metadata fields sent from the provider to the payment gateway.\",\"items\":{\"type\":\"object\",\"description\":\"Metadata fields information.\",\"required\":[\"name\",\"value\"],\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"The name of the metadata to be stored in the gateway (limited to 20 characters).\"},\"value\":{\"type\":\"string\",\"description\":\"The value of the metadata stored (limited to 200 characters).\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/payments/:paymentId/refunds - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3d11a51d-66db-4c6c-89d2-a70f3e3e7511",
          "name": "Inbound request (BETA)",
          "request": {
            "name": "Inbound request (BETA)",
            "description": {
              "content": "The Inbound request (BETA) implements an URL that facilitates a direct connection between VTEX Gateway service and the Payment Provider. This functionality allows the payment provider to create other types of specific routes, in addition to those described in the other PPP endpoints, according to their type of operation (e.g. hook or enrollment routes, among others). \r\n\r\nThis endpoint forwards a request back to your endpoint using the `inboundRequestsUrl` provided in the [Create Payment](https://developers.vtex.com/docs/api-reference/payment-provider-protocol#post-/payments?endpoint=post-/payments) endpoint payload.\r\n\r\nThe `{action}` part of the path will be the same you have used to call the `inboundRequestsUrl` (e.g. hook, enrollment, among others).\r\n\r\n> ℹ️ This request is made from VTEX to the payment provider.\r\n\r\n## Permissions\r\n\r\nCheck with your service provider to know what permissions are needed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "payments",
                ":paymentId",
                "inbound",
                ":action"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) VTEX payment identifier.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                  "key": "paymentId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Describes the type of action that will be performed on the route (e.g. hook, enrollment, among others). It is the same `:action` information used in the `inboundRequestsUrl` provided in the [Create Payment](https://developers.vtex.com/docs/api-reference/payment-provider-protocol#post-/payments?endpoint=post-/payments) endpoint payload.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "hook",
                  "key": "action"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppKey",
                "value": "{{X-PROVIDER-API-AppKey}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppToken",
                "value": "{{X-PROVIDER-API-AppToken}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"requestId\": \"LA4E20D3B4E07B7E871F5B5BC9F91\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"authorizationId\": \"AUT123567\",\n  \"tid\": \"10022005181543584603\",\n  \"nsu\": \"NSU987432\",\n  \"requestData\": {\n    \"body\": \"{{originalRequestBody}}\"\n  },\n  \"merchantSettings\": [\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    },\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    },\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "type": "any",
                  "value": "X-VTEX-API-AppKey",
                  "key": "key"
                },
                {
                  "type": "any",
                  "value": "{{apiKey}}",
                  "key": "value"
                },
                {
                  "type": "any",
                  "value": "header",
                  "key": "in"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "00062447-f993-47de-b867-a676ef5d5ed9",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "payments",
                    ":paymentId",
                    "inbound",
                    ":action"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestId\": \"LA4E20D3B4E07B7E871F5B5BC9F91\",\n  \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"authorizationId\": \"AUT123567\",\n  \"tid\": \"10022005181543584603\",\n  \"nsu\": \"NSU987432\",\n  \"requestData\": {\n    \"body\": \"{{originalRequestBody}}\"\n  },\n  \"merchantSettings\": [\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    },\n    {\n      \"name\": \"Public Merchant ID Test.\",\n      \"value\": \"1\"\n    }\n  ],\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    },\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"requestId\": \"LA4E20D3B4E07B7E871F5B5BC9F91\",\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n  \"responseData\": {\n    \"statusCode\": 200,\n    \"contentType\": \"application/json\",\n    \"content\": \"{\\\"myAttribute\\\":\\\"anyValue\\\"}\"\n  },\n  \"connectorMetadata\": [\n    {\n      \"name\": \"MetadataName\",\n      \"value\": \"MetadataValue\"\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "037ab995-b509-4cc6-bdb8-649a374bb3d6",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/payments/:paymentId/inbound/:action - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/payments/:paymentId/inbound/:action - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/payments/:paymentId/inbound/:action - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"requestId\",\"paymentId\",\"responseData\"],\"type\":\"object\",\"description\":\"Inbound Request response body information.\",\"properties\":{\"requestId\":{\"type\":\"string\",\"description\":\"The same `requestId` sent in the request.\"},\"paymentId\":{\"type\":\"string\",\"description\":\"The same `paymentId` sent in the request.\"},\"code\":{\"type\":\"string\",\"description\":\"Provider's operation/error code to be logged.\"},\"message\":{\"type\":\"string\",\"description\":\"Provider's operation/error message to be logged.\"},\"responseData\":{\"required\":[\"statusCode\",\"contentType\",\"content\"],\"type\":\"object\",\"description\":\"Response data information.\",\"properties\":{\"statusCode\":{\"type\":\"integer\",\"description\":\"Your desired status code.\"},\"contentType\":{\"type\":\"string\",\"description\":\"Your desired content-type.\"},\"content\":{\"type\":\"string\",\"description\":\"Your desired content body.\"}}},\"connectorMetadata\":{\"type\":\"array\",\"description\":\"Array containing metadata fields sent from the provider to the payment gateway.\",\"items\":{\"type\":\"object\",\"description\":\"Metadata fields information.\",\"required\":[\"name\",\"value\"],\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"The name of the metadata to be stored in the gateway (limited to 20 characters).\"},\"value\":{\"type\":\"string\",\"description\":\"The value of the metadata stored (limited to 200 characters).\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/payments/:paymentId/inbound/:action - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "42013e77-1065-4449-a704-67ca12130b7d",
      "name": "Configuration Flow",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "dff5ea03-184c-47c2-8167-d833aef3c256",
          "name": "Create authorization token",
          "request": {
            "name": "Create authorization token",
            "description": {
              "content": "Creates the authorization token that will be used for VTEX to redirect the merchant to the provider's authentication application. For more information about the Payment Provider Protocol (PPP) merchant authentication procedure, visit [Configuration Flow](https://developers.vtex.com/docs/guides/payments-integration-implementing-a-payment-provider#configuration-flow).\r\n\r\n> ℹ️ This request is made from VTEX to the payment provider.\r\n\r\n## Permissions\r\n\r\nCheck with your service provider to know what permissions are needed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "authorization",
                "token"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppKey",
                "value": "{{X-PROVIDER-API-AppKey}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppToken",
                "value": "{{X-PROVIDER-API-AppToken}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"applicationId\": \"vtex\",\n  \"returnUrl\": \"https://admin.mystore.example.com/provider-return?authorizationCode=\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "type": "any",
                  "value": "X-VTEX-API-AppKey",
                  "key": "key"
                },
                {
                  "type": "any",
                  "value": "{{apiKey}}",
                  "key": "value"
                },
                {
                  "type": "any",
                  "value": "header",
                  "key": "in"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1c4c4349-2454-42ea-9c79-98cc2941cb64",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "authorization",
                    "token"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"applicationId\": \"vtex\",\n  \"returnUrl\": \"https://admin.mystore.example.com/provider-return?authorizationCode=\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"applicationId\": \"vtex\",\n  \"token\": \"358a5bea-07d0-4122-888a-54ab70b5f02f\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9bc6a9a0-b2bc-41bc-9fc2-5732443c4257",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/authorization/token - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/authorization/token - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/authorization/token - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"applicationId\",\"token\"],\"type\":\"object\",\"description\":\"Create authorization token response body information.\",\"properties\":{\"applicationId\":{\"type\":\"string\",\"description\":\"The same `applicationId` sent in the request.\"},\"token\":{\"type\":\"string\",\"description\":\"You must generate a token that will be used to identify the same context when we redirect the merchant to your application.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/authorization/token - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fd732637-c585-4908-b393-cdc81cac0b75",
          "name": "Provider authentication",
          "request": {
            "name": "Provider authentication",
            "description": {
              "content": "Use the application of provider for merchant's authentication.\r\n\r\nVTEX will redirect the merchant to your application using the `token` we retrieved earlier.\r\n\r\nYou're expected to have a signup/signin process on your side in order to authenticate the merchant, either as a new or as an existent user.\r\n\r\nAt this point, you can present your terms an conditions, a contract, and ask for merchant's final agreement to use your services.\r\n\r\nFinally, you need to generate an `authorizationCode` that you must concatenate to the `returnUrl` we send earlier.\r\n\r\nExample:\r\n\r\n`returnUrl` = `https://admin.mystore.example.com/provider-return?authorizationCode=`\r\n\r\n`authorizationCode` = `7940597D-A63B`\r\n\r\nRedirect the merchant to:\r\n\r\n`https://admin.mystore.example.com/provider-return?authorizationCode=7940597D-A63B` \r\n\r\n For more information about the Payment Provider Protocol (PPP) merchant authentication procedure, visit [Configuration Flow](https://developers.vtex.com/docs/guides/payments-integration-implementing-a-payment-provider#configuration-flow).\r\n\r\n> ℹ️ This request is made from VTEX to the payment provider.\r\n\r\n## Permissions\r\n\r\nCheck with your service provider to know what permissions are needed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "authorization",
                "redirect"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) VTEX application identifier.",
                    "type": "text/plain"
                  },
                  "key": "applicationId",
                  "value": "vtex"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) You must generate a token that will be used to identify the same context when we redirect the merchant to your application.",
                    "type": "text/plain"
                  },
                  "key": "token",
                  "value": "{{token}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppKey",
                "value": "{{X-PROVIDER-API-AppKey}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppToken",
                "value": "{{X-PROVIDER-API-AppToken}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "type": "any",
                  "value": "X-VTEX-API-AppKey",
                  "key": "key"
                },
                {
                  "type": "any",
                  "value": "{{apiKey}}",
                  "key": "value"
                },
                {
                  "type": "any",
                  "value": "header",
                  "key": "in"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "087062d7-3eb2-4788-9464-b40fb509b835",
              "name": "OK. This endpoint does not return any data in the response body.",
              "originalRequest": {
                "url": {
                  "path": [
                    "authorization",
                    "redirect"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) VTEX application identifier.",
                        "type": "text/plain"
                      },
                      "key": "applicationId",
                      "value": "vtex"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) You must generate a token that will be used to identify the same context when we redirect the merchant to your application.",
                        "type": "text/plain"
                      },
                      "key": "token",
                      "value": "{{token}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "018d916b-9177-446b-8cf9-5c1ab56d0803",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/authorization/redirect - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0f9de324-47e2-4786-978a-f88e95fab0bd",
          "name": "Get credentials",
          "request": {
            "name": "Get credentials",
            "description": {
              "content": "Retrieves the merchant credentials (applicationId, appKey and appToken) registered with the payment provider. These credentials will be saved in the VTEX system and activated when the retailer decides to enable the connector.\r\n\r\n For more information about the Payment Provider Protocol (PPP) merchant authentication procedure, visit [Configuration Flow](https://developers.vtex.com/docs/guides/payments-integration-implementing-a-payment-provider#configuration-flow).\r\n\r\n> ℹ️ This request is made from VTEX to the payment provider.\r\n\r\n## Permissions\r\n\r\nCheck with your service provider to know what permissions are needed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "authorization",
                "credentials"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) VTEX application identifier.",
                    "type": "text/plain"
                  },
                  "key": "applicationId",
                  "value": "vtex"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Code generate by affiliation that will be used to identify the merchant authorization.",
                    "type": "text/plain"
                  },
                  "key": "authorizationCode",
                  "value": "{{authorizationCode}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppKey",
                "value": "{{X-PROVIDER-API-AppKey}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppToken",
                "value": "{{X-PROVIDER-API-AppToken}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "type": "any",
                  "value": "X-VTEX-API-AppKey",
                  "key": "key"
                },
                {
                  "type": "any",
                  "value": "{{apiKey}}",
                  "key": "value"
                },
                {
                  "type": "any",
                  "value": "header",
                  "key": "in"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "98e7e589-2816-42fc-9470-6d8b6bf0e6ac",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "authorization",
                    "credentials"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) VTEX application identifier.",
                        "type": "text/plain"
                      },
                      "key": "applicationId",
                      "value": "vtex"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Code generate by affiliation that will be used to identify the merchant authorization.",
                        "type": "text/plain"
                      },
                      "key": "authorizationCode",
                      "value": "{{authorizationCode}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Unique token created by the provider and configured on the provider configuration page (Admin VTEX). To use this header as authorization, check that the `usesProviderHeadersName` field is set to `true` in the payment provider's `configuration.json`. To check the `configuration.json` file, access the route {{connector}}/paymentProvider/configuration.json",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"applicationId\": \"vtex\",\n  \"appKey\": \"c5a5e3f1-4a77-4a00-8b53-0d1adb3e9628\",\n  \"appToken\": \"57ea254d-f3d3-488d-88d7-129766037ed1\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8e2986af-c4d3-451c-bc9f-28556d10420f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/authorization/credentials - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/authorization/credentials - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/authorization/credentials - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"applicationId\",\"appKey\",\"appToken\"],\"type\":\"object\",\"description\":\"Get credentials response body information.\",\"properties\":{\"applicationId\":{\"type\":\"string\",\"description\":\"The same `applicationId` sent in the request.\"},\"appKey\":{\"type\":\"string\",\"description\":\"The value we will send in the header `X-VTEX-API-AppKey` for the payment flow.\"},\"appToken\":{\"type\":\"string\",\"description\":\"The value we will send in the header `X-VTEX-API-AppToken` for the payment flow.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/authorization/credentials - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "any",
      "value": "{providerApiEndpoint}",
      "key": "providerApiEndpoint"
    },
    {
      "type": "any",
      "value": "https://{{providerApiEndpoint}}",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "95e5f5da-b15c-4352-a8e3-9e20961c4e3b",
    "name": "Payment Provider Protocol API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": ">ℹ️ The Payment Provider Protocol is a set of definitions to help you integrate your payment processing API into the VTEX platform, including sub-acquirers, acquirers, gateways, and custom payment services. \r\n\r\nTo achieve this, you must implement a web API (REST) following the specifications described in this documentation.\r\n\r\nTo learn more about the Payment Provider Protocol, check our [Help Center article](https://help.vtex.com/en/tutorial/payment-provider-protocol--RdsT2spdq80MMwwOeEq0m).\r\n\r\n## Endpoint requirements\r\n\r\n  * Must use a standard subdomain/domain name, not an IP address.\r\n  * Must be served over HTTPS on port 443 with TLS 1.2 support.\r\n  * Must respond in less than 5 seconds when running the tests.\r\n  * Must respond in less than 20 seconds when in production.\r\n  * Must be [PCI-DSS compliant](https://developers.vtex.com/docs/guides/payments-integration-pci-dss-compliance) or use [Secure Proxy](https://developers.vtex.com/docs/guides/payments-integration-secure-proxy) to accept branded cards like Visa, Mastercard, Amex, etc.\r\n\r\n## Testing\r\n\r\nYou can perform tests on your payment provider using our [VTEX - Payment Provider Test Suite](https://apps.vtex.com/vtex-payment-provider-test-suite/p).\r\n\r\n>ℹ An extra header `X-VTEX-API-Is-TestSuite` = `true` will be sent for every test suite request, to help you easily identify it and mock any required scenarios.\r\n\r\nFor more details about testing a Payment Provider, check our [Payment Provider Homologation](https://developers.vtex.com/docs/guides/payments-integration-payment-provider-homologation) article.\r\n\r\n## Common parameters in the documentation\r\n\r\n<table>\r\n  <tr>\r\n    <td><code>{{providerApiEndpoint}}</code></td>\r\n    <td>Provider's endpoint for the implementation.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>{{X-PROVIDER-API-AppKey}}</code></td>\r\n    <td>Unique identifier created by the provider and configured on the provider configuration page (Admin VTEX).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>{{X-PROVIDER-API-AppToken}}</code></td>\r\n    <td>Unique token created by the provider and configured on the provider configuration page (Admin VTEX).</td>\r\n  </tr>\r\n</table> \r\n\r\n## Payment Provider Protocol API Index\r\n\r\n### Payment Flow\r\n\r\n- `GET` [List Payment Provider Manifest](https://developers.vtex.com/docs/api-reference/payment-provider-protocol#get-/manifest)\r\n- `POST` [Create payment](https://developers.vtex.com/docs/api-reference/payment-provider-protocol#post-/payments)\r\n- `POST` [Cancel payment](https://developers.vtex.com/docs/api-reference/payment-provider-protocol#post-/payments/-paymentId-/cancellations)\r\n- `POST` [Settle payment](https://developers.vtex.com/docs/api-reference/payment-provider-protocol#post-/payments/-paymentId-/settlements)\r\n- `POST` [Refund payment](https://developers.vtex.com/docs/api-reference/payment-provider-protocol#post-/payments/-paymentId-/refunds)\r\n- `POST` [Inbound request (BETA)](https://developers.vtex.com/docs/api-reference/payment-provider-protocol#post-/payments/-paymentId-/inbound-request/-action-)\r\n\r\n### Configuration Flow\r\n\r\n- `POST` [Create authorization token](https://developers.vtex.com/docs/api-reference/payment-provider-protocol#post-/authorization/token)\r\n- `GET` [Provider authentication](https://developers.vtex.com/docs/api-reference/payment-provider-protocol#get-/authorization/redirect)\r\n- `GET` [Get credentials](https://developers.vtex.com/docs/api-reference/payment-provider-protocol#get-/authorization/credentials)",
      "type": "text/plain"
    }
  }
}