{
  "_": {
    "postman_id": "3010b967-9074-4819-ae90-2ef11f1b97e1"
  },
  "item": [
    {
      "id": "7cb26ef1-1ca2-41a0-8448-903595210337",
      "name": "Users",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6ed21aa5-ee3c-48ab-b299-c48af867bf12",
          "name": "Get user scopes",
          "request": {
            "name": "Get user scopes",
            "description": {
              "content": "Retrieves all scopes associated with a user's organization unit.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **View_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                "users",
                ":userId",
                "scopes"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the user.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "4a7b24a8-45b8-3b5c-73a9-9a3b8a4a5a7a",
                  "key": "userId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6bff18b0-aa90-477b-b793-149ed70c1bb0",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    "users",
                    ":userId",
                    "scopes"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"scope\": \"contractIds\",\n    \"ids\": [\n      \"contract-123\",\n      \"contract-456\"\n    ]\n  },\n  {\n    \"scope\": \"collectionIds\",\n    \"ids\": [\n      \"collection-789\"\n    ]\n  }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "76b996f1-445b-48ee-999f-5ceef5425f77",
              "name": "Not Found",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    "users",
                    ":userId",
                    "scopes"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"User not found.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f7da80f5-624b-425d-93b1-ce10b3d26bf2",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/organization-units/v1/users/:userId/scopes - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/organization-units/v1/users/:userId/scopes - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/organization-units/v1/users/:userId/scopes - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"description\":\"Array of scopes with their types and associated values.\",\"items\":{\"type\":\"object\",\"description\":\"Scope with associated values.\",\"properties\":{\"scope\":{\"type\":\"string\",\"description\":\"Scope type identifier.\"},\"ids\":{\"type\":\"array\",\"description\":\"List of values associated with this scope.\",\"items\":{\"type\":\"string\",\"description\":\"Scope value.\"}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/organization-units/v1/users/:userId/scopes - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e3055374-7b08-480a-b693-c785d3914078",
          "name": "Get user's organization unit",
          "request": {
            "name": "Get user's organization unit",
            "description": {
              "content": "Retrieves the organization unit associated with a specific user.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **View_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                ":userId",
                "unit"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the user.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "4a7b24a8-45b8-3b5c-73a9-9a3b8a4a5a7a",
                  "key": "userId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4eaedb00-480a-4f44-89c6-ad2c4462039d",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":userId",
                    "unit"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\",\n  \"name\": \"Marketing Department\",\n  \"path\": {\n    \"ids\": \"apiexamples/8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\"\n  },\n  \"createdAt\": \"2025-10-21T10:30:00.000Z\",\n  \"updatedAt\": \"2025-10-21T10:30:00.000Z\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "88be2ea0-0303-41a7-91c5-14bb74c7da83",
              "name": "Not Found",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":userId",
                    "unit"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"User or organization unit not found.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4444d570-c0e9-4d45-b4ff-65db23f6cdba",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/organization-units/v1/:userId/unit - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/organization-units/v1/:userId/unit - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/organization-units/v1/:userId/unit - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Organization unit object.\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\",\"description\":\"Unique identifier of the organization unit.\"},\"name\":{\"type\":\"string\",\"description\":\"Name of the organization unit.\"},\"path\":{\"type\":\"object\",\"description\":\"Hierarchical path of the organization unit.\",\"properties\":{\"ids\":{\"type\":\"string\",\"description\":\"Forward-slash separated path of IDs from tenant root to this unit.\"}}},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was created.\"},\"updatedAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was last updated.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/organization-units/v1/:userId/unit - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "ac7894f4-be87-4870-83ee-17e51f4ab970",
      "name": "Units",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "41ae8b35-b573-48f5-acb8-71faaf72c3ed",
          "name": "Create organization unit",
          "request": {
            "name": "Create organization unit",
            "description": {
              "content": "Creates a new organization unit at the root level of the organizational hierarchy.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **Edit_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Marketing Department\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3149aeff-ea96-4027-a76e-780a6ea7e368",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Marketing Department\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"createdAt\": \"2025-03-19T21:28:13.103978Z\",\n  \"updatedAt\": \"2025-03-19T21:28:13.103978Z\",\n  \"name\": \"new-unit\",\n  \"path\": {\n    \"ids\": \"qastore/b13531bb-8242-43fd-80f5-3263dd4e9cdd/92264b68-74da-4fc4-b51a-9ddcb8baf29a\"\n  },\n  \"id\": \"92264b68-74da-4fc4-b51a-9ddcb8baf29a\",\n  \"customerGroup\": {\n    \"customerIds\": []\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4952162a-a69a-4a3f-9832-ee60dad8d1e2",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Marketing Department\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Invalid organization unit name.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2a7e4050-f56a-4653-a835-824d249a9703",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/organization-units/v1 - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/organization-units/v1 - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/organization-units/v1 - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was created.\"},\"updatedAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp of the most recent update.\"},\"name\":{\"type\":\"string\",\"description\":\"Name of the organization unit.\"},\"path\":{\"type\":\"object\",\"properties\":{\"ids\":{\"type\":\"string\",\"description\":\"Full ID path of the organization unit.\"}}},\"id\":{\"type\":\"string\",\"description\":\"ID of the organization unit.\"},\"customerGroup\":{\"type\":\"object\",\"properties\":{\"customerIds\":{\"type\":\"array\",\"description\":\"List of associated customer IDs (can be empty).\",\"items\":{\"type\":\"string\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/organization-units/v1 - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "caf7424d-9c40-40c6-b362-0cac9464701f",
          "name": "Search organization units",
          "request": {
            "name": "Search organization units",
            "description": {
              "content": "Searches for organization units based on query parameters, with pagination support. If no name filter is provided, returns all organization units for the account.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **View_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "description": {
                    "content": "Name or partial name of the organization unit to search for. If not provided, all units are returned.",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "Marketing"
                },
                {
                  "disabled": true,
                  "description": {
                    "content": "Page number for pagination. Must be greater than 0.",
                    "type": "text/plain"
                  },
                  "key": "page",
                  "value": "1"
                },
                {
                  "disabled": true,
                  "description": {
                    "content": "Number of items per page. Must be between 1 and 1000.",
                    "type": "text/plain"
                  },
                  "key": "pageSize",
                  "value": "20"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "97373da8-6198-4004-9c40-979559e7c84c",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Name or partial name of the organization unit to search for. If not provided, all units are returned.",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "Marketing"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Page number for pagination. Must be greater than 0.",
                        "type": "text/plain"
                      },
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Number of items per page. Must be between 1 and 1000.",
                        "type": "text/plain"
                      },
                      "key": "pageSize",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\",\n    \"name\": \"Marketing Department\",\n    \"path\": {\n      \"ids\": \"apiexamples/8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\"\n    },\n    \"createdAt\": \"2025-10-21T10:30:00.000Z\",\n    \"updatedAt\": \"2025-10-21T10:30:00.000Z\"\n  },\n  {\n    \"id\": \"7c9a57d1-78e0-4c8e-a6b2-2a6e1b7d8c0b\",\n    \"name\": \"Marketing Operations\",\n    \"path\": {\n      \"ids\": \"apiexamples/8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a/7c9a57d1-78e0-4c8e-a6b2-2a6e1b7d8c0b\"\n    },\n    \"createdAt\": \"2025-10-21T11:00:00.000Z\",\n    \"updatedAt\": \"2025-10-21T11:00:00.000Z\"\n  }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "472827e9-da2b-4044-a824-82647b9631fd",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Name or partial name of the organization unit to search for. If not provided, all units are returned.",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "Marketing"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Page number for pagination. Must be greater than 0.",
                        "type": "text/plain"
                      },
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Number of items per page. Must be between 1 and 1000.",
                        "type": "text/plain"
                      },
                      "key": "pageSize",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Invalid pagination parameters.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d43cc7e5-6cae-4365-9c40-9241dacbebda",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/organization-units/v1 - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/organization-units/v1 - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/organization-units/v1 - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"description\":\"Array of organization units matching the search criteria.\",\"items\":{\"type\":\"object\",\"description\":\"Organization unit object.\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\",\"description\":\"Unique identifier of the organization unit.\"},\"name\":{\"type\":\"string\",\"description\":\"Name of the organization unit.\"},\"path\":{\"type\":\"object\",\"description\":\"Hierarchical path of the organization unit.\",\"properties\":{\"ids\":{\"type\":\"string\",\"description\":\"Forward-slash separated path of IDs from tenant root to this unit.\"}}},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was created.\"},\"updatedAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was last updated.\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/organization-units/v1 - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3f5f9543-033f-4c0f-bef5-1e07d58c48ea",
          "name": "Get organization unit",
          "request": {
            "name": "Get organization unit",
            "description": {
              "content": "Retrieves details of a specific organization unit by its unique identifier.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **View_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                ":organizationUnitId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the organization unit.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a",
                  "key": "organizationUnitId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8c5d7820-f27c-4b69-a596-cff2f1d157d8",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\",\n  \"name\": \"Marketing Department\",\n  \"path\": {\n    \"ids\": \"apiexamples/8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\"\n  },\n  \"createdAt\": \"2025-10-21T10:30:00.000Z\",\n  \"updatedAt\": \"2025-10-21T10:30:00.000Z\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b2d8dc41-1d4d-4b54-a276-a4643b120238",
              "name": "Not Found",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Organization unit not found.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a4992c5-c4c4-4586-b8ff-5e5f43e0171c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Organization unit object.\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\",\"description\":\"Unique identifier of the organization unit.\"},\"name\":{\"type\":\"string\",\"description\":\"Name of the organization unit.\"},\"path\":{\"type\":\"object\",\"description\":\"Hierarchical path of the organization unit.\",\"properties\":{\"ids\":{\"type\":\"string\",\"description\":\"Forward-slash separated path of IDs from tenant root to this unit.\"}}},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was created.\"},\"updatedAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was last updated.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ec36b4fe-a80c-48ef-9f86-500ec5795670",
          "name": "Delete organization unit",
          "request": {
            "name": "Delete organization unit",
            "description": {
              "content": "Deletes an organization unit. If the unit has children and the `cascade` parameter is `true`, all children will also be deleted. If `cascade` is `false` and the unit has children, the request will fail.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **Edit_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                ":organizationUnitId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "description": {
                    "content": "If `true`, deletes all child organization units of the specified organization unit. If `false` and the organization unit has children, the request will fail.",
                    "type": "text/plain"
                  },
                  "key": "cascade",
                  "value": "true"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the organization unit to delete.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a",
                  "key": "organizationUnitId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "64be37f5-b9ee-4bf3-96dd-a58a662a2de6",
              "name": "No Content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "If `true`, deletes all child organization units of the specified organization unit. If `false` and the organization unit has children, the request will fail.",
                        "type": "text/plain"
                      },
                      "key": "cascade",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "No Content",
              "code": 204,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "49844386-0c76-45a4-914d-3a2686306c19",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "If `true`, deletes all child organization units of the specified organization unit. If `false` and the organization unit has children, the request will fail.",
                        "type": "text/plain"
                      },
                      "key": "cascade",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Cannot delete organization unit with children. Set cascade to true to delete all children.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cc852791-68c7-4f7a-8ab0-52e3e50e3577",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/organization-units/v1/:organizationUnitId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[DELETE]::/api/organization-units/v1/:organizationUnitId - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "38a8a2a3-f329-4edc-b324-634c56d1fe08",
          "name": "Rename organization unit",
          "request": {
            "name": "Rename organization unit",
            "description": {
              "content": "Updates the name of an existing organization unit.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **Edit_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                ":organizationUnitId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the organization unit to update.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a",
                  "key": "organizationUnitId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Marketing and Communications Department\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e1057214-8361-4e92-bb06-12262689073a",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Marketing and Communications Department\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\",\n  \"name\": \"Marketing and Communications Department\",\n  \"path\": {\n    \"ids\": \"apiexamples/8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\"\n  },\n  \"createdAt\": \"2025-10-21T10:30:00.000Z\",\n  \"updatedAt\": \"2025-10-21T14:45:00.000Z\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "dee3c2a2-36f6-4e93-893a-faecf2171aef",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Marketing and Communications Department\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Invalid organization unit name.\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b583f705-5ece-4466-beb3-e7c76f8ef0b0",
              "name": "Not Found",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Marketing and Communications Department\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Organization unit not found.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9fe99738-52a5-483e-9be5-0575fce1ac22",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/api/organization-units/v1/:organizationUnitId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/api/organization-units/v1/:organizationUnitId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/api/organization-units/v1/:organizationUnitId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Organization unit object.\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\",\"description\":\"Unique identifier of the organization unit.\"},\"name\":{\"type\":\"string\",\"description\":\"Name of the organization unit.\"},\"path\":{\"type\":\"object\",\"description\":\"Hierarchical path of the organization unit.\",\"properties\":{\"ids\":{\"type\":\"string\",\"description\":\"Forward-slash separated path of IDs from tenant root to this unit.\"}}},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was created.\"},\"updatedAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was last updated.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/api/organization-units/v1/:organizationUnitId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1cdd78de-ffe8-443b-940a-16a8cbde2bf1",
          "name": "Get organization unit children",
          "request": {
            "name": "Get organization unit children",
            "description": {
              "content": "Lists all children of a specific organization unit. The `shallowSearch` parameter controls whether to retrieve only direct children or all descendants.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **View_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                ":organizationUnitId",
                "children"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "description": {
                    "content": "Indicates whether to retrieve only direct children (`true`) or all descendants (`false`).",
                    "type": "text/plain"
                  },
                  "key": "shallowSearch",
                  "value": "true"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the parent organization unit.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a",
                  "key": "organizationUnitId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "74b61fc4-bf0f-45de-890d-fe8d0fdf1a9e",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "children"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Indicates whether to retrieve only direct children (`true`) or all descendants (`false`).",
                        "type": "text/plain"
                      },
                      "key": "shallowSearch",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"7c9a57d1-78e0-4c8e-a6b2-2a6e1b7d8c0b\",\n    \"name\": \"Marketing Operations\",\n    \"path\": {\n      \"ids\": \"apiexamples/8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a/7c9a57d1-78e0-4c8e-a6b2-2a6e1b7d8c0b\"\n    },\n    \"createdAt\": \"2025-10-21T11:00:00.000Z\",\n    \"updatedAt\": \"2025-10-21T11:00:00.000Z\"\n  },\n  {\n    \"id\": \"5a8b35b9-56c9-3a6c-84a0-0a4c9a5b6a8a\",\n    \"name\": \"Marketing Communications\",\n    \"path\": {\n      \"ids\": \"apiexamples/8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a/5a8b35b9-56c9-3a6c-84a0-0a4c9a5b6a8a\"\n    },\n    \"createdAt\": \"2025-10-21T11:15:00.000Z\",\n    \"updatedAt\": \"2025-10-21T11:15:00.000Z\"\n  }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6e0faeea-4e96-49af-a040-df45b25fc462",
              "name": "Not Found",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "children"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Indicates whether to retrieve only direct children (`true`) or all descendants (`false`).",
                        "type": "text/plain"
                      },
                      "key": "shallowSearch",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Organization unit not found.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e5a531e2-1261-4576-913e-3227ea334c35",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId/children - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId/children - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId/children - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"description\":\"List of child organization units.\",\"items\":{\"type\":\"object\",\"description\":\"Organization unit object.\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\",\"description\":\"Unique identifier of the organization unit.\"},\"name\":{\"type\":\"string\",\"description\":\"Name of the organization unit.\"},\"path\":{\"type\":\"object\",\"description\":\"Hierarchical path of the organization unit.\",\"properties\":{\"ids\":{\"type\":\"string\",\"description\":\"Forward-slash separated path of IDs from tenant root to this unit.\"}}},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was created.\"},\"updatedAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was last updated.\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId/children - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "18dc0988-0d9f-4d90-acc3-cba83eb05338",
          "name": "Get root organization units",
          "request": {
            "name": "Get root organization units",
            "description": {
              "content": "Retrieves all root-level organization units for the account. Root units are top-level units with no parent.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **View_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                "roots"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b54f1bca-dbc4-46d6-9a47-2fd1aa04b51d",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    "roots"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\",\n    \"name\": \"Marketing Department\",\n    \"path\": {\n      \"ids\": \"apiexamples/8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\"\n    },\n    \"createdAt\": \"2025-10-21T10:30:00.000Z\",\n    \"updatedAt\": \"2025-10-21T10:30:00.000Z\"\n  },\n  {\n    \"id\": \"6b7a46c0-67d9-4b7d-95a1-1a5d0a6c7b9c\",\n    \"name\": \"Sales Department\",\n    \"path\": {\n      \"ids\": \"apiexamples/6b7a46c0-67d9-4b7d-95a1-1a5d0a6c7b9c\"\n    },\n    \"createdAt\": \"2025-10-21T09:15:00.000Z\",\n    \"updatedAt\": \"2025-10-21T09:15:00.000Z\"\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "deacc5e6-9077-4a7e-ae67-b0090d229d0e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/organization-units/v1/roots - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/organization-units/v1/roots - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/organization-units/v1/roots - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"description\":\"Array of root organization units.\",\"items\":{\"type\":\"object\",\"description\":\"Organization unit object.\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\",\"description\":\"Unique identifier of the organization unit.\"},\"name\":{\"type\":\"string\",\"description\":\"Name of the organization unit.\"},\"path\":{\"type\":\"object\",\"description\":\"Hierarchical path of the organization unit.\",\"properties\":{\"ids\":{\"type\":\"string\",\"description\":\"Forward-slash separated path of IDs from tenant root to this unit.\"}}},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was created.\"},\"updatedAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was last updated.\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/organization-units/v1/roots - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "45473f42-6f30-4f06-b689-d531e97eb1fe",
          "name": "Move organization unit",
          "request": {
            "name": "Move organization unit",
            "description": {
              "content": "Moves an organization unit to a different parent in the hierarchy. If no `parentId` is provided in the request body, the organization unit becomes a root organization unit.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **Move_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                ":organizationUnitId",
                "path"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the organization unit to move.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "7c9a57d1-78e0-4c8e-a6b2-2a6e1b7d8c0b",
                  "key": "organizationUnitId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"parentId\": \"b13531bb-8242-43fd-80f5-3263dd4e9cdd\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e1b4d571-3c02-4acf-87ca-20cf5e6c47e5",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "path"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"parentId\": \"b13531bb-8242-43fd-80f5-3263dd4e9cdd\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\",\n  \"name\": \"Marketing and Communications Department\",\n  \"path\": {\n    \"ids\": \"apiexamples/8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\"\n  },\n  \"createdAt\": \"2025-10-21T10:30:00.000Z\",\n  \"updatedAt\": \"2025-10-21T14:45:00.000Z\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "133258e0-7cba-4c1a-8474-5ae543a97371",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "path"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"parentId\": \"b13531bb-8242-43fd-80f5-3263dd4e9cdd\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Invalid organization unit name.\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1bc63b75-84ce-4d66-ae7e-d267af4179c8",
              "name": "Not Found",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "path"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"parentId\": \"b13531bb-8242-43fd-80f5-3263dd4e9cdd\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Organization unit not found.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e757827d-6494-4d94-bfbf-e14be6be2c4a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/organization-units/v1/:organizationUnitId/path - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/organization-units/v1/:organizationUnitId/path - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/organization-units/v1/:organizationUnitId/path - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Organization unit object.\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\",\"description\":\"Unique identifier of the organization unit.\"},\"name\":{\"type\":\"string\",\"description\":\"Name of the organization unit.\"},\"path\":{\"type\":\"object\",\"description\":\"Hierarchical path of the organization unit.\",\"properties\":{\"ids\":{\"type\":\"string\",\"description\":\"Forward-slash separated path of IDs from tenant root to this unit.\"}}},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was created.\"},\"updatedAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was last updated.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/organization-units/v1/:organizationUnitId/path - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d78a2411-3f23-42e8-a5ae-a092f1a31d1a",
          "name": "Add user to organization unit",
          "request": {
            "name": "Add user to organization unit",
            "description": {
              "content": "Adds a user to a specific organization unit. \n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **Edit_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                ":organizationUnitId",
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Indicates whether user should be forcefully moved to the organization unit in case they are already assigned to another organization unit. If set to `true`, users already assigned to the organization unit will be returned in `addedUserIds`. If set to  `false`, those users will appear in `failedUserIds` instead.",
                    "type": "text/plain"
                  },
                  "key": "force",
                  "value": "false"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the organization unit.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a",
                  "key": "organizationUnitId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userIds\": [\n    \"92264b68-74da-4fc4-b51a-9ddcb8baf29a\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9db7d9bb-64c8-4a2a-ae4a-5505a3bf3628",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "users"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Indicates whether user should be forcefully moved to the organization unit in case they are already assigned to another organization unit. If set to `true`, users already assigned to the organization unit will be returned in `addedUserIds`. If set to  `false`, those users will appear in `failedUserIds` instead.",
                        "type": "text/plain"
                      },
                      "key": "force",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userIds\": [\n    \"92264b68-74da-4fc4-b51a-9ddcb8baf29a\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"organizationUnitId\": \"b13531bb-8242-43fd-80f5-3263dd4e9cdd\",\n  \"addedUserIds\": [\n    \"468cc9c0-e8bd-4826-b7a6-13dce147dc26\"\n  ],\n  \"failedUserIds\": []\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "274223cf-7575-460a-b8b3-c8769c6839c5",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/organization-units/v1/:organizationUnitId/users - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/organization-units/v1/:organizationUnitId/users - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/organization-units/v1/:organizationUnitId/users - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"organizationUnitId\":{\"type\":\"string\",\"description\":\"ID of the organization unit.\"},\"addedUserIds\":{\"type\":\"array\",\"description\":\"List of user IDs that were successfully added to the organization unit.\",\"items\":{\"type\":\"string\",\"description\":\"ID of the user that was added to the organization unit.\"}},\"failedUserIds\":{\"type\":\"array\",\"description\":\"List of user IDs that were not added to the organization unit (can be empty).\",\"items\":{\"type\":\"string\",\"description\":\"ID of the user that was not added to the organization unit.\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/organization-units/v1/:organizationUnitId/users - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "cec25809-e17e-4155-9cb8-6d6a18505c2b",
          "name": "Remove users from organization unit",
          "request": {
            "name": "Remove users from organization unit",
            "description": {
              "content": "Removes one or more users from a specific organization unit.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **Edit_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                ":organizationUnitId",
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the organization unit.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a",
                  "key": "organizationUnitId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userIds\": [\n    \"92264b68-74da-4fc4-b51a-9ddcb8baf29a\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "d0aa6812-adb8-429e-a32f-84e826249a79",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "users"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userIds\": [\n    \"92264b68-74da-4fc4-b51a-9ddcb8baf29a\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9cc56d05-55b5-42ec-b333-693f69003648",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/organization-units/v1/:organizationUnitId/users - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "72d972dd-e803-4f54-a8e1-f736c1165936",
          "name": "List users from organization unit",
          "request": {
            "name": "List users from organization unit",
            "description": {
              "content": "Retrieves all users associated with a specific organization unit.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **View_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                ":organizationUnitId",
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the organization unit.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a",
                  "key": "organizationUnitId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ff02233c-41d1-4d84-850f-67f36d2cc36b",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "users"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"users\": [\n    {\n      \"userId\": \"860cf3ed-1c50-4054-b367-99c8f6138fcc\",\n      \"login\": \"daniel.white@email.com\"\n    },\n    {\n      \"userId\": \"37eba317-9154-4844-8ecd-afc5ffb0bf23\",\n      \"login\": \"john.thomas@email.com\"\n    },\n    {\n      \"userId\": \"468cc9c0-e8bd-4826-b7a6-13dce147dc26\",\n      \"login\": \"emma.harris@email.com\"\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bfeccc0f-f262-4bf9-a342-0a403ef600a4",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId/users - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId/users - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId/users - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"users\":{\"type\":\"array\",\"description\":\"List of users in the organization unit.\",\"items\":{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"string\",\"description\":\"User's unique identifier.\"},\"login\":{\"type\":\"string\",\"description\":\"User's email address.\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId/users - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "25d33714-0773-45da-9d89-0517a55e73db",
          "name": "Get all organization units from scope value",
          "request": {
            "name": "Get all organization units from scope value",
            "description": {
              "content": "Finds organization units that have a specific scope value. This is useful for reverse lookups, such as finding which organization units are associated with a particular contract ID.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **View_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                "scope",
                ":scope",
                "value",
                ":scopeValue"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the scope category for which data should be retrieved. Supported values are: `contractIds`, `creditCards`, `installmentOptions`, `collectionIds`, `priceTables`, `paymentSystemIds`, `addresses`, `customFields`.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "contractIds",
                  "key": "scope"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier within the given scope. Example: For contractIds, use the contract ID.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "9025fbdd-6271-11f0-b37f-f5b4d28a6ca2",
                  "key": "scopeValue"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3781e819-e1fc-401e-8309-cec0593d4bd9",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    "scope",
                    ":scope",
                    "value",
                    ":scopeValue"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\",\n    \"name\": \"Marketing Department\"\n  },\n  {\n    \"id\": \"6b7a46c0-67d9-4b7d-95a1-1a5d0a6c7b9c\",\n    \"name\": \"Sales Department\"\n  }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "13c95bba-41e3-494c-86d8-7be818616041",
              "name": "No Content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    "scope",
                    ":scope",
                    "value",
                    ":scopeValue"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "No Content",
              "code": 204,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "60a9e249-2cd9-4800-ac1c-d6c4c56bc80a",
              "name": "Not Found",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    "scope",
                    ":scope",
                    "value",
                    ":scopeValue"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"No organization units found with the specified scope value.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f987a812-e744-4d17-9f14-fe9dc6e05da7",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/organization-units/v1/scope/:scope/value/:scopeValue - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/organization-units/v1/scope/:scope/value/:scopeValue - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/organization-units/v1/scope/:scope/value/:scopeValue - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"description\":\"Array of organization units that contain the specified scope value.\",\"items\":{\"type\":\"object\",\"description\":\"Simplified organization unit object.\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\",\"description\":\"Unique identifier of the organization unit.\"},\"name\":{\"type\":\"string\",\"description\":\"Name of the organization unit.\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/organization-units/v1/scope/:scope/value/:scopeValue - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "b9640a95-6eb1-4b68-a079-eb56dfe0d27b",
      "name": "Scopes",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "fef2231e-f165-4688-a0e9-2c3958721b45",
          "name": "Get organization unit scopes",
          "request": {
            "name": "Get organization unit scopes",
            "description": {
              "content": "Retrieves all scopes defined for a specific organization unit. Scopes represent domain-specific attributes such as contract IDs, collection IDs, or addresses.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **View_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                ":organizationUnitId",
                "scopes"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the organization unit.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a",
                  "key": "organizationUnitId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c4affcf6-53dd-470e-863c-a361f2d258ba",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "scopes"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"organizationUnitId\": \"92264b68-74da-4fc4-b51a-9ddcb8baf29a\",\n  \"scopes\": [\n    {\n      \"scope\": \"creditCards\",\n      \"ids\": [\n        \"21770434-1061-4ac5-bb4c-fce528aefbd1\"\n      ]\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1db1e99b-d180-47c4-95f9-9906c938e90c",
              "name": "Not Found",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "scopes"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Organization unit not found.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d819e978-026b-41ab-9ed5-d271318214e8",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId/scopes - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId/scopes - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId/scopes - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"organizationUnitId\":{\"type\":\"string\",\"description\":\"ID of the organization unit.\"},\"scopes\":{\"type\":\"array\",\"description\":\"List of scope objects assigned to the unit.\",\"items\":{\"type\":\"object\",\"properties\":{\"scope\":{\"type\":\"string\",\"description\":\"Type of the scope.\",\"enum\":[\"contractIds\",\"creditCards\",\"installmentOptions\",\"collectionIds\",\"priceTables\",\"paymentSystemIds\",\"addresses\",\"customFields\"]},\"ids\":{\"type\":\"array\",\"description\":\"List of IDs associated with the scope.\",\"items\":{\"type\":\"string\",\"description\":\"ID of the scope value.\"}}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/organization-units/v1/:organizationUnitId/scopes - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2571032b-48cf-407f-975a-a7ac2e2ddfa9",
          "name": "Delete all scopes from organization unit",
          "request": {
            "name": "Delete all scopes from organization unit",
            "description": {
              "content": "Deletes all scopes from an organization unit.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **Edit_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                ":organizationUnitId",
                "scopes"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the organization unit.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a",
                  "key": "organizationUnitId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a8dccf71-be17-444d-ae90-f583075c7a21",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "scopes"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\",\n  \"name\": \"Marketing Department\",\n  \"path\": {\n    \"ids\": \"apiexamples/8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\"\n  },\n  \"createdAt\": \"2025-10-21T10:30:00.000Z\",\n  \"updatedAt\": \"2025-10-21T16:00:00.000Z\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5da6c2d6-503b-439a-ba1f-303ef85d4569",
              "name": "Not Found",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "scopes"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Organization unit not found.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4597fef6-811e-4c39-b694-f4ef3a6a5440",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/organization-units/v1/:organizationUnitId/scopes - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/api/organization-units/v1/:organizationUnitId/scopes - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/api/organization-units/v1/:organizationUnitId/scopes - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Organization unit object.\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\",\"description\":\"Unique identifier of the organization unit.\"},\"name\":{\"type\":\"string\",\"description\":\"Name of the organization unit.\"},\"path\":{\"type\":\"object\",\"description\":\"Hierarchical path of the organization unit.\",\"properties\":{\"ids\":{\"type\":\"string\",\"description\":\"Forward-slash separated path of IDs from tenant root to this unit.\"}}},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was created.\"},\"updatedAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was last updated.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/api/organization-units/v1/:organizationUnitId/scopes - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bb8647b5-56e5-4dcb-a5ac-3cd07728b0ce",
          "name": "Create organization unit scope",
          "request": {
            "name": "Create organization unit scope",
            "description": {
              "content": "Creates a new scope with specified values for an organization unit. If the scope already exists, this operation will fail.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **Edit_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                ":organizationUnitId",
                "scopes",
                ":scope"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the organization unit.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a",
                  "key": "organizationUnitId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the scope category for which data should be retrieved. Supported values are: `contractIds`, `creditCards`, `installmentOptions`, `collectionIds`, `priceTables`, `paymentSystemIds`, `addresses`, `customFields`.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "contractIds",
                  "key": "scope"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ids\": [\n    \"contract-123\",\n    \"contract-456\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "64d567d8-248c-4d16-ba18-d989a45c54f2",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "scopes",
                    ":scope"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ids\": [\n    \"contract-123\",\n    \"contract-456\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"organizationUnitId\": \"8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\",\n  \"scope\": \"contractIds\",\n  \"ids\": [\n    \"contract-123\",\n    \"contract-456\"\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8eb90586-b71c-4d04-9afc-0a3353f80feb",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "scopes",
                    ":scope"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ids\": [\n    \"contract-123\",\n    \"contract-456\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Scope already exists for this organization unit.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5524447d-7ff9-4a3f-a1fe-0f6817af573b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/organization-units/v1/:organizationUnitId/scopes/:scope - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/organization-units/v1/:organizationUnitId/scopes/:scope - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/organization-units/v1/:organizationUnitId/scopes/:scope - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Response for scope creation, update, or removal operations.\",\"properties\":{\"organizationUnitId\":{\"type\":\"string\",\"format\":\"uuid\",\"description\":\"Unique identifier of the organization unit.\"},\"scope\":{\"type\":\"string\",\"description\":\"Scope type identifier.\"},\"ids\":{\"type\":\"array\",\"description\":\"Current list of values for this scope after the operation.\",\"items\":{\"type\":\"string\",\"description\":\"Scope value.\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/organization-units/v1/:organizationUnitId/scopes/:scope - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "464f6663-6649-49b3-8906-5734392d347f",
          "name": "Update organization unit scope",
          "request": {
            "name": "Update organization unit scope",
            "description": {
              "content": "Updates an existing scope by replacing all its values with the provided set.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **Edit_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                ":organizationUnitId",
                "scopes",
                ":scope"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the organization unit.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a",
                  "key": "organizationUnitId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the scope category for which data should be retrieved. Supported values are: `contractIds`, `creditCards`, `installmentOptions`, `collectionIds`, `priceTables`, `paymentSystemIds`, `addresses`, `customFields`.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "contractIds",
                  "key": "scope"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ids\": [\n    \"contract-123\",\n    \"contract-456\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3075e4ab-af92-49cd-bf16-ae8ff59c0f23",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "scopes",
                    ":scope"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ids\": [\n    \"contract-123\",\n    \"contract-456\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"organizationUnitId\": \"8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\",\n  \"scope\": \"contractIds\",\n  \"ids\": [\n    \"contract-789\",\n    \"contract-101\"\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a2878c96-5a17-46fc-a435-ddf4a42ec56a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "scopes",
                    ":scope"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ids\": [\n    \"contract-123\",\n    \"contract-456\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Invalid scope values provided.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "12b1da21-1ebd-41fe-838d-7d5b7f1807ed",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/organization-units/v1/:organizationUnitId/scopes/:scope - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/api/organization-units/v1/:organizationUnitId/scopes/:scope - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/api/organization-units/v1/:organizationUnitId/scopes/:scope - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Response for scope creation, update, or removal operations.\",\"properties\":{\"organizationUnitId\":{\"type\":\"string\",\"format\":\"uuid\",\"description\":\"Unique identifier of the organization unit.\"},\"scope\":{\"type\":\"string\",\"description\":\"Scope type identifier.\"},\"ids\":{\"type\":\"array\",\"description\":\"Current list of values for this scope after the operation.\",\"items\":{\"type\":\"string\",\"description\":\"Scope value.\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/api/organization-units/v1/:organizationUnitId/scopes/:scope - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "718d7f8b-1d58-4d1b-a697-96dadcc64d11",
          "name": "Delete organization unit scope",
          "request": {
            "name": "Delete organization unit scope",
            "description": {
              "content": "Deletes a specific scope from an organization unit, removing all associated values.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **Edit_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                ":organizationUnitId",
                "scopes",
                ":scope"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "key": "organizationUnitId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the scope category for which data should be retrieved. Supported values are: `contractIds`, `creditCards`, `installmentOptions`, `collectionIds`, `priceTables`, `paymentSystemIds`, `addresses`, `customFields`.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "contractIds",
                  "key": "scope"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the organization unit.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a",
                  "key": "unitId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9b7dc637-9a57-478c-a95d-5d4011d4b12d",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "scopes",
                    ":scope"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\",\n  \"name\": \"Marketing Department\",\n  \"path\": {\n    \"ids\": \"apiexamples/8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\"\n  },\n  \"createdAt\": \"2025-10-21T10:30:00.000Z\",\n  \"updatedAt\": \"2025-10-21T16:30:00.000Z\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7ea6c5ff-0514-4bc8-b31b-bca699cee75a",
              "name": "Not Found",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "scopes",
                    ":scope"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Scope not found.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6bc69e71-1778-49fe-989a-4efd7ebedc8f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/organization-units/v1/:organizationUnitId/scopes/:scope - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/api/organization-units/v1/:organizationUnitId/scopes/:scope - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/api/organization-units/v1/:organizationUnitId/scopes/:scope - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Organization unit object.\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\",\"description\":\"Unique identifier of the organization unit.\"},\"name\":{\"type\":\"string\",\"description\":\"Name of the organization unit.\"},\"path\":{\"type\":\"object\",\"description\":\"Hierarchical path of the organization unit.\",\"properties\":{\"ids\":{\"type\":\"string\",\"description\":\"Forward-slash separated path of IDs from tenant root to this unit.\"}}},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was created.\"},\"updatedAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the organization unit was last updated.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/api/organization-units/v1/:organizationUnitId/scopes/:scope - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "88591440-f677-477a-b27e-c5e6b262e771",
          "name": "Remove values from organization unit scope",
          "request": {
            "name": "Remove values from organization unit scope",
            "description": {
              "content": "Removes specific values from an organization unit scope without deleting the entire scope. If all values are removed, the scope remains but with an empty set of values.\n\n## Permissions\n\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\n\n| **Product** | **Category** | **Resource** |\n| --------------- | ----------------- | ----------------- |\n| Organization Units | units | **Edit_Organization_Unit** |\n\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\n\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\n\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "organization-units",
                "v1",
                ":organizationUnitId",
                "scopes",
                ":scope",
                "remove"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier (GUID) of the organization unit.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a",
                  "key": "organizationUnitId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the scope category for which data should be retrieved. Supported values are: `contractIds`, `creditCards`, `installmentOptions`, `collectionIds`, `priceTables`, `paymentSystemIds`, `addresses`, `customFields`.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "contractIds",
                  "key": "scope"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ids\": [\n    \"contract-123\",\n    \"contract-456\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "215becab-7d09-400a-bc34-0d3718577610",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "scopes",
                    ":scope",
                    "remove"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ids\": [\n    \"contract-123\",\n    \"contract-456\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"organizationUnitId\": \"8d8b68e2-89e1-4d9f-b7c3-3a7f2c8e9d1a\",\n  \"scope\": \"contractIds\",\n  \"ids\": [\n    \"contract-456\"\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "55eb3a82-e416-46da-8d84-ec55371a83a4",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "organization-units",
                    "v1",
                    ":organizationUnitId",
                    "scopes",
                    ":scope",
                    "remove"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "VtexIdclientAutCookie",
                    "value": "<API Key>"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ids\": [\n    \"contract-123\",\n    \"contract-456\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Invalid scope values provided.\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c71758fb-ba52-4807-a1de-7281fb22d07d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/organization-units/v1/:organizationUnitId/scopes/:scope/remove - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/api/organization-units/v1/:organizationUnitId/scopes/:scope/remove - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/api/organization-units/v1/:organizationUnitId/scopes/:scope/remove - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Response for scope creation, update, or removal operations.\",\"properties\":{\"organizationUnitId\":{\"type\":\"string\",\"format\":\"uuid\",\"description\":\"Unique identifier of the organization unit.\"},\"scope\":{\"type\":\"string\",\"description\":\"Scope type identifier.\"},\"ids\":{\"type\":\"array\",\"description\":\"Current list of values for this scope after the operation.\",\"items\":{\"type\":\"string\",\"description\":\"Scope value.\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/api/organization-units/v1/:organizationUnitId/scopes/:scope/remove - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "VtexIdclientAutCookie",
        "key": "key"
      },
      {
        "type": "any",
        "value": "{{apiKey}}",
        "key": "value"
      },
      {
        "type": "any",
        "value": "header",
        "key": "in"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "type": "any",
      "value": "apiexamples",
      "key": "accountName"
    },
    {
      "type": "any",
      "value": "myvtex",
      "key": "environment"
    },
    {
      "type": "any",
      "value": "https://{{accountName}}.{{environment}}.com",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "3010b967-9074-4819-ae90-2ef11f1b97e1",
    "name": "Organization Units API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "The Organization Units API enables you to manage B2B functionalities in your VTEX store, focusing on users and organization units. This API provides endpoints for managing users, organization units, and their associated scopes.\n\n## Index\n\n### Users\n- `GET` [Get scopes by user](https://developers.vtex.com/docs/api-reference/organization-units-api#get-/api/organization-units/v1/users/-userId-/scopes): Retrieves the scopes assigned to a user.\n\n### Organization Units\n- `GET` [Get organization unit children](https://developers.vtex.com/docs/api-reference/organization-units-api#get-/api/organization-units/v1/-organizationUnitId-/children): Retrieves child organization units.\n- `GET` [Get root organization units](https://developers.vtex.com/docs/api-reference/organization-units-api#get-/api/organization-units/v1/roots): Retrieves all root-level organization units.\n- `POST` [Move organization unit](https://developers.vtex.com/docs/api-reference/organization-units-api#post-/api/organization-units/v1/-organizationUnitId-/path): Moves an organization unit to a different parent.\n- `POST` [Add user to organization unit](https://developers.vtex.com/docs/api-reference/organization-units-api#post-/api/organization-units/v1/-organizationUnitId-/users): Adds a user to an organization unit.\n- `DELETE` [Remove users from organization unit](https://developers.vtex.com/docs/api-reference/organization-units-api#delete-/api/organization-units/v1/-organizationUnitId-/users): Removes a user from an organization unit.\n- `GET` [List users from organization unit](https://developers.vtex.com/docs/api-reference/organization-units-api#get-/api/organization-units/v1/-organizationUnitId-/users): Lists users in an organization unit.\n\n### Scopes\n- `GET` [Get organization unit scopes](https://developers.vtex.com/docs/api-reference/organization-units-api#get-/api/organization-units/v1/-organizationUnitId-/scopes): Retrieves all scopes for an organization unit.\n- `DELETE` [Delete all scopes](https://developers.vtex.com/docs/api-reference/organization-units-api#delete-/api/organization-units/v1/-organizationUnitId-/scopes): Removes all scopes from an organization unit.\n- `POST` [Create organization unit scope](https://developers.vtex.com/docs/api-reference/organization-units-api#post-/api/organization-units/v1/-organizationUnitId-/scopes/-scope-): Creates a new scope for an organization unit.\n- `PUT` [Update organization unit scope](https://developers.vtex.com/docs/api-reference/organization-units-api#put-/api/organization-units/v1/-organizationUnitId-/scopes/-scope-): Updates an existing scope.\n- `DELETE` [Delete organization unit scope](https://developers.vtex.com/docs/api-reference/organization-units-api#delete-/api/organization-units/v1/-organizationUnitId-/scopes/-scope-): Deletes a specific scope.\n- `DELETE` [Remove values from organization unit scope](https://developers.vtex.com/docs/api-reference/organization-units-api#delete-/api/organization-units/v1/-organizationUnitId-/scopes/-scope-/remove): Removes specific values from a scope.\n\n## Common parameters\n\n| Parameter name | Description | Type |\n| - | - | - |\n| `accountName` | Name of the VTEX account. Used as part of the URL. | Server variable. |\n| `environment` | Environment to use. Used as part of the URL. | Server variable. |\n| `VtexIdclientAutCookie` | [User token](https://developers.vtex.com/docs/guides/api-authentication-using-user-tokens), valid for 24 hours. | Authentication header. |",
      "type": "text/plain"
    }
  }
}