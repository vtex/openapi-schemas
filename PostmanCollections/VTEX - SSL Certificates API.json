{
  "_": {
    "postman_id": "55e6d065-676a-4c4a-b569-0519258087fd"
  },
  "item": [
    {
      "id": "dd90d68b-311b-4372-8de9-838702775afe",
      "name": "SSL Certificates",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a8ecfb4c-89d3-4890-94b9-70e127931398",
          "name": "List SSL certificates",
          "request": {
            "name": "List SSL certificates",
            "description": {
              "content": "Retrieves a list of SSL certificates.\r\n\r\n## Permissions\r\n\r\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| CDN API | Certificate management | **View certificate** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\r\n\r\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "edge",
                "certificates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "546ac5b0-e450-473a-8113-8ae208cd94a3",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "edge",
                    "certificates"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"8c66122e-85cd-4bff-885d-aa9846e97541\",\n    \"account\": \"myaccountname\",\n    \"host\": \"mystore.com\",\n    \"serialNumber\": \"05C51F848EDBAC18E91D9AE43D8F6728D4F8\",\n    \"subjectDistinguishedName\": \"CN=mystore.com\",\n    \"subjectCommonName\": \"mystore.com\",\n    \"subjectOrganization\": null,\n    \"issuerDistinguishedName\": \"CN=R10, O=Let's Encrypt, C=US\",\n    \"issuerCommonName\": \"R10\",\n    \"issuerOrganization\": \"Let's Encrypt\",\n    \"installDate\": \"2025-04-22T16:24:58.768939Z\",\n    \"startDate\": \"2024-08-29T01:43:25Z\",\n    \"expiryDate\": \"2024-11-27T01:43:24Z\",\n    \"signatureAlgorithm\": \"sha256RSA\",\n    \"x509Version\": \"3\",\n    \"installedBy\": \"22b312e1-f863-43t7-8c59-5n2f9ll0d09x\",\n    \"createdAt\": \"2024-10-25T17:51:51.222052Z\",\n    \"updatedAt\": \"2025-04-22T16:24:58.768939Z\",\n    \"status\": \"Active\"\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "845940d8-0988-4973-8402-bf0e1aa783ca",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/edge/certificates - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/edge/certificates - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/edge/certificates - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"description\":\"List of SSL certificates.\",\"items\":{\"type\":\"object\",\"description\":\"Information about each SSL certificate.\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique identifier of the certificate.\",\"nullable\":false},\"account\":{\"type\":\"string\",\"description\":\"Account name associated with the certificate.\",\"nullable\":false},\"host\":{\"type\":\"string\",\"description\":\"Primary host/domain of the certificate.\",\"nullable\":false},\"serialNumber\":{\"type\":\"string\",\"description\":\"Certificate serial number.\",\"nullable\":false},\"subjectDistinguishedName\":{\"type\":\"string\",\"description\":\"Full distinguished name of the subject.\",\"nullable\":false},\"subjectCommonName\":{\"type\":\"string\",\"description\":\"Common name (CN) of the certificate subject.\",\"nullable\":false},\"subjectOrganization\":{\"type\":[\"string\",\"null\"],\"description\":\"Organization (O) of the certificate subject.\"},\"issuerDistinguishedName\":{\"type\":\"string\",\"description\":\"Full distinguished name of the issuing certificate authority.\",\"nullable\":false},\"issuerCommonName\":{\"type\":\"string\",\"description\":\"Common name (CN) of the certificate issuer.\",\"nullable\":false},\"issuerOrganization\":{\"type\":\"string\",\"description\":\"Organization (O) of the certificate issuer.\",\"nullable\":false},\"installDate\":{\"type\":\"string\",\"description\":\"Timestamp when the certificate was installed in ISO 8601 format.\",\"nullable\":false},\"startDate\":{\"type\":\"string\",\"description\":\"Certificate validity start date in ISO 8601 format.\",\"nullable\":false},\"expiryDate\":{\"type\":\"string\",\"description\":\"Certificate expiry date in ISO 8601 format.\",\"nullable\":false},\"signatureAlgorithm\":{\"type\":\"string\",\"description\":\"Algorithm used to sign the certificate.\",\"nullable\":false},\"x509Version\":{\"type\":\"string\",\"description\":\"X.509 version of the certificate.\",\"nullable\":false},\"installedBy\":{\"type\":\"string\",\"description\":\"ID of the user that installed the certificate.\",\"nullable\":false},\"createdAt\":{\"type\":\"string\",\"description\":\"Creation timestamp of the certificate entry in ISO 8601 format.\",\"nullable\":false},\"updatedAt\":{\"type\":\"string\",\"description\":\"Timestamp of the last certificate update in ISO 8601 format.\",\"nullable\":false},\"status\":{\"type\":\"string\",\"description\":\"Current status of the certificate, which can be one of the following:\\n\\n- **Active**: Valid and active for the host.\\n- **Overwritten**: The certificate for this host has been replaced by another through an external method, such as an API call on the CDN.\\n- **Installing**: Certificate installation in progress.\\n- **Unknown**: The certificate status couldn't be determined due to internal technical problems with communication, configuration, or monitoring.\\n- **Expires soon**: The certificate is close to its expiration date (30 days before or less).\\n- **Installation failed**: After the status Installing, the installation can fail, and the user will need to try again later.\\n- **Expired**: The expiration date passed.\",\"nullable\":false,\"enum\":[\"Active\",\"Overwritten\",\"Installing\",\"Unknown\",\"Expires soon\",\"Installation failed\",\"Expired\"]}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/edge/certificates - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ea379985-512c-490a-a261-10191582aaac",
          "name": "Install or renew SSL certificate",
          "request": {
            "name": "Install or renew SSL certificate",
            "description": {
              "content": "Installs or renews an SSL certificate using `application/json` or `multipart/form-data` content types.\r\n\r\n## Permissions\r\n\r\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| CDN API | Certificate management | **Update certificate** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\r\n\r\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "edge",
                "certificates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"hosts\": [\n    \"mystore.com\",\n    \"mystore.com\"\n  ],\n  \"certificate\": \"LS0tLS1CRUd...S0tLS0K\",\n  \"privateKey\": \"LS0tLS1CRUd...LS0NCg==\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1162206d-0d1e-43ed-8467-05281f92166d",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "edge",
                    "certificates"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"hosts\": [\n    \"mystore.com\",\n    \"mystore.com\"\n  ],\n  \"certificate\": \"LS0tLS1CRUd...S0tLS0K\",\n  \"privateKey\": \"LS0tLS1CRUd...LS0NCg==\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"8c66122e-85cd-4bff-885d-aa9846e97541\",\n    \"account\": \"myaccountname\",\n    \"host\": \"mystore.com\",\n    \"serialNumber\": \"05C51F848EDBAC18E91D9AE43D8F6728D4F8\",\n    \"subjectDistinguishedName\": \"CN=mystore.com\",\n    \"subjectCommonName\": \"mystore.com\",\n    \"subjectOrganization\": null,\n    \"issuerDistinguishedName\": \"CN=R10, O=Let's Encrypt, C=US\",\n    \"issuerCommonName\": \"R10\",\n    \"issuerOrganization\": \"Let's Encrypt\",\n    \"installDate\": \"2025-04-22T16:24:58.768939Z\",\n    \"startDate\": \"2024-08-29T01:43:25Z\",\n    \"expiryDate\": \"2024-11-27T01:43:24Z\",\n    \"signatureAlgorithm\": \"sha256RSA\",\n    \"x509Version\": \"3\",\n    \"installedBy\": \"22b312e1-f863-43t7-8c59-5n2f9ll0d09x\",\n    \"createdAt\": \"2024-10-25T17:51:51.222052Z\",\n    \"updatedAt\": \"2025-04-22T16:24:58.768939Z\",\n    \"status\": \"Installing\"\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "323ebbae-c5de-4297-a92c-35ea51d2d791",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/edge/certificates - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/api/edge/certificates - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/api/edge/certificates - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"description\":\"List of SSL certificates.\",\"items\":{\"type\":\"object\",\"description\":\"Information about each SSL certificate.\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique identifier of the certificate.\",\"nullable\":false},\"account\":{\"type\":\"string\",\"description\":\"Account name associated with the certificate.\",\"nullable\":false},\"host\":{\"type\":\"string\",\"description\":\"Primary host/domain of the certificate.\",\"nullable\":false},\"serialNumber\":{\"type\":\"string\",\"description\":\"Certificate serial number.\",\"nullable\":false},\"subjectDistinguishedName\":{\"type\":\"string\",\"description\":\"Full distinguished name of the subject.\",\"nullable\":false},\"subjectCommonName\":{\"type\":\"string\",\"description\":\"Common name (CN) of the certificate subject.\",\"nullable\":false},\"subjectOrganization\":{\"type\":[\"string\",\"null\"],\"description\":\"Organization (O) of the certificate subject.\"},\"issuerDistinguishedName\":{\"type\":\"string\",\"description\":\"Full distinguished name of the issuing certificate authority.\",\"nullable\":false},\"issuerCommonName\":{\"type\":\"string\",\"description\":\"Common name (CN) of the certificate issuer.\",\"nullable\":false},\"issuerOrganization\":{\"type\":\"string\",\"description\":\"Organization (O) of the certificate issuer.\",\"nullable\":false},\"installDate\":{\"type\":\"string\",\"description\":\"Timestamp when the certificate was installed in ISO 8601 format.\",\"nullable\":false},\"startDate\":{\"type\":\"string\",\"description\":\"Certificate validity start date in ISO 8601 format.\",\"nullable\":false},\"expiryDate\":{\"type\":\"string\",\"description\":\"Certificate expiry date in ISO 8601 format.\",\"nullable\":false},\"signatureAlgorithm\":{\"type\":\"string\",\"description\":\"Algorithm used to sign the certificate.\",\"nullable\":false},\"x509Version\":{\"type\":\"string\",\"description\":\"X.509 version of the certificate.\",\"nullable\":false},\"installedBy\":{\"type\":\"string\",\"description\":\"ID of the user that installed the certificate.\",\"nullable\":false},\"createdAt\":{\"type\":\"string\",\"description\":\"Creation timestamp of the certificate entry in ISO 8601 format.\",\"nullable\":false},\"updatedAt\":{\"type\":\"string\",\"description\":\"Timestamp of the last certificate update in ISO 8601 format.\",\"nullable\":false},\"status\":{\"type\":\"string\",\"description\":\"Current status of the certificate, which can be one of the following:\\n\\n- **Active**: Valid and active for the host.\\n- **Overwritten**: The certificate for this host has been replaced by another through an external method, such as an API call on the CDN.\\n- **Installing**: Certificate installation in progress.\\n- **Unknown**: The certificate status couldn't be determined due to internal technical problems with communication, configuration, or monitoring.\\n- **Expires soon**: The certificate is close to its expiration date (30 days before or less).\\n- **Installation failed**: After the status Installing, the installation can fail, and the user will need to try again later.\\n- **Expired**: The expiration date passed.\",\"nullable\":false,\"enum\":[\"Active\",\"Overwritten\",\"Installing\",\"Unknown\",\"Expires soon\",\"Installation failed\",\"Expired\"]}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/api/edge/certificates - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "51001531-7c4a-44f8-897a-4475b5f8f4ef",
          "name": "Get SSL certificate by ID",
          "request": {
            "name": "Get SSL certificate by ID",
            "description": {
              "content": "Retrieves information about a specific SSL certificate.\r\n\r\n## Permissions\r\n\r\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| CDN API | Certificate management | **View certificate** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\r\n\r\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "edge",
                "certificates",
                ":certificateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) SSL certificate unique identifier.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "8c66122e-85cd-4bff-885d-aa9846e97541",
                  "key": "certificateId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2d55c28e-58ec-436d-8768-a9400540f420",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "edge",
                    "certificates",
                    ":certificateId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"8c66122e-85cd-4bff-885d-aa9846e97541\",\n  \"account\": \"myaccountname\",\n  \"host\": \"mystore.com\",\n  \"serialNumber\": \"05C51F848EDBAC18E91D9AE43D8F6728D4F8\",\n  \"subjectDistinguishedName\": \"CN=mystore.com\",\n  \"subjectCommonName\": \"mystore.com\",\n  \"subjectOrganization\": null,\n  \"issuerDistinguishedName\": \"CN=R10, O=Let's Encrypt, C=US\",\n  \"issuerCommonName\": \"R10\",\n  \"issuerOrganization\": \"Let's Encrypt\",\n  \"installDate\": \"2025-04-22T16:24:58.768939Z\",\n  \"startDate\": \"2024-08-29T01:43:25Z\",\n  \"expiryDate\": \"2024-11-27T01:43:24Z\",\n  \"signatureAlgorithm\": \"sha256RSA\",\n  \"x509Version\": \"3\",\n  \"installedBy\": \"22b312e1-f863-43t7-8c59-5n2f9ll0d09x\",\n  \"createdAt\": \"2024-10-25T17:51:51.222052Z\",\n  \"updatedAt\": \"2025-04-22T16:24:58.768939Z\",\n  \"status\": \"Active\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f8c33cce-6652-4001-9c7a-c855a6cc460d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/edge/certificates/:certificateId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/edge/certificates/:certificateId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/edge/certificates/:certificateId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Information about an SSL certificate.\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique identifier of the certificate.\",\"nullable\":false},\"account\":{\"type\":\"string\",\"description\":\"Account name associated with the certificate.\",\"nullable\":false},\"host\":{\"type\":\"string\",\"description\":\"Primary host/domain of the certificate.\",\"nullable\":false},\"serialNumber\":{\"type\":\"string\",\"description\":\"Certificate serial number.\",\"nullable\":false},\"subjectDistinguishedName\":{\"type\":\"string\",\"description\":\"Full distinguished name of the subject.\",\"nullable\":false},\"subjectCommonName\":{\"type\":\"string\",\"description\":\"Common name (CN) of the certificate subject.\",\"nullable\":false},\"subjectOrganization\":{\"type\":[\"string\",\"null\"],\"description\":\"Organization (O) of the certificate subject.\"},\"issuerDistinguishedName\":{\"type\":\"string\",\"description\":\"Full distinguished name of the issuing certificate authority.\",\"nullable\":false},\"issuerCommonName\":{\"type\":\"string\",\"description\":\"Common name (CN) of the certificate issuer.\",\"nullable\":false},\"issuerOrganization\":{\"type\":\"string\",\"description\":\"Organization (O) of the certificate issuer.\",\"nullable\":false},\"installDate\":{\"type\":\"string\",\"description\":\"Timestamp when the certificate was installed in ISO 8601 format.\",\"nullable\":false},\"startDate\":{\"type\":\"string\",\"description\":\"Certificate validity start date in ISO 8601 format.\",\"nullable\":false},\"expiryDate\":{\"type\":\"string\",\"description\":\"Certificate expiry date in ISO 8601 format.\",\"nullable\":false},\"signatureAlgorithm\":{\"type\":\"string\",\"description\":\"Algorithm used to sign the certificate.\",\"nullable\":false},\"x509Version\":{\"type\":\"string\",\"description\":\"X.509 version of the certificate.\",\"nullable\":false},\"installedBy\":{\"type\":\"string\",\"description\":\"ID of the user that installed the certificate.\",\"nullable\":false},\"createdAt\":{\"type\":\"string\",\"description\":\"Creation timestamp of the certificate entry in ISO 8601 format.\",\"nullable\":false},\"updatedAt\":{\"type\":\"string\",\"description\":\"Timestamp of the last certificate update in ISO 8601 format.\",\"nullable\":false},\"status\":{\"type\":\"string\",\"description\":\"Current status of the certificate, which can be one of the following:\\n\\n- **Active**: Valid and active for the host.\\n- **Overwritten**: The certificate for this host has been replaced by another through an external method, such as an API call on the CDN.\\n- **Installing**: Certificate installation in progress.\\n- **Unknown**: The certificate status couldn't be determined due to internal technical problems with communication, configuration, or monitoring.\\n- **Expires soon**: The certificate is close to its expiration date (30 days before or less).\\n- **Installation failed**: After the status Installing, the installation can fail, and the user will need to try again later.\\n- **Expired**: The expiration date passed.\",\"nullable\":false,\"enum\":[\"Active\",\"Overwritten\",\"Installing\",\"Unknown\",\"Expires soon\",\"Installation failed\",\"Expired\"]}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/edge/certificates/:certificateId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "X-VTEX-API-AppKey",
        "key": "key"
      },
      {
        "type": "any",
        "value": "{{apiKey}}",
        "key": "value"
      },
      {
        "type": "any",
        "value": "header",
        "key": "in"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "type": "any",
      "value": "apiexamples",
      "key": "accountName"
    },
    {
      "type": "any",
      "value": "vtexcommercestable",
      "key": "environment"
    },
    {
      "type": "any",
      "value": "https://{{accountName}}.{{environment}}.com.br",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "55e6d065-676a-4c4a-b569-0519258087fd",
    "name": "SSL Certificates API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "The SSL Certificates API allows VTEX users to programmatically manage SSL certificates for their store domains. It enables users to list all installed certificates and install or renew certificates using JSON or multipart form data.\r\n\r\nThe API provides detailed metadata about each certificate, including issuer, subject, validity period, installation status, and more. This helps ensure secure HTTPS connections for custom domains, automating certificate lifecycle management and supporting integration with external certificate authorities or automation tools.\r\n\r\n>‚ÑπÔ∏è Learn more about [Custom SSL certificates](https://help.vtex.com/en/tutorial/custom-ssl-certificates--1hoaDEbU50PDZSe6AYep9q).\r\n\r\n>‚ÑπÔ∏è This feature is part of [VTEX Shield](https://help.vtex.com/en/tutorial/vtex-shield--2CVk6H9eY2CBtHjtDI7BFh). If you are already a VTEX customer and want to adopt VTEX Shield for your business, please contact [Commercial Support](https://help.vtex.com/en/tracks/support-at-vtex--4AXsGdGHqExp9ZkiNq9eMy/3KQWGgkPOwbFTPfBxL7YwZ). Additional fees may apply. If you are not yet a customer but are interested in this solution, please complete our [contact form](https://vtex.com/br-pt/contato/).\r\n\r\n## Index\r\n\r\n### SSL Certificates\r\n\r\n- `GET` [List SSL certificates](https://developers.vtex.com/docs/api-reference/ssl-certificates-api#get-/api/edge/certificates)\r\n- `GET` [Get SSL certificate by ID](https://developers.vtex.com/docs/api-reference/ssl-certificates-api#get-/api/edge/certificates/-certificateId-)\r\n- `PUT` [Install or renew SSL certificate](https://developers.vtex.com/docs/api-reference/ssl-certificates-api#put-/api/edge/certificates)\r\n\r\n## Common parameters\r\n\r\n| Parameter name | Description | Type |\r\n|-|-|-|\r\n| `{{accountName}}` | Name of the VTEX account. Used as part of the URL. | Server variable |\r\n| `{{environment}}` | Environment to use. Used as part of the URL. The default value is `vtexcommercestable`. | Server variable     |\r\n| `X-VTEX-API-AppKey` | Unique identifier of the [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys). | Authentication header |\r\n| `X-VTEX-API-AppToken` | Secret token of the [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys). | Authentication header |\r\n| `VtexIdclientAutCookie` | [User token](https://developers.vtex.com/docs/guides/api-authentication-using-user-tokens), valid for 24 hours. | Authentication header |\r\n",
      "type": "text/plain"
    }
  }
}