{
  "_": {
    "postman_id": "58fa57d0-4c3b-42ef-80e1-4c7c7598ce54"
  },
  "item": [
    {
      "id": "96bfd663-0f0e-456d-b3a5-f08e05f9f04b",
      "name": "Punchout login",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "138b156d-f9a7-47ac-ae8f-c85b49c90382",
          "name": "Start VTEX user punchout flow",
          "request": {
            "name": "Start VTEX user punchout flow",
            "description": {
              "content": "Initiates punchout authentication for an existing VTEX user.\r\n\r\nThis endpoint validates the credentials against the VTEX user database. If validation succeeds, it returns a URL containing a one-time token that can be accessed via web browser to start an authenticated session. \r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "authenticator",
                "punchout",
                "start"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "description": {
                    "content": "Optional path that will complement the `storeHost` for post-authentication redirection. This value is validated against a list of authorized hosts to prevent open redirect vulnerabilities.",
                    "type": "text/plain"
                  },
                  "key": "returnURL",
                  "value": "/path"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"user@example.com\",\n  \"password\": \"mypassword123\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "834082cd-8cb5-453e-a00c-9cd8f9fbd5ef",
              "name": "OK - Credentials validated successfully and OTT generated",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "authenticator",
                    "punchout",
                    "start"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Optional path that will complement the `storeHost` for post-authentication redirection. This value is validated against a list of authorized hosts to prevent open redirect vulnerabilities.",
                        "type": "text/plain"
                      },
                      "key": "returnURL",
                      "value": "/path"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"user@example.com\",\n  \"password\": \"mypassword123\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"url\": \"https://apiexamples.com/intermediate-path?token=xyz123\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4121f3e0-baeb-41f7-b2e7-c7f5d6c4bcef",
              "name": "Bad Request - Invalid request payload or missing required fields",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "authenticator",
                    "punchout",
                    "start"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Optional path that will complement the `storeHost` for post-authentication redirection. This value is validated against a list of authorized hosts to prevent open redirect vulnerabilities.",
                        "type": "text/plain"
                      },
                      "key": "returnURL",
                      "value": "/path"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"user@example.com\",\n  \"password\": \"mypassword123\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c1206571-6116-43be-926d-eb4df82fa307",
              "name": "Unauthorized - Invalid credentials",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "authenticator",
                    "punchout",
                    "start"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Optional path that will complement the `storeHost` for post-authentication redirection. This value is validated against a list of authorized hosts to prevent open redirect vulnerabilities.",
                        "type": "text/plain"
                      },
                      "key": "returnURL",
                      "value": "/path"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"user@example.com\",\n  \"password\": \"mypassword123\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "ec4c2384-a9f0-49ba-af91-e469f3dece53",
              "name": "Forbidden - Provided returnURL does not match an authorized host",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "authenticator",
                    "punchout",
                    "start"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Optional path that will complement the `storeHost` for post-authentication redirection. This value is validated against a list of authorized hosts to prevent open redirect vulnerabilities.",
                        "type": "text/plain"
                      },
                      "key": "returnURL",
                      "value": "/path"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"user@example.com\",\n  \"password\": \"mypassword123\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d0d9b0d-4009-43fd-91f5-d7cd7f3f42af",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/authenticator/punchout/start - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/authenticator/punchout/start - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/authenticator/punchout/start - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"url\":{\"type\":\"string\",\"description\":\"URL containing a one-time token for authentication. The token expires after 5 minutes and is single-use to prevent replay attacks.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/authenticator/punchout/start - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c5d66752-c843-4571-95db-6feb5c200f0b",
          "name": "Start pre-authenticated user punchout flow",
          "request": {
            "name": "Start pre-authenticated user punchout flow",
            "description": {
              "content": "Initiates punchout authentication for a pre-authenticated user who doesn't exist in VTEX. This endpoint must be called with valid API key/token credentials associated with a role with the CanPunchout permission. No password validation is performed as the caller is pre-authenticated.\r\n\r\n## Permissions\r\n\r\nAny user or [API key](https://developers.vtex.com/docs/guides/authentication-overview#api-keys) must have the appropriate [License Manager resource](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. This is the applicable resource for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Vtex ID | Identity Providers | **CanPunchout** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "authenticator",
                "punchout",
                "authenticated",
                "start"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "description": {
                    "content": "Optional path that will complement the `storeHost` for post-authentication redirection. This value is validated against a list of authorized hosts to prevent open redirect vulnerabilities.",
                    "type": "text/plain"
                  },
                  "key": "returnURL",
                  "value": "/path"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"procurement.user@example.com\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "type": "any",
                  "value": "X-VTEX-API-AppKey",
                  "key": "key"
                },
                {
                  "type": "any",
                  "value": "{{apiKey}}",
                  "key": "value"
                },
                {
                  "type": "any",
                  "value": "header",
                  "key": "in"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d4b1e837-7b9c-4b1b-a380-9e92fc589c0c",
              "name": "OK - Authentication successful and OTT generated",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "authenticator",
                    "punchout",
                    "authenticated",
                    "start"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Optional path that will complement the `storeHost` for post-authentication redirection. This value is validated against a list of authorized hosts to prevent open redirect vulnerabilities.",
                        "type": "text/plain"
                      },
                      "key": "returnURL",
                      "value": "/path"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"procurement.user@example.com\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"url\": \"https://apiexamples.com/intermediate-path?token=xyz123\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "0e7a23f0-42b6-422d-9412-205e99bb3194",
              "name": "Bad Request - Invalid request payload or missing required fields",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "authenticator",
                    "punchout",
                    "authenticated",
                    "start"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Optional path that will complement the `storeHost` for post-authentication redirection. This value is validated against a list of authorized hosts to prevent open redirect vulnerabilities.",
                        "type": "text/plain"
                      },
                      "key": "returnURL",
                      "value": "/path"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"procurement.user@example.com\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "0da60a5c-e096-42b3-9490-fcf78d420a7f",
              "name": "Unauthorized - Invalid API credentials",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "authenticator",
                    "punchout",
                    "authenticated",
                    "start"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Optional path that will complement the `storeHost` for post-authentication redirection. This value is validated against a list of authorized hosts to prevent open redirect vulnerabilities.",
                        "type": "text/plain"
                      },
                      "key": "returnURL",
                      "value": "/path"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"procurement.user@example.com\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "78ccf7b6-dff6-4ba5-9541-0f7b9e8fe46d",
              "name": "Forbidden - Provided returnURL does not match an authorized host or missing CanPunchout permission",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "authenticator",
                    "punchout",
                    "authenticated",
                    "start"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Optional path that will complement the `storeHost` for post-authentication redirection. This value is validated against a list of authorized hosts to prevent open redirect vulnerabilities.",
                        "type": "text/plain"
                      },
                      "key": "returnURL",
                      "value": "/path"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"procurement.user@example.com\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7c339c44-ebc5-4a21-863f-40f10cb82e97",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/authenticator/punchout/authenticated/start - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/authenticator/punchout/authenticated/start - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/authenticator/punchout/authenticated/start - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"url\":{\"type\":\"string\",\"description\":\"URL containing a one-time token for authentication. The token expires after 5 minutes and is single-use to prevent replay attacks.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/authenticator/punchout/authenticated/start - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "any",
      "value": "apiexamples.com",
      "key": "storeHost"
    },
    {
      "type": "any",
      "value": "https://{{storeHost}}",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "58fa57d0-4c3b-42ef-80e1-4c7c7598ce54",
    "name": "Punchout API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "The Punchout API enables seamless login integration between external procurement systems and VTEX. It allows procurement system users to authenticate into VTEX without manual credential management, using a secure OAuth2-like flow with real-time credential validation and one-time tokens (OTT).\r\n\r\n>ℹ️ Learn more about [Punchout login integration](https://developers.vtex.com/docs/guides/punchout-login-integration).\r\n\r\n## Endpoint requirements\r\n\r\n- OTTs expire after 5 minutes and are single-use to prevent replay attacks.\r\n- Return URLs are validated against authorized hosts to prevent open redirect vulnerabilities.\r\n\r\n## Index\r\n\r\n### Punchout login\r\n\r\n-  `POST` [Start VTEX user punchout flow](https://developers.vtex.com/docs/api-reference/punchout-api#post-/api/authenticator/punchout/start)\r\n\r\n- `POST` [Start pre-authenticated user punchout flow](https://developers.vtex.com/docs/api-reference/punchout-api#post-/api/authenticator/punchout/authenticated/start)",
      "type": "text/plain"
    }
  }
}